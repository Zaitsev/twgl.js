{"version":3,"sources":["webpack://twgl/webpack/universalModuleDefinition","webpack://twgl/webpack/bootstrap","webpack://twgl/./src/attributes.js","webpack://twgl/./src/draw.js","webpack://twgl/./src/framebuffers.js","webpack://twgl/./src/helper.js","webpack://twgl/./src/m4.js","webpack://twgl/./src/primitives.js","webpack://twgl/./src/programs.js","webpack://twgl/./src/textures.js","webpack://twgl/./src/twgl-full.js","webpack://twgl/./src/twgl.js","webpack://twgl/./src/typedarrays.js","webpack://twgl/./src/utils.js","webpack://twgl/./src/v3.js","webpack://twgl/./src/vertex-arrays.js"],"names":["gl","undefined","defaults","attribPrefix","setAttributePrefix","prefix","setDefaults","newDefaults","helper","copyExistingProperties","setBufferFromTypedArray","type","buffer","array","drawType","bindBuffer","bufferData","STATIC_DRAW","createBufferFromTypedArray","typedArray","isBuffer","ARRAY_BUFFER","createBuffer","isIndices","name","getNormalizationForTypedArray","Int8Array","Uint8Array","getNormalizationForTypedArrayType","typedArrayType","getArray","length","data","texcoordRE","colorRE","guessNumComponentsFromName","numComponents","test","getNumComponents","arrayName","size","makeTypedArray","typedArrays","isArrayBuffer","Array","isArray","Type","Uint16Array","Float32Array","createAttribsFromArrays","arrays","attribs","Object","keys","forEach","attribName","attrib","value","Error","normalization","WebGLBuffer","normalize","numValues","arrayType","numBytes","BYTES_PER_ELEMENT","getGLTypeForTypedArrayType","getGLTypeForTypedArray","stride","offset","divisor","setAttribInfoBufferFromArray","attribInfo","bufferSubData","getBytesPerValueForGLType","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","positionKeys","getNumElementsFromNonIndexedArrays","key","ii","numElements","getNumElementsFromAttributes","getBufferParameter","BUFFER_SIZE","bytesPerValue","totalElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","indices","newIndices","ELEMENT_ARRAY_BUFFER","elementType","createBufferFromArray","createBuffersFromArrays","buffers","drawBufferInfo","count","instanceCount","TRIANGLES","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","programInfo","vertexArrayInfo","bindBuffers","useProgram","program","vertexArrayObject","bindVertexArray","programs","setBuffersAndAttributes","setUniforms","uniforms","DEPTH_COMPONENT","RGBA","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","defaultAttachments","format","min","wrap","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","createFramebufferInfo","attachments","width","height","target","FRAMEBUFFER","fb","createFramebuffer","bindFramebuffer","drawingBufferWidth","drawingBufferHeight","colorAttachmentCount","framebufferInfo","framebuffer","attachmentOptions","attachment","attachmentPoint","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","textureOptions","auto","minMag","mag","wrapS","wrapT","textures","createTexture","isRenderbuffer","framebufferRenderbuffer","isTexture","framebufferTexture2D","texTarget","TEXTURE_2D","level","push","resizeFramebufferInfo","ndx","resizeTexture","bindFramebufferInfo","viewport","copyNamedProperties","names","src","dst","hasOwnProperty","error","console","bind","warn","repBuffer","t","constructor","repRenderbuffer","repShader","isShader","createShader","VERTEX_SHADER","repTexture","repSampler","isSampler","createSampler","MatType","tempV3a","v3","create","tempV3b","tempV3c","setDefaultType","ctor","oldType","negate","m","copy","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","d","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","v","getTranslation","getAxis","axis","off","setAxis","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","Math","tan","PI","rangeInv","ortho","left","right","bottom","top","near","far","frustum","dx","dy","dz","lookAt","eye","up","xAxis","yAxis","zAxis","subtract","cross","translation","translate","v0","v1","v2","rotationX","angleInRadians","c","cos","s","sin","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","x","y","z","n","sqrt","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal","mi","attributes","getArray_","getNumComponents_","augmentTypedArray","cursor","arguments","jj","reset","opt_index","defineProperty","get","createAugmentedTypedArray","opt_type","allButIndices","deindexVertices","vertices","newVertices","expandToUnindexed","channel","srcBuffer","dstBuffer","filter","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","applyFuncToV3Array","matrix","fn","len","tmp","reorientDirections","m4","reorientNormals","reorientPositions","reorientVertices","indexOf","createXYQuadVertices","xOffset","yOffset","position","texcoord","createPlaneVertices","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","createSphereVertices","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","numVertsAround","CUBE_FACE_INDICES","createCubeVertices","k","cornerVertices","faceNormals","uvCoords","faceIndices","uv","createTruncatedConeVertices","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","start","end","ringRadius","expandRLEData","rleData","padding","runLength","element","slice","apply","create3DFVertices","colors","numVerts","color","createCresentVertices","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","lerp","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","add","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","createCylinderVertices","createTorusVertices","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","nextRingIndex","nextSliceIndex","createDiscVertices","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","i","randInt","random","makeRandomVertexColors","options","vcolors","rand","numVertsPerColor","vertsPerColor","numSets","createBufferFunc","prototype","call","createBufferInfoFunc","arraySpecPropertyNames","copyElements","dstNdx","createArrayOfSameType","srcArray","arraySrc","newArray","newArraySpec","concatVertices","arrayOfArrays","baseName","arrayInfo","getLengthOfCombinedArrays","arraySpec","spec","copyArraysToNewArray","base","baseIndex","newArrays","info","duplicateVertices","create3DFBufferInfo","create3DFBuffers","createCubeBufferInfo","createCubeBuffers","createPlaneBufferInfo","createPlaneBuffers","createSphereBufferInfo","createSphereBuffers","createTruncatedConeBufferInfo","createTruncatedConeBuffers","createXYQuadBufferInfo","createXYQuadBuffers","createCresentBufferInfo","createCresentBuffers","createCylinderBufferInfo","createCylinderBuffers","createTorusBufferInfo","createTorusBuffers","createDiscBufferInfo","createDiscBuffers","getElementById","document","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","typeMap","getBindPointForSamplerType","bindPoint","floatSetter","location","uniform1f","floatArraySetter","uniform1fv","floatVec2Setter","uniform2fv","floatVec3Setter","uniform3fv","floatVec4Setter","uniform4fv","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","uintSetter","uniform1ui","uintArraySetter","uniform1uiv","uintVec2Setter","uniform2uiv","uintVec3Setter","uniform3uiv","uintVec4Setter","uniform4uiv","floatMat2Setter","uniformMatrix2fv","floatMat3Setter","uniformMatrix3fv","floatMat4Setter","uniformMatrix4fv","floatMat23Setter","uniformMatrix2x3fv","floatMat32Setter","uniformMatrix3x2fv","floatMat24Setter","uniformMatrix2x4fv","floatMat42Setter","uniformMatrix4x2fv","floatMat34Setter","uniformMatrix3x4fv","floatMat43Setter","uniformMatrix4x3fv","samplerSetter","unit","utils","isWebGL2","textureOrPair","texture","sampler","activeTexture","TEXTURE0","bindTexture","bindSampler","samplerArraySetter","units","Int32Array","index","setter","arraySetter","Uint32Array","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","rowOffset","attrTypeMap","addLineNumbers","lineOffset","split","map","line","join","spaceRE","loadShader","shaderSource","shaderType","opt_errorCallback","errFn","shader","replace","compileShader","compiled","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","getProgramOptions","opt_attribs","opt_locations","transformFeedbackVaryings","transformFeedbackMode","errorCallback","opt","attribLocations","defaultShaderType","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","shaders","createProgram","progOptions","realShaders","newShaders","elem","text","attachShader","bindAttribLocation","varyings","SEPARATE_ATTRIBS","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShaderFromScript","scriptId","opt_shaderType","shaderScript","createProgramFromScripts","shaderScriptIds","createProgramFromSources","shaderSources","isBuiltIn","startsWith","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createTransformFeedbackInfo","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","varying","getTransformFeedbackVarying","bindTransformFeedbackInfo","transformFeedbackInfo","buf","bindBufferRange","TRANSFORM_FEEDBACK_BUFFER","bindBufferBase","unbindTransformFeedbackInfo","createTransformFeedback","tf","bindTransformFeedback","TRANSFORM_FEEDBACK","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","getActiveUniformBlockName","blockSpec","usedByVertexShader","getActiveUniformBlockParameter","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","createUniformBlockInfoFromProgram","uniformBlockSpec","blockName","ArrayBuffer","uniformBufferIndex","UNIFORM_BUFFER","uniformBlockBinding","uniformNdx","asFloat","createUniformBlockInfo","bindUniformBlock","uniformBlockInfo","bufferBindIndex","byteLength","setUniformBlock","DYNAMIC_DRAW","setBlockUniforms","values","set","setters","actualSetters","numArgs","andx","vals","createAttributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","setAttributes","createProgramInfoFromProgram","createProgramInfo","good","source","script","textureColor","crossOrigin","ctx","createElement","getContext","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","DEPTH24_STENCIL8","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","formatInfo","numColorComponents","textureInternalFormatInfo","textureFormat","colorRenderable","textureFilterable","bytesPerElement","internalFormat","bytesPerElementMap","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","isPowerOf2","canGenerateMipmap","canFilter","getNumComponentsForFormat","getTextureTypeForArrayType","defaultType","guessDimensions","setDefaultTextureColor","lastPackState","savePackState","colorspaceConversion","getParameter","UNPACK_COLORSPACE_CONVERSION_WEBGL","pixelStorei","premultiplyAlpha","UNPACK_PREMULTIPLY_ALPHA_WEBGL","flipY","UNPACK_FLIP_Y_WEBGL","restorePackState","saveSkipState","unpackAlignment","UNPACK_ALIGNMENT","unpackRowLength","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","restoreSkipState","setTextureSamplerParameters","parameteriFn","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","setTextureParameters","tex","texParameteri","setSamplerParameters","samplerParameteri","createSamplers","samplerOptions","samplers","make1Pixel","setTextureFilteringForSize","generateMipmap","filtering","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","faces","facesWithNdx","face","sort","setTextureFromElement","formatType","imgWidth","imgHeight","slices","nodeName","canvas","drawImage","texImage2D","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","max","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","noop","urlIsSameOrigin","url","href","hostname","port","protocol","localOrigin","URL","origin","urlOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","loadImage","callback","img","Image","clearEventHandlers","removeEventListener","onError","onLoad","msg","addEventListener","ImageBitmap","err","bm","cb","mode","fetch","response","ok","blob","bitmap","setTimeout","catch","e","isTexImageSource","obj","ImageData","HTMLElement","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","errors","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","setTextureFromArray","getTypedArrayTypeForGLType","Uint8ClampedArray","glEnumToString","dimensions","cbrt","elementsPerElement","faceSize","subarray","setEmptyTexture","isAsyncSrc","createTextures","numDownloading","images","callCallbackIfReady","onLoadFn","addExtensionsToContext","setAttributeDefaults_","setTextureDefaults_","prefixRE","addExtensionToContext","extensionName","ext","getExtension","enums","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","create3DContext","context","getWebGLContext","createContext","resizeCanvasToDisplaySize","multiplier","clientWidth","clientHeight","glTypeToTypedArray","tt","Int16Array","CTOR","SharedArrayBuffer","isArrayBufferOrSharedArrayBuffer","texStorage2D","isWebGL1","haveEnumsForType","addEnums","existing","VecType","lerpV","mulScalar","divScalar","dot","lengthSq","distance","distanceSq","lenSq","divide","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo"],"mappings":"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","file":"twgl-full.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/twgl-full.js\");\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as typedArrays from './typedarrays.js';\r\nimport * as helper from './helper.js';\r\n\r\n/**\r\n * Low level attribute and buffer related functions\r\n *\r\n * You should generally not need to use these functions. They are provided\r\n * for those cases where you're doing something out of the ordinary\r\n * and you need lower level access.\r\n *\r\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/attributes\r\n */\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\nconst defaults = {\r\n  attribPrefix: \"\",\r\n};\r\n\r\n/**\r\n * Sets the default attrib prefix\r\n *\r\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\r\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\r\n *\r\n * In otherwords I'll create arrays of geometry like this\r\n *\r\n *     var arrays = {\r\n *       position: ...\r\n *       normal: ...\r\n *       texcoord: ...\r\n *     };\r\n *\r\n * But need those mapped to attributes and my attributes start with `a_`.\r\n *\r\n * @deprecated see {@link module:twgl.setDefaults}\r\n * @param {string} prefix prefix for attribs\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction setAttributePrefix(prefix) {\r\n  defaults.attribPrefix = prefix;\r\n}\r\n\r\nfunction setDefaults(newDefaults) {\r\n  helper.copyExistingProperties(newDefaults, defaults);\r\n}\r\n\r\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\r\n  gl.bindBuffer(type, buffer);\r\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\r\n}\r\n\r\n/**\r\n * Given typed array creates a WebGLBuffer and copies the typed array\r\n * into it.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\r\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\r\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\r\n * @return {WebGLBuffer} the created WebGLBuffer\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\r\n  if (helper.isBuffer(gl, typedArray)) {\r\n    return typedArray;\r\n  }\r\n  type = type || gl.ARRAY_BUFFER;\r\n  const buffer = gl.createBuffer();\r\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\r\n  return buffer;\r\n}\r\n\r\nfunction isIndices(name) {\r\n  return name === \"indices\";\r\n}\r\n\r\n// This is really just a guess. Though I can't really imagine using\r\n// anything else? Maybe for some compression?\r\nfunction getNormalizationForTypedArray(typedArray) {\r\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\r\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\r\n  return false;\r\n}\r\n\r\n// This is really just a guess. Though I can't really imagine using\r\n// anything else? Maybe for some compression?\r\nfunction getNormalizationForTypedArrayType(typedArrayType) {\r\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\r\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\r\n  return false;\r\n}\r\n\r\nfunction getArray(array) {\r\n  return array.length ? array : array.data;\r\n}\r\n\r\nconst texcoordRE = /coord|texture/i;\r\nconst colorRE = /color|colour/i;\r\n\r\nfunction guessNumComponentsFromName(name, length) {\r\n  let numComponents;\r\n  if (texcoordRE.test(name)) {\r\n    numComponents = 2;\r\n  } else if (colorRE.test(name)) {\r\n    numComponents = 4;\r\n  } else {\r\n    numComponents = 3;  // position, normals, indices ...\r\n  }\r\n\r\n  if (length % numComponents > 0) {\r\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" +\r\n          numComponents + \" but \" + length +\r\n          \" values is not evenly divisible by \" + numComponents +\r\n          \". You should specify it.\";\r\n  }\r\n\r\n  return numComponents;\r\n}\r\n\r\nfunction getNumComponents(array, arrayName) {\r\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\r\n}\r\n\r\nfunction makeTypedArray(array, name) {\r\n  if (typedArrays.isArrayBuffer(array)) {\r\n    return array;\r\n  }\r\n\r\n  if (typedArrays.isArrayBuffer(array.data)) {\r\n    return array.data;\r\n  }\r\n\r\n  if (Array.isArray(array)) {\r\n    array = {\r\n      data: array,\r\n    };\r\n  }\r\n\r\n  let Type = array.type;\r\n  if (!Type) {\r\n    if (isIndices(name)) {\r\n      Type = Uint16Array;\r\n    } else {\r\n      Type = Float32Array;\r\n    }\r\n  }\r\n  return new Type(array.data);\r\n}\r\n\r\n/**\r\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\r\n * for the attribute.\r\n *\r\n * @typedef {Object} AttribInfo\r\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\r\n *    disabled and set to this constant value and all other values will be ignored.\r\n * @property {number} [numComponents] the number of components for this attribute.\r\n * @property {number} [size] synonym for `numComponents`.\r\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\r\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\r\n * @property {number} [offset] offset into buffer in bytes. Default = 0\r\n * @property {number} [stride] the stride in bytes per element. Default = 0\r\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\r\n *    where as anything else = do call it with this value\r\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\r\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\r\n * @typedef {Object} FullArraySpec\r\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\r\n *    disabled and set to this constant value and all other values will be ignored.\r\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\r\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\r\n *    If `coord` is in the name assumes `numComponents = 2`.\r\n *    If `color` is in the name assumes `numComponents = 4`.\r\n *    otherwise assumes `numComponents = 3`\r\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\r\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\r\n * @property {number} [size] synonym for `numComponents`.\r\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\r\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\r\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\r\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\r\n *    where as anything else = do call it with this value\r\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\r\n * @property {string} [name] synonym for `attrib`.\r\n * @property {string} [attribName] synonym for `attrib`.\r\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\r\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\r\n *    to provide this. Example:\r\n *\r\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\r\n *           position: [1, 2, 3, ... ],\r\n *         });\r\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\r\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\r\n *         });\r\n *\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * An individual array in {@link module:twgl.Arrays}\r\n *\r\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\r\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\r\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\r\n *\r\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\r\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\r\n *\r\n *     Bare JavaScript Arrays\r\n *\r\n *         var arrays = {\r\n *            position: [-1, 1, 0],\r\n *            normal: [0, 1, 0],\r\n *            ...\r\n *         }\r\n *\r\n *     Bare TypedArrays\r\n *\r\n *         var arrays = {\r\n *            position: new Float32Array([-1, 1, 0]),\r\n *            color: new Uint8Array([255, 128, 64, 255]),\r\n *            ...\r\n *         }\r\n *\r\n * *   Will guess at `numComponents` if not specified based on name.\r\n *\r\n *     If `coord` is in the name assumes `numComponents = 2`\r\n *\r\n *     If `color` is in the name assumes `numComponents = 4`\r\n *\r\n *     otherwise assumes `numComponents = 3`\r\n *\r\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\r\n *\r\n *     var arrays = {\r\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\r\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\r\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\r\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\r\n *     };\r\n *\r\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\r\n * @memberOf module:twgl\r\n */\r\n\r\n\r\n/**\r\n * Creates a set of attribute data and WebGLBuffers from set of arrays\r\n *\r\n * Given\r\n *\r\n *      var arrays = {\r\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\r\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\r\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\r\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\r\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\r\n *      };\r\n *\r\n * returns something like\r\n *\r\n *      var attribs = {\r\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\r\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\r\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\r\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\r\n *      };\r\n *\r\n * notes:\r\n *\r\n * *   Arrays can take various forms\r\n *\r\n *     Bare JavaScript Arrays\r\n *\r\n *         var arrays = {\r\n *            position: [-1, 1, 0],\r\n *            normal: [0, 1, 0],\r\n *            ...\r\n *         }\r\n *\r\n *     Bare TypedArrays\r\n *\r\n *         var arrays = {\r\n *            position: new Float32Array([-1, 1, 0]),\r\n *            color: new Uint8Array([255, 128, 64, 255]),\r\n *            ...\r\n *         }\r\n *\r\n * *   Will guess at `numComponents` if not specified based on name.\r\n *\r\n *     If `coord` is in the name assumes `numComponents = 2`\r\n *\r\n *     If `color` is in the name assumes `numComponents = 4`\r\n *\r\n *     otherwise assumes `numComponents = 3`\r\n *\r\n * @param {WebGLRenderingContext} gl The webgl rendering context.\r\n * @param {module:twgl.Arrays} arrays The arrays\r\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\r\n *   This lets you share buffers. Any arrays you supply will override\r\n *   the buffers from srcBufferInfo.\r\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction createAttribsFromArrays(gl, arrays) {\r\n  const attribs = {};\r\n  Object.keys(arrays).forEach(function(arrayName) {\r\n    if (!isIndices(arrayName)) {\r\n      const array = arrays[arrayName];\r\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\r\n      if (array.value) {\r\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\r\n          throw new Error('array.value is not array or typedarray');\r\n        }\r\n        attribs[attribName] = {\r\n          value: array.value,\r\n        };\r\n      } else {\r\n        let buffer;\r\n        let type;\r\n        let normalization;\r\n        let numComponents;\r\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\r\n          buffer = array.buffer;\r\n          numComponents = array.numComponents || array.size;\r\n          type = array.type;\r\n          normalization = array.normalize;\r\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\r\n          const numValues = array.data || array;\r\n          const arrayType = array.type || Float32Array;\r\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\r\n          type = typedArrays.getGLTypeForTypedArrayType(arrayType);\r\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\r\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\r\n          buffer = gl.createBuffer();\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n          gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\r\n        } else {\r\n          const typedArray = makeTypedArray(array, arrayName);\r\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\r\n          type = typedArrays.getGLTypeForTypedArray(typedArray);\r\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\r\n          numComponents = getNumComponents(array, arrayName);\r\n        }\r\n        attribs[attribName] = {\r\n          buffer:        buffer,\r\n          numComponents: numComponents,\r\n          type:          type,\r\n          normalize:     normalization,\r\n          stride:        array.stride || 0,\r\n          offset:        array.offset || 0,\r\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\r\n          drawType:      array.drawType,\r\n        };\r\n      }\r\n    }\r\n  });\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n  return attribs;\r\n}\r\n\r\n/**\r\n * Sets the contents of a buffer attached to an attribInfo\r\n *\r\n * This is helper function to dynamically update a buffer.\r\n *\r\n * Let's say you make a bufferInfo\r\n *\r\n *     var arrays = {\r\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\r\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\r\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\r\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\r\n *     };\r\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n *\r\n *  And you want to dynamically upate the positions. You could do this\r\n *\r\n *     // assuming arrays.position has already been updated with new data.\r\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\r\n *\r\n * @param {WebGLRenderingContext} gl\r\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\r\n *   the name of the attribute will include the prefix.\r\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\r\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\r\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\r\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\r\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\r\n *    for the portion of the array you want to use.\r\n *\r\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\r\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\r\n *\r\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\r\n  array = makeTypedArray(array);\r\n  if (offset !== undefined) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\r\n  } else {\r\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\r\n  }\r\n}\r\n\r\nfunction getBytesPerValueForGLType(gl, type) {\r\n  if (type === gl.BYTE)           return 1;  // eslint-disable-line\r\n  if (type === gl.UNSIGNED_BYTE)  return 1;  // eslint-disable-line\r\n  if (type === gl.SHORT)          return 2;  // eslint-disable-line\r\n  if (type === gl.UNSIGNED_SHORT) return 2;  // eslint-disable-line\r\n  if (type === gl.INT)            return 4;  // eslint-disable-line\r\n  if (type === gl.UNSIGNED_INT)   return 4;  // eslint-disable-line\r\n  if (type === gl.FLOAT)          return 4;  // eslint-disable-line\r\n  return 0;\r\n}\r\n\r\n// Tries to get the number of elements from a set of arrays.\r\nconst positionKeys = ['position', 'positions', 'a_position'];\r\nfunction getNumElementsFromNonIndexedArrays(arrays) {\r\n  let key;\r\n  let ii;\r\n  for (ii = 0; ii < positionKeys.length; ++ii) {\r\n    key = positionKeys[ii];\r\n    if (key in arrays) {\r\n      break;\r\n    }\r\n  }\r\n  if (ii === positionKeys.length) {\r\n    key = Object.keys(arrays)[0];\r\n  }\r\n  const array = arrays[key];\r\n  const length = getArray(array).length;\r\n  const numComponents = getNumComponents(array, key);\r\n  const numElements = length / numComponents;\r\n  if (length % numComponents > 0) {\r\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\r\n  }\r\n  return numElements;\r\n}\r\n\r\nfunction getNumElementsFromAttributes(gl, attribs) {\r\n  let key;\r\n  let ii;\r\n  for (ii = 0; ii < positionKeys.length; ++ii) {\r\n    key = positionKeys[ii];\r\n    if (key in attribs) {\r\n      break;\r\n    }\r\n    key = defaults.attribPrefix + key;\r\n    if (key in attribs) {\r\n      break;\r\n    }\r\n  }\r\n  if (ii === positionKeys.length) {\r\n    key = Object.keys(attribs)[0];\r\n  }\r\n  const attrib = attribs[key];\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\r\n  const numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\r\n  const totalElements = numBytes / bytesPerValue;\r\n  const numComponents = attrib.numComponents || attrib.size;\r\n  // TODO: check stride\r\n  const numElements = totalElements / numComponents;\r\n  if (numElements % 1 !== 0) {\r\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\r\n  }\r\n  return numElements;\r\n}\r\n\r\n/**\r\n * @typedef {Object} BufferInfo\r\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\r\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\r\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\r\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a BufferInfo from an object of arrays.\r\n *\r\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\r\n * {@link module:twgl:drawBufferInfo}.\r\n *\r\n * Given an object like\r\n *\r\n *     var arrays = {\r\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\r\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\r\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\r\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\r\n *     };\r\n *\r\n *  Creates an BufferInfo like this\r\n *\r\n *     bufferInfo = {\r\n *       numElements: 4,        // or whatever the number of elements is\r\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\r\n *       attribs: {\r\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\r\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\r\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\r\n *       },\r\n *     };\r\n *\r\n *  The properties of arrays can be JavaScript arrays in which case the number of components\r\n *  will be guessed.\r\n *\r\n *     var arrays = {\r\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\r\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\r\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\r\n *        indices:  [0, 1, 2, 1, 2, 3],\r\n *     };\r\n *\r\n *  They can also by TypedArrays\r\n *\r\n *     var arrays = {\r\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\r\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\r\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\r\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\r\n *     };\r\n *\r\n *  Or augmentedTypedArrays\r\n *\r\n *     var positions = createAugmentedTypedArray(3, 4);\r\n *     var texcoords = createAugmentedTypedArray(2, 4);\r\n *     var normals   = createAugmentedTypedArray(3, 4);\r\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\r\n *\r\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\r\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\r\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\r\n *     indices.push([0, 1, 2, 1, 2, 3]);\r\n *\r\n *     var arrays = {\r\n *        position: positions,\r\n *        texcoord: texcoords,\r\n *        normal:   normals,\r\n *        indices:  indices,\r\n *     };\r\n *\r\n * For the last example it is equivalent to\r\n *\r\n *     var bufferInfo = {\r\n *       attribs: {\r\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\r\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\r\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\r\n *       },\r\n *       indices: gl.createBuffer(),\r\n *       numElements: 6,\r\n *     };\r\n *\r\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\r\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\r\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\r\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\r\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\r\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\r\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\r\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {module:twgl.Arrays} arrays Your data\r\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\r\n *        buffer info to start from. WebGLBuffers etc specified\r\n *        in the srcBufferInfo will be used in a new BufferInfo\r\n *        with any arrays specfied overriding the ones in\r\n *        srcBufferInfo.\r\n * @return {module:twgl.BufferInfo} A BufferInfo\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\r\n  const newAttribs = createAttribsFromArrays(gl, arrays);\r\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\r\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\r\n  const indices = arrays.indices;\r\n  if (indices) {\r\n    const newIndices = makeTypedArray(indices, \"indices\");\r\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\r\n    bufferInfo.numElements = newIndices.length;\r\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\r\n  } else if (!bufferInfo.numElements) {\r\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\r\n  }\r\n\r\n  return bufferInfo;\r\n}\r\n\r\n/**\r\n * Creates a buffer from an array, typed array, or array spec\r\n *\r\n * Given something like this\r\n *\r\n *     [1, 2, 3],\r\n *\r\n * or\r\n *\r\n *     new Uint16Array([1,2,3]);\r\n *\r\n * or\r\n *\r\n *     {\r\n *        data: [1, 2, 3],\r\n *        type: Uint8Array,\r\n *     }\r\n *\r\n * returns a WebGLBuffer that constains the given data.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\r\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\r\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\r\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction createBufferFromArray(gl, array, arrayName) {\r\n  const type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\r\n  const typedArray = makeTypedArray(array, arrayName);\r\n  return createBufferFromTypedArray(gl, typedArray, type);\r\n}\r\n\r\n/**\r\n * Creates buffers from arrays or typed arrays\r\n *\r\n * Given something like this\r\n *\r\n *     var arrays = {\r\n *        positions: [1, 2, 3],\r\n *        normals: [0, 0, 1],\r\n *     }\r\n *\r\n * returns something like\r\n *\r\n *     buffers = {\r\n *       positions: WebGLBuffer,\r\n *       normals: WebGLBuffer,\r\n *     }\r\n *\r\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\r\n * @param {module:twgl.Arrays} arrays\r\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\r\n * @memberOf module:twgl/attributes\r\n */\r\nfunction createBuffersFromArrays(gl, arrays) {\r\n  const buffers = { };\r\n  Object.keys(arrays).forEach(function(key) {\r\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\r\n  });\r\n\r\n  // Ugh!\r\n  if (arrays.indices) {\r\n    buffers.numElements = arrays.indices.length;\r\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\r\n  } else {\r\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\r\n  }\r\n\r\n  return buffers;\r\n}\r\n\r\nexport {\r\n  createAttribsFromArrays,\r\n  createBuffersFromArrays,\r\n  createBufferFromArray,\r\n  createBufferFromTypedArray,\r\n  createBufferInfoFromArrays,\r\n  setAttribInfoBufferFromArray,\r\n\r\n  setAttributePrefix,\r\n\r\n  setDefaults as setAttributeDefaults_,\r\n  getNumComponents as getNumComponents_,\r\n  getArray as getArray_,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as programs from './programs.js';\r\n\r\n/**\r\n * Drawing related functions\r\n *\r\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/draw\r\n */\r\n\r\n/**\r\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\r\n *\r\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\r\n * but calling this means if you switch from indexed data to non-indexed\r\n * data you don't have to remember to update your draw call.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\r\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\r\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\r\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\r\n * @param {number} [offset] An optional offset. Defaults to 0.\r\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\r\n * @memberOf module:twgl/draw\r\n */\r\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\r\n  type = type === undefined ? gl.TRIANGLES : type;\r\n  const indices = bufferInfo.indices;\r\n  const elementType = bufferInfo.elementType;\r\n  const numElements = count === undefined ? bufferInfo.numElements : count;\r\n  offset = offset === undefined ? 0 : offset;\r\n  if (elementType || indices) {\r\n    if (instanceCount !== undefined) {\r\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\r\n    } else {\r\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\r\n    }\r\n  } else {\r\n    if (instanceCount !== undefined) {\r\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\r\n    } else {\r\n      gl.drawArrays(type, offset, numElements);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\r\n *\r\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\r\n *\r\n * @typedef {Object} DrawObject\r\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\r\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\r\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\r\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\r\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\r\n * @property {Object<string, ?>} uniforms The values for the uniforms.\r\n *   You can pass multiple objects by putting them in an array. For example\r\n *\r\n *     var sharedUniforms = {\r\n *       u_fogNear: 10,\r\n *       u_projection: ...\r\n *       ...\r\n *     };\r\n *\r\n *     var localUniforms = {\r\n *       u_world: ...\r\n *       u_diffuseColor: ...\r\n *     };\r\n *\r\n *     var drawObj = {\r\n *       ...\r\n *       uniforms: [sharedUniforms, localUniforms],\r\n *     };\r\n *\r\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\r\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\r\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Draws a list of objects\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\r\n * @memberOf module:twgl/draw\r\n */\r\nfunction drawObjectList(gl, objectsToDraw) {\r\n  let lastUsedProgramInfo = null;\r\n  let lastUsedBufferInfo = null;\r\n\r\n  objectsToDraw.forEach(function(object) {\r\n    if (object.active === false) {\r\n      return;\r\n    }\r\n\r\n    const programInfo = object.programInfo;\r\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\r\n    let bindBuffers = false;\r\n    const type = object.type === undefined ? gl.TRIANGLES : object.type;\r\n\r\n    if (programInfo !== lastUsedProgramInfo) {\r\n      lastUsedProgramInfo = programInfo;\r\n      gl.useProgram(programInfo.program);\r\n\r\n      // We have to rebind buffers when changing programs because we\r\n      // only bind buffers the program uses. So if 2 programs use the same\r\n      // bufferInfo but the 1st one uses only positions the when the\r\n      // we switch to the 2nd one some of the attributes will not be on.\r\n      bindBuffers = true;\r\n    }\r\n\r\n    // Setup all the needed attributes.\r\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\r\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\r\n        gl.bindVertexArray(null);\r\n      }\r\n      lastUsedBufferInfo = bufferInfo;\r\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\r\n    }\r\n\r\n    // Set the uniforms.\r\n    programs.setUniforms(programInfo, object.uniforms);\r\n\r\n    // Draw\r\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\r\n  });\r\n\r\n  if (lastUsedBufferInfo.vertexArrayObject) {\r\n    gl.bindVertexArray(null);\r\n  }\r\n}\r\n\r\nexport {\r\n  drawBufferInfo,\r\n  drawObjectList,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as textures from './textures.js';\r\nimport * as helper from './helper.js';\r\n\r\n/**\r\n * Framebuffer related functions\r\n *\r\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/framebuffers\r\n */\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\n\r\nconst UNSIGNED_BYTE                  = 0x1401;\r\n\r\n/* PixelFormat */\r\nconst DEPTH_COMPONENT                = 0x1902;\r\nconst RGBA                           = 0x1908;\r\n\r\n/* Framebuffer Object. */\r\nconst RGBA4                          = 0x8056;\r\nconst RGB5_A1                        = 0x8057;\r\nconst RGB565                         = 0x8D62;\r\nconst DEPTH_COMPONENT16              = 0x81A5;\r\nconst STENCIL_INDEX                  = 0x1901;\r\nconst STENCIL_INDEX8                 = 0x8D48;\r\nconst DEPTH_STENCIL                  = 0x84F9;\r\nconst COLOR_ATTACHMENT0              = 0x8CE0;\r\nconst DEPTH_ATTACHMENT               = 0x8D00;\r\nconst STENCIL_ATTACHMENT             = 0x8D20;\r\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\r\n\r\n/* TextureWrapMode */\r\nconst REPEAT                         = 0x2901;  // eslint-disable-line\r\nconst CLAMP_TO_EDGE                  = 0x812F;\r\nconst MIRRORED_REPEAT                = 0x8370;  // eslint-disable-line\r\n\r\n/* TextureMagFilter */\r\nconst NEAREST                        = 0x2600;  // eslint-disable-line\r\nconst LINEAR                         = 0x2601;\r\n\r\n/* TextureMinFilter */\r\nconst NEAREST_MIPMAP_NEAREST         = 0x2700;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_NEAREST          = 0x2701;  // eslint-disable-line\r\nconst NEAREST_MIPMAP_LINEAR          = 0x2702;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_LINEAR           = 0x2703;  // eslint-disable-line\r\n\r\n/**\r\n * The options for a framebuffer attachment.\r\n *\r\n * Note: For a `format` that is a texture include all the texture\r\n * options from {@link module:twgl.TextureOptions} for example\r\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\r\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\r\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\r\n *\r\n * @typedef {Object} AttachmentOptions\r\n * @property {number} [attach] The attachment point. Defaults\r\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\r\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\r\n *   on the format or attachment type.\r\n * @property {number} [format] The format. If one of `gl.RGBA4`,\r\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\r\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\r\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\r\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\r\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\r\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\r\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\r\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\r\n *    If provided will attach this Object. This allows you to share\r\n *    attachemnts across framebuffers.\r\n * @memberOf module:twgl\r\n */\r\n\r\nconst defaultAttachments = [\r\n  { format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE, },\r\n  { format: DEPTH_STENCIL, },\r\n];\r\n\r\nconst attachmentsByFormat = {};\r\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\r\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\r\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\r\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\r\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\r\n\r\nfunction getAttachmentPointForFormat(format) {\r\n  return attachmentsByFormat[format];\r\n}\r\n\r\nconst renderbufferFormats = {};\r\nrenderbufferFormats[RGBA4] = true;\r\nrenderbufferFormats[RGB5_A1] = true;\r\nrenderbufferFormats[RGB565] = true;\r\nrenderbufferFormats[DEPTH_STENCIL] = true;\r\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\r\nrenderbufferFormats[STENCIL_INDEX] = true;\r\nrenderbufferFormats[STENCIL_INDEX8] = true;\r\n\r\nfunction isRenderbufferFormat(format) {\r\n  return renderbufferFormats[format];\r\n}\r\n\r\n/**\r\n * @typedef {Object} FramebufferInfo\r\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\r\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a framebuffer and attachments.\r\n *\r\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\r\n *\r\n * The simplest usage\r\n *\r\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\r\n *     const fbi = twgl.createFramebufferInfo(gl);\r\n *\r\n * More complex usage\r\n *\r\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\r\n *     const attachments = [\r\n *       { format: RGB565, mag: NEAREST },\r\n *       { format: STENCIL_INDEX8 },\r\n *     ]\r\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\r\n *\r\n * Passing in a specific size\r\n *\r\n *     const width = 256;\r\n *     const height = 256;\r\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\r\n *\r\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\r\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\r\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\r\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\r\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\r\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\r\n * @memberOf module:twgl/framebuffers\r\n */\r\nfunction createFramebufferInfo(gl, attachments, width, height) {\r\n  const target = gl.FRAMEBUFFER;\r\n  const fb = gl.createFramebuffer();\r\n  gl.bindFramebuffer(target, fb);\r\n  width  = width  || gl.drawingBufferWidth;\r\n  height = height || gl.drawingBufferHeight;\r\n  attachments = attachments || defaultAttachments;\r\n  let colorAttachmentCount = 0;\r\n  const framebufferInfo = {\r\n    framebuffer: fb,\r\n    attachments: [],\r\n    width: width,\r\n    height: height,\r\n  };\r\n  attachments.forEach(function(attachmentOptions) {\r\n    let attachment = attachmentOptions.attachment;\r\n    const format = attachmentOptions.format;\r\n    let attachmentPoint = getAttachmentPointForFormat(format);\r\n    if (!attachmentPoint) {\r\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\r\n    }\r\n    if (!attachment) {\r\n      if (isRenderbufferFormat(format)) {\r\n        attachment = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\r\n      } else {\r\n        const textureOptions = Object.assign({}, attachmentOptions);\r\n        textureOptions.width = width;\r\n        textureOptions.height = height;\r\n        if (textureOptions.auto === undefined) {\r\n          textureOptions.auto = false;\r\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\r\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\r\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\r\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\r\n        }\r\n        attachment = textures.createTexture(gl, textureOptions);\r\n      }\r\n    }\r\n    if (helper.isRenderbuffer(gl, attachment)) {\r\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\r\n    } else if (helper.isTexture(gl, attachment)) {\r\n      gl.framebufferTexture2D(\r\n          target,\r\n          attachmentPoint,\r\n          attachmentOptions.texTarget || gl.TEXTURE_2D,\r\n          attachment,\r\n          attachmentOptions.level || 0);\r\n    } else {\r\n      throw \"unknown attachment type\";\r\n    }\r\n    framebufferInfo.attachments.push(attachment);\r\n  });\r\n  return framebufferInfo;\r\n}\r\n\r\n/**\r\n * Resizes the attachments of a framebuffer.\r\n *\r\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\r\n * because TWGL has no idea the format/type of each attachment.\r\n *\r\n * The simplest usage\r\n *\r\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\r\n *     const fbi = twgl.createFramebufferInfo(gl);\r\n *\r\n *     ...\r\n *\r\n *     function render() {\r\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\r\n *         // resize the attachments\r\n *         twgl.resizeFramebufferInfo(gl, fbi);\r\n *       }\r\n *\r\n * More complex usage\r\n *\r\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\r\n *     const attachments = [\r\n *       { format: RGB565, mag: NEAREST },\r\n *       { format: STENCIL_INDEX8 },\r\n *     ]\r\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\r\n *\r\n *     ...\r\n *\r\n *     function render() {\r\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\r\n *         // resize the attachments to match\r\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\r\n *       }\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\r\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\r\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\r\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\r\n * @memberOf module:twgl/framebuffers\r\n */\r\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\r\n  width  = width  || gl.drawingBufferWidth;\r\n  height = height || gl.drawingBufferHeight;\r\n  framebufferInfo.width = width;\r\n  framebufferInfo.height = height;\r\n  attachments = attachments || defaultAttachments;\r\n  attachments.forEach(function(attachmentOptions, ndx) {\r\n    const attachment = framebufferInfo.attachments[ndx];\r\n    const format = attachmentOptions.format;\r\n    if (helper.isRenderbuffer(gl, attachment)) {\r\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\r\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\r\n    } else if (helper.isTexture(gl, attachment)) {\r\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\r\n    } else {\r\n      throw \"unknown attachment type\";\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Binds a framebuffer\r\n *\r\n * This function pretty much soley exists because I spent hours\r\n * trying to figure out why something I wrote wasn't working only\r\n * to realize I forget to set the viewport dimensions.\r\n * My hope is this function will fix that.\r\n *\r\n * It is effectively the same as\r\n *\r\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\r\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\r\n *   If not passed will bind the canvas.\r\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\r\n * @memberOf module:twgl/framebuffers\r\n */\r\n\r\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\r\n  target = target || gl.FRAMEBUFFER;\r\n  if (framebufferInfo) {\r\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\r\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\r\n  } else {\r\n    gl.bindFramebuffer(target, null);\r\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n  }\r\n}\r\n\r\nexport {\r\n  bindFramebufferInfo,\r\n  createFramebufferInfo,\r\n  resizeFramebufferInfo,\r\n};\r\n\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/* eslint no-console: \"off\" */\r\n\r\n/**\r\n * Copy named properties\r\n *\r\n * @param {string[]} names names of properties to copy\r\n * @param {object} src object to copy properties from\r\n * @param {object} dst object to copy properties to\r\n * @private\r\n */\r\nfunction copyNamedProperties(names, src, dst) {\r\n  names.forEach(function(name) {\r\n    const value = src[name];\r\n    if (value !== undefined) {\r\n      dst[name] = value;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Copies properties from source to dest only if a matching key is in dest\r\n *\r\n * @param {Object.<string, ?>} src the source\r\n * @param {Object.<string, ?>} dst the dest\r\n * @private\r\n */\r\nfunction copyExistingProperties(src, dst) {\r\n  Object.keys(dst).forEach(function(key) {\r\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\r\n      dst[key] = src[key];\r\n    }\r\n  });\r\n}\r\n\r\nconst error =\r\n    ( typeof console !== 'undefined'\r\n      && console.error\r\n      && typeof console.error === \"function\"\r\n    )\r\n    ? console.error.bind(console)\r\n    : function() { };\r\n\r\nconst warn =\r\n    ( typeof console !== 'undefined'\r\n      && console.warn\r\n      && typeof console.warn === \"function\"\r\n    )\r\n    ? console.warn.bind(console)\r\n    : function() { };\r\n\r\nlet repBuffer;\r\nfunction isBuffer(gl, t) {\r\n  if (!repBuffer) {\r\n    repBuffer = gl.createBuffer();\r\n  }\r\n  return t instanceof repBuffer.constructor;\r\n}\r\n\r\nlet repRenderbuffer;\r\nfunction isRenderbuffer(gl, t) {\r\n  if (!repRenderbuffer) {\r\n    repRenderbuffer = gl.createRenderbuffer();\r\n  }\r\n  return t instanceof repRenderbuffer.constructor;\r\n}\r\n\r\nlet repShader;\r\nfunction isShader(gl, t) {\r\n  if (!repShader) {\r\n    repShader = gl.createShader(gl.VERTEX_SHADER);\r\n  }\r\n  return t instanceof repShader.constructor;\r\n}\r\n\r\nlet repTexture;\r\nfunction isTexture(gl, t) {\r\n  if (!repTexture) {\r\n    repTexture = gl.createTexture();\r\n  }\r\n  return t instanceof repTexture.constructor;\r\n}\r\n\r\nlet repSampler;\r\nfunction isSampler(gl, t) {\r\n  if (!repSampler) {\r\n    if (gl.createSampler) {\r\n      repSampler = gl.createSampler();\r\n    } else {\r\n      return false;  // it can't be a sampler if this is not WebGL2\r\n    }\r\n  }\r\n  return t instanceof repSampler.constructor;\r\n}\r\n\r\nexport {\r\n  copyExistingProperties,\r\n  copyNamedProperties,\r\n  error,\r\n  warn,\r\n  isBuffer,\r\n  isRenderbuffer,\r\n  isShader,\r\n  isTexture,\r\n  isSampler,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as v3 from './v3.js';\r\n\r\n/**\r\n * 4x4 Matrix math math functions.\r\n *\r\n * Almost all functions take an optional `dst` argument. If it is not passed in the\r\n * functions will create a new matrix. In other words you can do this\r\n *\r\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\r\n *\r\n * or\r\n *\r\n *     const mat = m4.create();\r\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\r\n *\r\n * The first style is often easier but depending on where it's used it generates garbage where\r\n * as there is almost never allocation with the second style.\r\n *\r\n * It is always save to pass any matrix as the destination. So for example\r\n *\r\n *     const mat = m4.identity();\r\n *     const trans = m4.translation([1, 2, 3]);\r\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\r\n *\r\n * @module twgl/m4\r\n */\r\nlet MatType = Float32Array;\r\n\r\nconst tempV3a = v3.create();\r\nconst tempV3b = v3.create();\r\nconst tempV3c = v3.create();\r\n\r\n/**\r\n * A JavaScript array with 16 values or a Float32Array with 16 values.\r\n * When created by the library will create the default type which is `Float32Array`\r\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\r\n * @typedef {(number[]|Float32Array)} Mat4\r\n * @memberOf module:twgl/m4\r\n */\r\n\r\n/**\r\n * Sets the type this library creates for a Mat4\r\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\r\n * @return {constructor} previous constructor for Mat4\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction setDefaultType(ctor) {\r\n  const oldType = MatType;\r\n  MatType = ctor;\r\n  return oldType;\r\n}\r\n\r\n/**\r\n * Negates a matrix.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} -m.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction negate(m, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[ 0] = -m[ 0];\r\n  dst[ 1] = -m[ 1];\r\n  dst[ 2] = -m[ 2];\r\n  dst[ 3] = -m[ 3];\r\n  dst[ 4] = -m[ 4];\r\n  dst[ 5] = -m[ 5];\r\n  dst[ 6] = -m[ 6];\r\n  dst[ 7] = -m[ 7];\r\n  dst[ 8] = -m[ 8];\r\n  dst[ 9] = -m[ 9];\r\n  dst[10] = -m[10];\r\n  dst[11] = -m[11];\r\n  dst[12] = -m[12];\r\n  dst[13] = -m[13];\r\n  dst[14] = -m[14];\r\n  dst[15] = -m[15];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Copies a matrix.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\r\n * @return {module:twgl/m4.Mat4} A copy of m.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction copy(m, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[ 0] = m[ 0];\r\n  dst[ 1] = m[ 1];\r\n  dst[ 2] = m[ 2];\r\n  dst[ 3] = m[ 3];\r\n  dst[ 4] = m[ 4];\r\n  dst[ 5] = m[ 5];\r\n  dst[ 6] = m[ 6];\r\n  dst[ 7] = m[ 7];\r\n  dst[ 8] = m[ 8];\r\n  dst[ 9] = m[ 9];\r\n  dst[10] = m[10];\r\n  dst[11] = m[11];\r\n  dst[12] = m[12];\r\n  dst[13] = m[13];\r\n  dst[14] = m[14];\r\n  dst[15] = m[15];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates an n-by-n identity matrix.\r\n *\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction identity(dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[ 0] = 1;\r\n  dst[ 1] = 0;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = 1;\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = 0;\r\n  dst[ 9] = 0;\r\n  dst[10] = 1;\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Takes the transpose of a matrix.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The transpose of m.\r\n * @memberOf module:twgl/m4\r\n */\r\n function transpose(m, dst) {\r\n  dst = dst || new MatType(16);\r\n  if (dst === m) {\r\n    let t;\r\n\r\n    t = m[1];\r\n    m[1] = m[4];\r\n    m[4] = t;\r\n\r\n    t = m[2];\r\n    m[2] = m[8];\r\n    m[8] = t;\r\n\r\n    t = m[3];\r\n    m[3] = m[12];\r\n    m[12] = t;\r\n\r\n    t = m[6];\r\n    m[6] = m[9];\r\n    m[9] = t;\r\n\r\n    t = m[7];\r\n    m[7] = m[13];\r\n    m[13] = t;\r\n\r\n    t = m[11];\r\n    m[11] = m[14];\r\n    m[14] = t;\r\n    return dst;\r\n  }\r\n\r\n  const m00 = m[0 * 4 + 0];\r\n  const m01 = m[0 * 4 + 1];\r\n  const m02 = m[0 * 4 + 2];\r\n  const m03 = m[0 * 4 + 3];\r\n  const m10 = m[1 * 4 + 0];\r\n  const m11 = m[1 * 4 + 1];\r\n  const m12 = m[1 * 4 + 2];\r\n  const m13 = m[1 * 4 + 3];\r\n  const m20 = m[2 * 4 + 0];\r\n  const m21 = m[2 * 4 + 1];\r\n  const m22 = m[2 * 4 + 2];\r\n  const m23 = m[2 * 4 + 3];\r\n  const m30 = m[3 * 4 + 0];\r\n  const m31 = m[3 * 4 + 1];\r\n  const m32 = m[3 * 4 + 2];\r\n  const m33 = m[3 * 4 + 3];\r\n\r\n  dst[ 0] = m00;\r\n  dst[ 1] = m10;\r\n  dst[ 2] = m20;\r\n  dst[ 3] = m30;\r\n  dst[ 4] = m01;\r\n  dst[ 5] = m11;\r\n  dst[ 6] = m21;\r\n  dst[ 7] = m31;\r\n  dst[ 8] = m02;\r\n  dst[ 9] = m12;\r\n  dst[10] = m22;\r\n  dst[11] = m32;\r\n  dst[12] = m03;\r\n  dst[13] = m13;\r\n  dst[14] = m23;\r\n  dst[15] = m33;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes the inverse of a 4-by-4 matrix.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The inverse of m.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction inverse(m, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const m00 = m[0 * 4 + 0];\r\n  const m01 = m[0 * 4 + 1];\r\n  const m02 = m[0 * 4 + 2];\r\n  const m03 = m[0 * 4 + 3];\r\n  const m10 = m[1 * 4 + 0];\r\n  const m11 = m[1 * 4 + 1];\r\n  const m12 = m[1 * 4 + 2];\r\n  const m13 = m[1 * 4 + 3];\r\n  const m20 = m[2 * 4 + 0];\r\n  const m21 = m[2 * 4 + 1];\r\n  const m22 = m[2 * 4 + 2];\r\n  const m23 = m[2 * 4 + 3];\r\n  const m30 = m[3 * 4 + 0];\r\n  const m31 = m[3 * 4 + 1];\r\n  const m32 = m[3 * 4 + 2];\r\n  const m33 = m[3 * 4 + 3];\r\n  const tmp_0  = m22 * m33;\r\n  const tmp_1  = m32 * m23;\r\n  const tmp_2  = m12 * m33;\r\n  const tmp_3  = m32 * m13;\r\n  const tmp_4  = m12 * m23;\r\n  const tmp_5  = m22 * m13;\r\n  const tmp_6  = m02 * m33;\r\n  const tmp_7  = m32 * m03;\r\n  const tmp_8  = m02 * m23;\r\n  const tmp_9  = m22 * m03;\r\n  const tmp_10 = m02 * m13;\r\n  const tmp_11 = m12 * m03;\r\n  const tmp_12 = m20 * m31;\r\n  const tmp_13 = m30 * m21;\r\n  const tmp_14 = m10 * m31;\r\n  const tmp_15 = m30 * m11;\r\n  const tmp_16 = m10 * m21;\r\n  const tmp_17 = m20 * m11;\r\n  const tmp_18 = m00 * m31;\r\n  const tmp_19 = m30 * m01;\r\n  const tmp_20 = m00 * m21;\r\n  const tmp_21 = m20 * m01;\r\n  const tmp_22 = m00 * m11;\r\n  const tmp_23 = m10 * m01;\r\n\r\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\r\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\r\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\r\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\r\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\r\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\r\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\r\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\r\n\r\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n\r\n  dst[ 0] = d * t0;\r\n  dst[ 1] = d * t1;\r\n  dst[ 2] = d * t2;\r\n  dst[ 3] = d * t3;\r\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\r\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\r\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\r\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\r\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\r\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\r\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\r\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\r\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\r\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\r\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\r\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\r\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\r\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\r\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\r\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\r\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\r\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\r\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\r\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\r\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\r\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\r\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\r\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\r\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\r\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction multiply(a, b, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const a00 = a[0];\r\n  const a01 = a[1];\r\n  const a02 = a[2];\r\n  const a03 = a[3];\r\n  const a10 = a[ 4 + 0];\r\n  const a11 = a[ 4 + 1];\r\n  const a12 = a[ 4 + 2];\r\n  const a13 = a[ 4 + 3];\r\n  const a20 = a[ 8 + 0];\r\n  const a21 = a[ 8 + 1];\r\n  const a22 = a[ 8 + 2];\r\n  const a23 = a[ 8 + 3];\r\n  const a30 = a[12 + 0];\r\n  const a31 = a[12 + 1];\r\n  const a32 = a[12 + 2];\r\n  const a33 = a[12 + 3];\r\n  const b00 = b[0];\r\n  const b01 = b[1];\r\n  const b02 = b[2];\r\n  const b03 = b[3];\r\n  const b10 = b[ 4 + 0];\r\n  const b11 = b[ 4 + 1];\r\n  const b12 = b[ 4 + 2];\r\n  const b13 = b[ 4 + 3];\r\n  const b20 = b[ 8 + 0];\r\n  const b21 = b[ 8 + 1];\r\n  const b22 = b[ 8 + 2];\r\n  const b23 = b[ 8 + 3];\r\n  const b30 = b[12 + 0];\r\n  const b31 = b[12 + 1];\r\n  const b32 = b[12 + 2];\r\n  const b33 = b[12 + 3];\r\n\r\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\r\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\r\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\r\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\r\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\r\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\r\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\r\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\r\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\r\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\r\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\r\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\r\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\r\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\r\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\r\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Sets the translation component of a 4-by-4 matrix to the given\r\n * vector.\r\n * @param {module:twgl/m4.Mat4} a The matrix.\r\n * @param {module:twgl/v3.Vec3} v The vector.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none, a new one is created.\r\n * @return {module:twgl/m4.Mat4} a once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction setTranslation(a, v, dst) {\r\n  dst = dst || identity();\r\n  if (a !== dst) {\r\n    dst[ 0] = a[ 0];\r\n    dst[ 1] = a[ 1];\r\n    dst[ 2] = a[ 2];\r\n    dst[ 3] = a[ 3];\r\n    dst[ 4] = a[ 4];\r\n    dst[ 5] = a[ 5];\r\n    dst[ 6] = a[ 6];\r\n    dst[ 7] = a[ 7];\r\n    dst[ 8] = a[ 8];\r\n    dst[ 9] = a[ 9];\r\n    dst[10] = a[10];\r\n    dst[11] = a[11];\r\n  }\r\n  dst[12] = v[0];\r\n  dst[13] = v[1];\r\n  dst[14] = v[2];\r\n  dst[15] = 1;\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\r\n * entries.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} [dst] vector.\r\n * @return {module:twgl/v3.Vec3} The translation component of m.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction getTranslation(m, dst) {\r\n  dst = dst || v3.create();\r\n  dst[0] = m[12];\r\n  dst[1] = m[13];\r\n  dst[2] = m[14];\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\r\n * @return {module:twgl/v3.Vec3} [dst] vector.\r\n * @return {module:twgl/v3.Vec3} The axis component of m.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction getAxis(m, axis, dst) {\r\n  dst = dst || v3.create();\r\n  const off = axis * 4;\r\n  dst[0] = m[off + 0];\r\n  dst[1] = m[off + 1];\r\n  dst[2] = m[off + 2];\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\r\n * @param {module:twgl/v3.Vec3} v the axis vector\r\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\r\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none, a new one is created.\r\n * @return {module:twgl/m4.Mat4} dst\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction setAxis(a, v, axis, dst) {\r\n  if (dst !== a) {\r\n    dst = copy(a, dst);\r\n  }\r\n  const off = axis * 4;\r\n  dst[off + 0] = v[0];\r\n  dst[off + 1] = v[1];\r\n  dst[off + 2] = v[2];\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes a 4-by-4 perspective transformation matrix given the angular height\r\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\r\n * arguments define a frustum extending in the negative z direction.  The given\r\n * angle is the vertical angle of the frustum, and the horizontal angle is\r\n * determined to produce the given aspect ratio.  The arguments near and far are\r\n * the distances to the near and far clipping planes.  Note that near and far\r\n * are not z coordinates, but rather they are distances along the negative\r\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\r\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\r\n * from 0 to 1 in the z dimension.\r\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\r\n * @param {number} aspect The aspect ratio width / height.\r\n * @param {number} zNear The depth (negative z coordinate)\r\n *     of the near clipping plane.\r\n * @param {number} zFar The depth (negative z coordinate)\r\n *     of the far clipping plane.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The perspective matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\r\n  const rangeInv = 1.0 / (zNear - zFar);\r\n\r\n  dst[0]  = f / aspect;\r\n  dst[1]  = 0;\r\n  dst[2]  = 0;\r\n  dst[3]  = 0;\r\n\r\n  dst[4]  = 0;\r\n  dst[5]  = f;\r\n  dst[6]  = 0;\r\n  dst[7]  = 0;\r\n\r\n  dst[8]  = 0;\r\n  dst[9]  = 0;\r\n  dst[10] = (zNear + zFar) * rangeInv;\r\n  dst[11] = -1;\r\n\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = zNear * zFar * rangeInv * 2;\r\n  dst[15] = 0;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\r\n * bottom, and top dimensions of the near clipping plane as well as the\r\n * near and far clipping plane distances.\r\n * @param {number} left Left side of the near clipping plane viewport.\r\n * @param {number} right Right side of the near clipping plane viewport.\r\n * @param {number} bottom Bottom of the near clipping plane viewport.\r\n * @param {number} top Top of the near clipping plane viewport.\r\n * @param {number} near The depth (negative z coordinate)\r\n *     of the near clipping plane.\r\n * @param {number} far The depth (negative z coordinate)\r\n *     of the far clipping plane.\r\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\r\n * @return {module:twgl/m4.Mat4} The perspective matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction ortho(left, right, bottom, top, near, far, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[0]  = 2 / (right - left);\r\n  dst[1]  = 0;\r\n  dst[2]  = 0;\r\n  dst[3]  = 0;\r\n\r\n  dst[4]  = 0;\r\n  dst[5]  = 2 / (top - bottom);\r\n  dst[6]  = 0;\r\n  dst[7]  = 0;\r\n\r\n  dst[8]  = 0;\r\n  dst[9]  = 0;\r\n  dst[10] = 2 / (near - far);\r\n  dst[11] = 0;\r\n\r\n  dst[12] = (right + left) / (left - right);\r\n  dst[13] = (top + bottom) / (bottom - top);\r\n  dst[14] = (far + near) / (near - far);\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\r\n * top, bottom, near and far clipping planes. The arguments define a frustum\r\n * extending in the negative z direction. The arguments near and far are the\r\n * distances to the near and far clipping planes. Note that near and far are not\r\n * z coordinates, but rather they are distances along the negative z-axis. The\r\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\r\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\r\n * dimension.\r\n * @param {number} left The x coordinate of the left plane of the box.\r\n * @param {number} right The x coordinate of the right plane of the box.\r\n * @param {number} bottom The y coordinate of the bottom plane of the box.\r\n * @param {number} top The y coordinate of the right plane of the box.\r\n * @param {number} near The negative z coordinate of the near plane of the box.\r\n * @param {number} far The negative z coordinate of the far plane of the box.\r\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\r\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction frustum(left, right, bottom, top, near, far, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const dx = (right - left);\r\n  const dy = (top - bottom);\r\n  const dz = (near - far);\r\n\r\n  dst[ 0] = 2 * near / dx;\r\n  dst[ 1] = 0;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = 2 * near / dy;\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = (left + right) / dx;\r\n  dst[ 9] = (top + bottom) / dy;\r\n  dst[10] = far / dz;\r\n  dst[11] = -1;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = near * far / dz;\r\n  dst[15] = 0;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes a 4-by-4 look-at transformation.\r\n *\r\n * This is a matrix which positions the camera itself. If you want\r\n * a view matrix (a matrix which moves things in front of the camera)\r\n * take the inverse of this.\r\n *\r\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\r\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\r\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The look-at matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction lookAt(eye, target, up, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const xAxis = tempV3a;\r\n  const yAxis = tempV3b;\r\n  const zAxis = tempV3c;\r\n\r\n  v3.normalize(\r\n      v3.subtract(eye, target, zAxis), zAxis);\r\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\r\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\r\n\r\n  dst[ 0] = xAxis[0];\r\n  dst[ 1] = xAxis[1];\r\n  dst[ 2] = xAxis[2];\r\n  dst[ 3] = 0;\r\n  dst[ 4] = yAxis[0];\r\n  dst[ 5] = yAxis[1];\r\n  dst[ 6] = yAxis[2];\r\n  dst[ 7] = 0;\r\n  dst[ 8] = zAxis[0];\r\n  dst[ 9] = zAxis[1];\r\n  dst[10] = zAxis[2];\r\n  dst[11] = 0;\r\n  dst[12] = eye[0];\r\n  dst[13] = eye[1];\r\n  dst[14] = eye[2];\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which translates by the given vector v.\r\n * @param {module:twgl/v3.Vec3} v The vector by\r\n *     which to translate.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The translation matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction translation(v, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[ 0] = 1;\r\n  dst[ 1] = 0;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = 1;\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = 0;\r\n  dst[ 9] = 0;\r\n  dst[10] = 1;\r\n  dst[11] = 0;\r\n  dst[12] = v[0];\r\n  dst[13] = v[1];\r\n  dst[14] = v[2];\r\n  dst[15] = 1;\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} v The vector by\r\n *     which to translate.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction translate(m, v, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n  const m00 = m[0];\r\n  const m01 = m[1];\r\n  const m02 = m[2];\r\n  const m03 = m[3];\r\n  const m10 = m[1 * 4 + 0];\r\n  const m11 = m[1 * 4 + 1];\r\n  const m12 = m[1 * 4 + 2];\r\n  const m13 = m[1 * 4 + 3];\r\n  const m20 = m[2 * 4 + 0];\r\n  const m21 = m[2 * 4 + 1];\r\n  const m22 = m[2 * 4 + 2];\r\n  const m23 = m[2 * 4 + 3];\r\n  const m30 = m[3 * 4 + 0];\r\n  const m31 = m[3 * 4 + 1];\r\n  const m32 = m[3 * 4 + 2];\r\n  const m33 = m[3 * 4 + 3];\r\n\r\n  if (m !== dst) {\r\n    dst[ 0] = m00;\r\n    dst[ 1] = m01;\r\n    dst[ 2] = m02;\r\n    dst[ 3] = m03;\r\n    dst[ 4] = m10;\r\n    dst[ 5] = m11;\r\n    dst[ 6] = m12;\r\n    dst[ 7] = m13;\r\n    dst[ 8] = m20;\r\n    dst[ 9] = m21;\r\n    dst[10] = m22;\r\n    dst[11] = m23;\r\n  }\r\n\r\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\r\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\r\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\r\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The rotation matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotationX(angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[ 0] = 1;\r\n  dst[ 1] = 0;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = c;\r\n  dst[ 6] = s;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = 0;\r\n  dst[ 9] = -s;\r\n  dst[10] = c;\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\r\n * angle.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotateX(m, angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const m10 = m[4];\r\n  const m11 = m[5];\r\n  const m12 = m[6];\r\n  const m13 = m[7];\r\n  const m20 = m[8];\r\n  const m21 = m[9];\r\n  const m22 = m[10];\r\n  const m23 = m[11];\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[4]  = c * m10 + s * m20;\r\n  dst[5]  = c * m11 + s * m21;\r\n  dst[6]  = c * m12 + s * m22;\r\n  dst[7]  = c * m13 + s * m23;\r\n  dst[8]  = c * m20 - s * m10;\r\n  dst[9]  = c * m21 - s * m11;\r\n  dst[10] = c * m22 - s * m12;\r\n  dst[11] = c * m23 - s * m13;\r\n\r\n  if (m !== dst) {\r\n    dst[ 0] = m[ 0];\r\n    dst[ 1] = m[ 1];\r\n    dst[ 2] = m[ 2];\r\n    dst[ 3] = m[ 3];\r\n    dst[12] = m[12];\r\n    dst[13] = m[13];\r\n    dst[14] = m[14];\r\n    dst[15] = m[15];\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The rotation matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotationY(angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[ 0] = c;\r\n  dst[ 1] = 0;\r\n  dst[ 2] = -s;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = 1;\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = s;\r\n  dst[ 9] = 0;\r\n  dst[10] = c;\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\r\n * angle.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotateY(m, angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const m00 = m[0 * 4 + 0];\r\n  const m01 = m[0 * 4 + 1];\r\n  const m02 = m[0 * 4 + 2];\r\n  const m03 = m[0 * 4 + 3];\r\n  const m20 = m[2 * 4 + 0];\r\n  const m21 = m[2 * 4 + 1];\r\n  const m22 = m[2 * 4 + 2];\r\n  const m23 = m[2 * 4 + 3];\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[ 0] = c * m00 - s * m20;\r\n  dst[ 1] = c * m01 - s * m21;\r\n  dst[ 2] = c * m02 - s * m22;\r\n  dst[ 3] = c * m03 - s * m23;\r\n  dst[ 8] = c * m20 + s * m00;\r\n  dst[ 9] = c * m21 + s * m01;\r\n  dst[10] = c * m22 + s * m02;\r\n  dst[11] = c * m23 + s * m03;\r\n\r\n  if (m !== dst) {\r\n    dst[ 4] = m[ 4];\r\n    dst[ 5] = m[ 5];\r\n    dst[ 6] = m[ 6];\r\n    dst[ 7] = m[ 7];\r\n    dst[12] = m[12];\r\n    dst[13] = m[13];\r\n    dst[14] = m[14];\r\n    dst[15] = m[15];\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The rotation matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotationZ(angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[ 0] = c;\r\n  dst[ 1] = s;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = -s;\r\n  dst[ 5] = c;\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = 0;\r\n  dst[ 9] = 0;\r\n  dst[10] = 1;\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\r\n * angle.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction rotateZ(m, angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const m00 = m[0 * 4 + 0];\r\n  const m01 = m[0 * 4 + 1];\r\n  const m02 = m[0 * 4 + 2];\r\n  const m03 = m[0 * 4 + 3];\r\n  const m10 = m[1 * 4 + 0];\r\n  const m11 = m[1 * 4 + 1];\r\n  const m12 = m[1 * 4 + 2];\r\n  const m13 = m[1 * 4 + 3];\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n\r\n  dst[ 0] = c * m00 + s * m10;\r\n  dst[ 1] = c * m01 + s * m11;\r\n  dst[ 2] = c * m02 + s * m12;\r\n  dst[ 3] = c * m03 + s * m13;\r\n  dst[ 4] = c * m10 - s * m00;\r\n  dst[ 5] = c * m11 - s * m01;\r\n  dst[ 6] = c * m12 - s * m02;\r\n  dst[ 7] = c * m13 - s * m03;\r\n\r\n  if (m !== dst) {\r\n    dst[ 8] = m[ 8];\r\n    dst[ 9] = m[ 9];\r\n    dst[10] = m[10];\r\n    dst[11] = m[11];\r\n    dst[12] = m[12];\r\n    dst[13] = m[13];\r\n    dst[14] = m[14];\r\n    dst[15] = m[15];\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\r\n * angle.\r\n * @param {module:twgl/v3.Vec3} axis The axis\r\n *     about which to rotate.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\r\n *     around the axis.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction axisRotation(axis, angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  let x = axis[0];\r\n  let y = axis[1];\r\n  let z = axis[2];\r\n  const n = Math.sqrt(x * x + y * y + z * z);\r\n  x /= n;\r\n  y /= n;\r\n  z /= n;\r\n  const xx = x * x;\r\n  const yy = y * y;\r\n  const zz = z * z;\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n  const oneMinusCosine = 1 - c;\r\n\r\n  dst[ 0] = xx + (1 - xx) * c;\r\n  dst[ 1] = x * y * oneMinusCosine + z * s;\r\n  dst[ 2] = x * z * oneMinusCosine - y * s;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = x * y * oneMinusCosine - z * s;\r\n  dst[ 5] = yy + (1 - yy) * c;\r\n  dst[ 6] = y * z * oneMinusCosine + x * s;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = x * z * oneMinusCosine + y * s;\r\n  dst[ 9] = y * z * oneMinusCosine - x * s;\r\n  dst[10] = zz + (1 - zz) * c;\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\r\n * given angle.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} axis The axis\r\n *     about which to rotate.\r\n * @param {number} angleInRadians The angle by which to rotate (in radians).\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction axisRotate(m, axis, angleInRadians, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  let x = axis[0];\r\n  let y = axis[1];\r\n  let z = axis[2];\r\n  const n = Math.sqrt(x * x + y * y + z * z);\r\n  x /= n;\r\n  y /= n;\r\n  z /= n;\r\n  const xx = x * x;\r\n  const yy = y * y;\r\n  const zz = z * z;\r\n  const c = Math.cos(angleInRadians);\r\n  const s = Math.sin(angleInRadians);\r\n  const oneMinusCosine = 1 - c;\r\n\r\n  const r00 = xx + (1 - xx) * c;\r\n  const r01 = x * y * oneMinusCosine + z * s;\r\n  const r02 = x * z * oneMinusCosine - y * s;\r\n  const r10 = x * y * oneMinusCosine - z * s;\r\n  const r11 = yy + (1 - yy) * c;\r\n  const r12 = y * z * oneMinusCosine + x * s;\r\n  const r20 = x * z * oneMinusCosine + y * s;\r\n  const r21 = y * z * oneMinusCosine - x * s;\r\n  const r22 = zz + (1 - zz) * c;\r\n\r\n  const m00 = m[0];\r\n  const m01 = m[1];\r\n  const m02 = m[2];\r\n  const m03 = m[3];\r\n  const m10 = m[4];\r\n  const m11 = m[5];\r\n  const m12 = m[6];\r\n  const m13 = m[7];\r\n  const m20 = m[8];\r\n  const m21 = m[9];\r\n  const m22 = m[10];\r\n  const m23 = m[11];\r\n\r\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\r\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\r\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\r\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\r\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\r\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\r\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\r\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\r\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\r\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\r\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\r\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\r\n\r\n  if (m !== dst) {\r\n    dst[12] = m[12];\r\n    dst[13] = m[13];\r\n    dst[14] = m[14];\r\n    dst[15] = m[15];\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\r\n * the corresponding entry in the given vector; assumes the vector has three\r\n * entries.\r\n * @param {module:twgl/v3.Vec3} v A vector of\r\n *     three entries specifying the factor by which to scale in each dimension.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} The scaling matrix.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction scaling(v, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  dst[ 0] = v[0];\r\n  dst[ 1] = 0;\r\n  dst[ 2] = 0;\r\n  dst[ 3] = 0;\r\n  dst[ 4] = 0;\r\n  dst[ 5] = v[1];\r\n  dst[ 6] = 0;\r\n  dst[ 7] = 0;\r\n  dst[ 8] = 0;\r\n  dst[ 9] = 0;\r\n  dst[10] = v[2];\r\n  dst[11] = 0;\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = 0;\r\n  dst[15] = 1;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\r\n * given by the corresponding entry in the given vector; assumes the vector has\r\n * three entries.\r\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\r\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\r\n *     factor by which to scale in each dimension.\r\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\r\n * @return {module:twgl/m4.Mat4} m once modified.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction scale(m, v, dst) {\r\n  dst = dst || new MatType(16);\r\n\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n\r\n  dst[ 0] = v0 * m[0 * 4 + 0];\r\n  dst[ 1] = v0 * m[0 * 4 + 1];\r\n  dst[ 2] = v0 * m[0 * 4 + 2];\r\n  dst[ 3] = v0 * m[0 * 4 + 3];\r\n  dst[ 4] = v1 * m[1 * 4 + 0];\r\n  dst[ 5] = v1 * m[1 * 4 + 1];\r\n  dst[ 6] = v1 * m[1 * 4 + 2];\r\n  dst[ 7] = v1 * m[1 * 4 + 3];\r\n  dst[ 8] = v2 * m[2 * 4 + 0];\r\n  dst[ 9] = v2 * m[2 * 4 + 1];\r\n  dst[10] = v2 * m[2 * 4 + 2];\r\n  dst[11] = v2 * m[2 * 4 + 3];\r\n\r\n  if (m !== dst) {\r\n    dst[12] = m[12];\r\n    dst[13] = m[13];\r\n    dst[14] = m[14];\r\n    dst[15] = m[15];\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Takes a 4-by-4 matrix and a vector with 3 entries,\r\n * interprets the vector as a point, transforms that point by the matrix, and\r\n * returns the result as a vector with 3 entries.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} v The point.\r\n * @param {module:twgl/v3.Vec3} dst optional vec3 to store result\r\n * @return {module:twgl/v3.Vec3} dst or new vec3 if not provided\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction transformPoint(m, v, dst) {\r\n  dst = dst || v3.create();\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\r\n\r\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\r\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\r\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\r\n * direction, transforms that direction by the matrix, and returns the result;\r\n * assumes the transformation of 3-dimensional space represented by the matrix\r\n * is parallel-preserving, i.e. any combination of rotation, scaling and\r\n * translation, but not a perspective distortion. Returns a vector with 3\r\n * entries.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} v The direction.\r\n * @param {module:twgl/v3.Vec3} dst optional Vec3 to store result\r\n * @return {module:twgl/v3.Vec3} dst or new Vec3 if not provided\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction transformDirection(m, v, dst) {\r\n  dst = dst || v3.create();\r\n\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n\r\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\r\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\r\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\r\n * as a normal to a surface, and computes a vector which is normal upon\r\n * transforming that surface by the matrix. The effect of this function is the\r\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\r\n * function assumes the transformation of 3-dimensional space represented by the\r\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\r\n * translation, but not a perspective distortion.  Returns a vector with 3\r\n * entries.\r\n * @param {module:twgl/m4.Mat4} m The matrix.\r\n * @param {module:twgl/v3.Vec3} v The normal.\r\n * @param {module:twgl/v3.Vec3} [dst] The direction.\r\n * @return {module:twgl/v3.Vec3} The transformed direction.\r\n * @memberOf module:twgl/m4\r\n */\r\nfunction transformNormal(m, v, dst) {\r\n  dst = dst || v3.create();\r\n  const mi = inverse(m);\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n\r\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\r\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\r\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\r\n\r\n  return dst;\r\n}\r\n\r\nexport {\r\n  axisRotate,\r\n  axisRotation,\r\n  copy,\r\n  frustum,\r\n  getAxis,\r\n  getTranslation,\r\n  identity,\r\n  inverse,\r\n  lookAt,\r\n  multiply,\r\n  negate,\r\n  ortho,\r\n  perspective,\r\n  rotateX,\r\n  rotateY,\r\n  rotateZ,\r\n  rotationX,\r\n  rotationY,\r\n  rotationZ,\r\n  scale,\r\n  scaling,\r\n  setAxis,\r\n  setDefaultType,\r\n  setTranslation,\r\n  transformDirection,\r\n  transformNormal,\r\n  transformPoint,\r\n  translate,\r\n  translation,\r\n  transpose,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Various functions to make simple primitives\r\n *\r\n * note: Most primitive functions come in 3 styles\r\n *\r\n * *  `createSomeShapeBufferInfo`\r\n *\r\n *    These functions are almost always the functions you want to call. They\r\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\r\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\r\n *    and {@link module:twgl.drawBufferInfo} etc...\r\n *\r\n * *  `createSomeShapeBuffers`\r\n *\r\n *    These create WebGLBuffers and put your data in them but nothing else.\r\n *    It's a shortcut to doing it yourself if you don't want to use\r\n *    the higher level functions.\r\n *\r\n * *  `createSomeShapeVertices`\r\n *\r\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\r\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\r\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\r\n *\r\n *    example:\r\n *\r\n *        const arrays = twgl.primitives.createPlaneArrays(1);\r\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\r\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n *\r\n * @module twgl/primitives\r\n */\r\nimport * as attributes from './attributes.js';\r\nimport * as helper from './helper.js';\r\nimport * as typedArrays from './typedarrays.js';\r\nimport * as m4 from './m4.js';\r\nimport * as v3 from './v3.js';\r\n\r\nconst getArray = attributes.getArray_;  // eslint-disable-line\r\nconst getNumComponents = attributes.getNumComponents_;  // eslint-disable-line\r\n\r\n/**\r\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\r\n */\r\n\r\n/**\r\n * Add `push` to a typed array. It just keeps a 'cursor'\r\n * and allows use to `push` values into the array so we\r\n * don't have to manually compute offsets\r\n * @param {TypedArray} typedArray TypedArray to augment\r\n * @param {number} numComponents number of components.\r\n * @private\r\n */\r\nfunction augmentTypedArray(typedArray, numComponents) {\r\n  let cursor = 0;\r\n  typedArray.push = function() {\r\n    for (let ii = 0; ii < arguments.length; ++ii) {\r\n      const value = arguments[ii];\r\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\r\n        for (let jj = 0; jj < value.length; ++jj) {\r\n          typedArray[cursor++] = value[jj];\r\n        }\r\n      } else {\r\n        typedArray[cursor++] = value;\r\n      }\r\n    }\r\n  };\r\n  typedArray.reset = function(opt_index) {\r\n    cursor = opt_index || 0;\r\n  };\r\n  typedArray.numComponents = numComponents;\r\n  Object.defineProperty(typedArray, 'numElements', {\r\n    get: function() {\r\n      return this.length / this.numComponents | 0;\r\n    },\r\n  });\r\n  return typedArray;\r\n}\r\n\r\n/**\r\n * creates a typed array with a `push` function attached\r\n * so that you can easily *push* values.\r\n *\r\n * `push` can take multiple arguments. If an argument is an array each element\r\n * of the array will be added to the typed array.\r\n *\r\n * Example:\r\n *\r\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\r\n *     array.push(1, 2, 3);\r\n *     array.push([4, 5, 6]);\r\n *     // array now contains [1, 2, 3, 4, 5, 6]\r\n *\r\n * Also has `numComponents` and `numElements` properties.\r\n *\r\n * @param {number} numComponents number of components\r\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\r\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\r\n * @return {ArrayBufferView} A typed array.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\r\n  const Type = opt_type || Float32Array;\r\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\r\n}\r\n\r\nfunction allButIndices(name) {\r\n  return name !== \"indices\";\r\n}\r\n\r\n/**\r\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\r\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\r\n * @return {Object.<string, TypedArray>} The deindexed vertices\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction deindexVertices(vertices) {\r\n  const indices = vertices.indices;\r\n  const newVertices = {};\r\n  const numElements = indices.length;\r\n\r\n  function expandToUnindexed(channel) {\r\n    const srcBuffer = vertices[channel];\r\n    const numComponents = srcBuffer.numComponents;\r\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\r\n    for (let ii = 0; ii < numElements; ++ii) {\r\n      const ndx = indices[ii];\r\n      const offset = ndx * numComponents;\r\n      for (let jj = 0; jj < numComponents; ++jj) {\r\n        dstBuffer.push(srcBuffer[offset + jj]);\r\n      }\r\n    }\r\n    newVertices[channel] = dstBuffer;\r\n  }\r\n\r\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\r\n\r\n  return newVertices;\r\n}\r\n\r\n/**\r\n * flattens the normals of deindexed vertices in place.\r\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\r\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction flattenNormals(vertices) {\r\n  if (vertices.indices) {\r\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\r\n  }\r\n\r\n  const normals = vertices.normal;\r\n  const numNormals = normals.length;\r\n  for (let ii = 0; ii < numNormals; ii += 9) {\r\n    // pull out the 3 normals for this triangle\r\n    const nax = normals[ii + 0];\r\n    const nay = normals[ii + 1];\r\n    const naz = normals[ii + 2];\r\n\r\n    const nbx = normals[ii + 3];\r\n    const nby = normals[ii + 4];\r\n    const nbz = normals[ii + 5];\r\n\r\n    const ncx = normals[ii + 6];\r\n    const ncy = normals[ii + 7];\r\n    const ncz = normals[ii + 8];\r\n\r\n    // add them\r\n    let nx = nax + nbx + ncx;\r\n    let ny = nay + nby + ncy;\r\n    let nz = naz + nbz + ncz;\r\n\r\n    // normalize them\r\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\r\n\r\n    nx /= length;\r\n    ny /= length;\r\n    nz /= length;\r\n\r\n    // copy them back in\r\n    normals[ii + 0] = nx;\r\n    normals[ii + 1] = ny;\r\n    normals[ii + 2] = nz;\r\n\r\n    normals[ii + 3] = nx;\r\n    normals[ii + 4] = ny;\r\n    normals[ii + 5] = nz;\r\n\r\n    normals[ii + 6] = nx;\r\n    normals[ii + 7] = ny;\r\n    normals[ii + 8] = nz;\r\n  }\r\n\r\n  return vertices;\r\n}\r\n\r\nfunction applyFuncToV3Array(array, matrix, fn) {\r\n  const len = array.length;\r\n  const tmp = new Float32Array(3);\r\n  for (let ii = 0; ii < len; ii += 3) {\r\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\r\n    array[ii    ] = tmp[0];\r\n    array[ii + 1] = tmp[1];\r\n    array[ii + 2] = tmp[2];\r\n  }\r\n}\r\n\r\nfunction transformNormal(mi, v, dst) {\r\n  dst = dst || v3.create();\r\n  const v0 = v[0];\r\n  const v1 = v[1];\r\n  const v2 = v[2];\r\n\r\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\r\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\r\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Reorients directions by the given matrix..\r\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\r\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\r\n * @return {(number[]|TypedArray)} the same array that was passed in\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction reorientDirections(array, matrix) {\r\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\r\n  return array;\r\n}\r\n\r\n/**\r\n * Reorients normals by the inverse-transpose of the given\r\n * matrix..\r\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\r\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\r\n * @return {(number[]|TypedArray)} the same array that was passed in\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction reorientNormals(array, matrix) {\r\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\r\n  return array;\r\n}\r\n\r\n/**\r\n * Reorients positions by the given matrix. In other words, it\r\n * multiplies each vertex by the given matrix.\r\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\r\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\r\n * @return {(number[]|TypedArray)} the same array that was passed in\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction reorientPositions(array, matrix) {\r\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\r\n  return array;\r\n}\r\n\r\n/**\r\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\r\n */\r\n\r\n/**\r\n * Reorients arrays by the given matrix. Assumes arrays have\r\n * names that contains 'pos' could be reoriented as positions,\r\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\r\n *\r\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\r\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\r\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction reorientVertices(arrays, matrix) {\r\n  Object.keys(arrays).forEach(function(name) {\r\n    const array = arrays[name];\r\n    if (name.indexOf(\"pos\") >= 0) {\r\n      reorientPositions(array, matrix);\r\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\r\n      reorientDirections(array, matrix);\r\n    } else if (name.indexOf(\"norm\") >= 0) {\r\n      reorientNormals(array, matrix);\r\n    }\r\n  });\r\n  return arrays;\r\n}\r\n\r\n/**\r\n * Creates XY quad BufferInfo\r\n *\r\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\r\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\r\n *\r\n * If you want a unit quad centered above 0,0 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\r\n * @param {number} [xOffset] the amount to offset the quad in X\r\n * @param {number} [yOffset] the amount to offset the quad in Y\r\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\r\n * @memberOf module:twgl/primitives\r\n * @function createXYQuadBufferInfo\r\n */\r\n\r\n/**\r\n * Creates XY quad Buffers\r\n *\r\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\r\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\r\n *\r\n * If you want a unit quad centered above 0,0 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\r\n * @param {number} [xOffset] the amount to offset the quad in X\r\n * @param {number} [yOffset] the amount to offset the quad in Y\r\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\r\n * @memberOf module:twgl/primitives\r\n * @function createXYQuadBuffers\r\n */\r\n\r\n/**\r\n * Creates XY quad vertices\r\n *\r\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\r\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\r\n *\r\n * If you want a unit quad centered above 0,0 you'd call it with\r\n *\r\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\r\n *\r\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\r\n * @param {number} [xOffset] the amount to offset the quad in X\r\n * @param {number} [yOffset] the amount to offset the quad in Y\r\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createXYQuadVertices(size, xOffset, yOffset) {\r\n  size = size || 2;\r\n  xOffset = xOffset || 0;\r\n  yOffset = yOffset || 0;\r\n  size *= 0.5;\r\n  return {\r\n    position: {\r\n      numComponents: 2,\r\n      data: [\r\n        xOffset + -1 * size, yOffset + -1 * size,\r\n        xOffset +  1 * size, yOffset + -1 * size,\r\n        xOffset + -1 * size, yOffset +  1 * size,\r\n        xOffset +  1 * size, yOffset +  1 * size,\r\n      ],\r\n    },\r\n    normal: [\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n    ],\r\n    texcoord: [\r\n      0, 0,\r\n      1, 0,\r\n      0, 1,\r\n      1, 1,\r\n    ],\r\n    indices: [ 0, 1, 2, 2, 1, 3 ],\r\n  };\r\n}\r\n\r\n/**\r\n * Creates XZ plane BufferInfo.\r\n *\r\n * The created plane has position, normal, and texcoord data\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [width] Width of the plane. Default = 1\r\n * @param {number} [depth] Depth of the plane. Default = 1\r\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\r\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\r\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\r\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createPlaneBufferInfo\r\n */\r\n\r\n/**\r\n * Creates XZ plane buffers.\r\n *\r\n * The created plane has position, normal, and texcoord data\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [width] Width of the plane. Default = 1\r\n * @param {number} [depth] Depth of the plane. Default = 1\r\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\r\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\r\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\r\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createPlaneBuffers\r\n */\r\n\r\n/**\r\n * Creates XZ plane vertices.\r\n *\r\n * The created plane has position, normal, and texcoord data\r\n *\r\n * @param {number} [width] Width of the plane. Default = 1\r\n * @param {number} [depth] Depth of the plane. Default = 1\r\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\r\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\r\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\r\n * @return {Object.<string, TypedArray>} The created plane vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createPlaneVertices(\r\n    width,\r\n    depth,\r\n    subdivisionsWidth,\r\n    subdivisionsDepth,\r\n    matrix) {\r\n  width = width || 1;\r\n  depth = depth || 1;\r\n  subdivisionsWidth = subdivisionsWidth || 1;\r\n  subdivisionsDepth = subdivisionsDepth || 1;\r\n  matrix = matrix || m4.identity();\r\n\r\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\r\n  const positions = createAugmentedTypedArray(3, numVertices);\r\n  const normals = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords = createAugmentedTypedArray(2, numVertices);\r\n\r\n  for (let z = 0; z <= subdivisionsDepth; z++) {\r\n    for (let x = 0; x <= subdivisionsWidth; x++) {\r\n      const u = x / subdivisionsWidth;\r\n      const v = z / subdivisionsDepth;\r\n      positions.push(\r\n          width * u - width * 0.5,\r\n          0,\r\n          depth * v - depth * 0.5);\r\n      normals.push(0, 1, 0);\r\n      texcoords.push(u, v);\r\n    }\r\n  }\r\n\r\n  const numVertsAcross = subdivisionsWidth + 1;\r\n  const indices = createAugmentedTypedArray(\r\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\r\n\r\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\r\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\r\n      // Make triangle 1 of quad.\r\n      indices.push(\r\n          (z + 0) * numVertsAcross + x,\r\n          (z + 1) * numVertsAcross + x,\r\n          (z + 0) * numVertsAcross + x + 1);\r\n\r\n      // Make triangle 2 of quad.\r\n      indices.push(\r\n          (z + 1) * numVertsAcross + x,\r\n          (z + 1) * numVertsAcross + x + 1,\r\n          (z + 0) * numVertsAcross + x + 1);\r\n    }\r\n  }\r\n\r\n  const arrays = reorientVertices({\r\n    position: positions,\r\n    normal: normals,\r\n    texcoord: texcoords,\r\n    indices: indices,\r\n  }, matrix);\r\n  return arrays;\r\n}\r\n\r\n/**\r\n * Creates sphere BufferInfo.\r\n *\r\n * The created sphere has position, normal, and texcoord data\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius radius of the sphere.\r\n * @param {number} subdivisionsAxis number of steps around the sphere.\r\n * @param {number} subdivisionsHeight number of vertically on the sphere.\r\n * @param {number} [opt_startLatitudeInRadians] where to start the\r\n *     top of the sphere. Default = 0.\r\n * @param {number} [opt_endLatitudeInRadians] Where to end the\r\n *     bottom of the sphere. Default = Math.PI.\r\n * @param {number} [opt_startLongitudeInRadians] where to start\r\n *     wrapping the sphere. Default = 0.\r\n * @param {number} [opt_endLongitudeInRadians] where to end\r\n *     wrapping the sphere. Default = 2 * Math.PI.\r\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createSphereBufferInfo\r\n */\r\n\r\n/**\r\n * Creates sphere buffers.\r\n *\r\n * The created sphere has position, normal, and texcoord data\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius radius of the sphere.\r\n * @param {number} subdivisionsAxis number of steps around the sphere.\r\n * @param {number} subdivisionsHeight number of vertically on the sphere.\r\n * @param {number} [opt_startLatitudeInRadians] where to start the\r\n *     top of the sphere. Default = 0.\r\n * @param {number} [opt_endLatitudeInRadians] Where to end the\r\n *     bottom of the sphere. Default = Math.PI.\r\n * @param {number} [opt_startLongitudeInRadians] where to start\r\n *     wrapping the sphere. Default = 0.\r\n * @param {number} [opt_endLongitudeInRadians] where to end\r\n *     wrapping the sphere. Default = 2 * Math.PI.\r\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createSphereBuffers\r\n */\r\n\r\n/**\r\n * Creates sphere vertices.\r\n *\r\n * The created sphere has position, normal, and texcoord data\r\n *\r\n * @param {number} radius radius of the sphere.\r\n * @param {number} subdivisionsAxis number of steps around the sphere.\r\n * @param {number} subdivisionsHeight number of vertically on the sphere.\r\n * @param {number} [opt_startLatitudeInRadians] where to start the\r\n *     top of the sphere. Default = 0.\r\n * @param {number} [opt_endLatitudeInRadians] Where to end the\r\n *     bottom of the sphere. Default = Math.PI.\r\n * @param {number} [opt_startLongitudeInRadians] where to start\r\n *     wrapping the sphere. Default = 0.\r\n * @param {number} [opt_endLongitudeInRadians] where to end\r\n *     wrapping the sphere. Default = 2 * Math.PI.\r\n * @return {Object.<string, TypedArray>} The created sphere vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createSphereVertices(\r\n    radius,\r\n    subdivisionsAxis,\r\n    subdivisionsHeight,\r\n    opt_startLatitudeInRadians,\r\n    opt_endLatitudeInRadians,\r\n    opt_startLongitudeInRadians,\r\n    opt_endLongitudeInRadians) {\r\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\r\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\r\n  }\r\n\r\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\r\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\r\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\r\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\r\n\r\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\r\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\r\n\r\n  // We are going to generate our sphere by iterating through its\r\n  // spherical coordinates and generating 2 triangles for each quad on a\r\n  // ring of the sphere.\r\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\r\n  const positions = createAugmentedTypedArray(3, numVertices);\r\n  const normals   = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\r\n\r\n  // Generate the individual vertices in our vertex buffer.\r\n  for (let y = 0; y <= subdivisionsHeight; y++) {\r\n    for (let x = 0; x <= subdivisionsAxis; x++) {\r\n      // Generate a vertex based on its spherical coordinates\r\n      const u = x / subdivisionsAxis;\r\n      const v = y / subdivisionsHeight;\r\n      const theta = longRange * u + opt_startLongitudeInRadians;\r\n      const phi = latRange * v + opt_startLatitudeInRadians;\r\n      const sinTheta = Math.sin(theta);\r\n      const cosTheta = Math.cos(theta);\r\n      const sinPhi = Math.sin(phi);\r\n      const cosPhi = Math.cos(phi);\r\n      const ux = cosTheta * sinPhi;\r\n      const uy = cosPhi;\r\n      const uz = sinTheta * sinPhi;\r\n      positions.push(radius * ux, radius * uy, radius * uz);\r\n      normals.push(ux, uy, uz);\r\n      texcoords.push(1 - u, v);\r\n    }\r\n  }\r\n\r\n  const numVertsAround = subdivisionsAxis + 1;\r\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\r\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\r\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\r\n      // Make triangle 1 of quad.\r\n      indices.push(\r\n          (y + 0) * numVertsAround + x,\r\n          (y + 0) * numVertsAround + x + 1,\r\n          (y + 1) * numVertsAround + x);\r\n\r\n      // Make triangle 2 of quad.\r\n      indices.push(\r\n          (y + 1) * numVertsAround + x,\r\n          (y + 0) * numVertsAround + x + 1,\r\n          (y + 1) * numVertsAround + x + 1);\r\n    }\r\n  }\r\n\r\n  return {\r\n    position: positions,\r\n    normal: normals,\r\n    texcoord: texcoords,\r\n    indices: indices,\r\n  };\r\n}\r\n\r\n/**\r\n * Array of the indices of corners of each face of a cube.\r\n * @type {Array.<number[]>}\r\n * @private\r\n */\r\nconst CUBE_FACE_INDICES = [\r\n  [3, 7, 5, 1],  // right\r\n  [6, 2, 0, 4],  // left\r\n  [6, 7, 3, 2],  // ??\r\n  [0, 1, 5, 4],  // ??\r\n  [7, 6, 4, 5],  // front\r\n  [2, 3, 1, 0],  // back\r\n];\r\n\r\n/**\r\n * Creates a BufferInfo for a cube.\r\n *\r\n * The cube is created around the origin. (-size / 2, size / 2).\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [size] width, height and depth of the cube.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createCubeBufferInfo\r\n */\r\n\r\n/**\r\n * Creates the buffers and indices for a cube.\r\n *\r\n * The cube is created around the origin. (-size / 2, size / 2).\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} [size] width, height and depth of the cube.\r\n * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createCubeBuffers\r\n */\r\n\r\n/**\r\n * Creates the vertices and indices for a cube.\r\n *\r\n * The cube is created around the origin. (-size / 2, size / 2).\r\n *\r\n * @param {number} [size] width, height and depth of the cube.\r\n * @return {Object.<string, TypedArray>} The created vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createCubeVertices(size) {\r\n  size = size || 1;\r\n  const k = size / 2;\r\n\r\n  const cornerVertices = [\r\n    [-k, -k, -k],\r\n    [+k, -k, -k],\r\n    [-k, +k, -k],\r\n    [+k, +k, -k],\r\n    [-k, -k, +k],\r\n    [+k, -k, +k],\r\n    [-k, +k, +k],\r\n    [+k, +k, +k],\r\n  ];\r\n\r\n  const faceNormals = [\r\n    [+1, +0, +0],\r\n    [-1, +0, +0],\r\n    [+0, +1, +0],\r\n    [+0, -1, +0],\r\n    [+0, +0, +1],\r\n    [+0, +0, -1],\r\n  ];\r\n\r\n  const uvCoords = [\r\n    [1, 0],\r\n    [0, 0],\r\n    [0, 1],\r\n    [1, 1],\r\n  ];\r\n\r\n  const numVertices = 6 * 4;\r\n  const positions = createAugmentedTypedArray(3, numVertices);\r\n  const normals   = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\r\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\r\n\r\n  for (let f = 0; f < 6; ++f) {\r\n    const faceIndices = CUBE_FACE_INDICES[f];\r\n    for (let v = 0; v < 4; ++v) {\r\n      const position = cornerVertices[faceIndices[v]];\r\n      const normal = faceNormals[f];\r\n      const uv = uvCoords[v];\r\n\r\n      // Each face needs all four vertices because the normals and texture\r\n      // coordinates are not all the same.\r\n      positions.push(position);\r\n      normals.push(normal);\r\n      texcoords.push(uv);\r\n\r\n    }\r\n    // Two triangles make a square face.\r\n    const offset = 4 * f;\r\n    indices.push(offset + 0, offset + 1, offset + 2);\r\n    indices.push(offset + 0, offset + 2, offset + 3);\r\n  }\r\n\r\n  return {\r\n    position: positions,\r\n    normal: normals,\r\n    texcoord: texcoords,\r\n    indices: indices,\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\r\n * except that it has different top and bottom radii. A truncated cone\r\n * can also be used to create cylinders and regular cones. The\r\n * truncated cone will be created centered about the origin, with the\r\n * y axis as its vertical axis.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} bottomRadius Bottom radius of truncated cone.\r\n * @param {number} topRadius Top radius of truncated cone.\r\n * @param {number} height Height of truncated cone.\r\n * @param {number} radialSubdivisions The number of subdivisions around the\r\n *     truncated cone.\r\n * @param {number} verticalSubdivisions The number of subdivisions down the\r\n *     truncated cone.\r\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\r\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\r\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createTruncatedConeBufferInfo\r\n */\r\n\r\n/**\r\n * Creates buffers for a truncated cone, which is like a cylinder\r\n * except that it has different top and bottom radii. A truncated cone\r\n * can also be used to create cylinders and regular cones. The\r\n * truncated cone will be created centered about the origin, with the\r\n * y axis as its vertical axis.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} bottomRadius Bottom radius of truncated cone.\r\n * @param {number} topRadius Top radius of truncated cone.\r\n * @param {number} height Height of truncated cone.\r\n * @param {number} radialSubdivisions The number of subdivisions around the\r\n *     truncated cone.\r\n * @param {number} verticalSubdivisions The number of subdivisions down the\r\n *     truncated cone.\r\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\r\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\r\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createTruncatedConeBuffers\r\n */\r\n\r\n/**\r\n * Creates vertices for a truncated cone, which is like a cylinder\r\n * except that it has different top and bottom radii. A truncated cone\r\n * can also be used to create cylinders and regular cones. The\r\n * truncated cone will be created centered about the origin, with the\r\n * y axis as its vertical axis. .\r\n *\r\n * @param {number} bottomRadius Bottom radius of truncated cone.\r\n * @param {number} topRadius Top radius of truncated cone.\r\n * @param {number} height Height of truncated cone.\r\n * @param {number} radialSubdivisions The number of subdivisions around the\r\n *     truncated cone.\r\n * @param {number} verticalSubdivisions The number of subdivisions down the\r\n *     truncated cone.\r\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\r\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\r\n * @return {Object.<string, TypedArray>} The created cone vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createTruncatedConeVertices(\r\n    bottomRadius,\r\n    topRadius,\r\n    height,\r\n    radialSubdivisions,\r\n    verticalSubdivisions,\r\n    opt_topCap,\r\n    opt_bottomCap) {\r\n  if (radialSubdivisions < 3) {\r\n    throw Error('radialSubdivisions must be 3 or greater');\r\n  }\r\n\r\n  if (verticalSubdivisions < 1) {\r\n    throw Error('verticalSubdivisions must be 1 or greater');\r\n  }\r\n\r\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\r\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\r\n\r\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\r\n\r\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\r\n  const positions = createAugmentedTypedArray(3, numVertices);\r\n  const normals   = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords = createAugmentedTypedArray(2, numVertices);\r\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\r\n\r\n  const vertsAroundEdge = radialSubdivisions + 1;\r\n\r\n  // The slant of the cone is constant across its surface\r\n  const slant = Math.atan2(bottomRadius - topRadius, height);\r\n  const cosSlant = Math.cos(slant);\r\n  const sinSlant = Math.sin(slant);\r\n\r\n  const start = topCap ? -2 : 0;\r\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\r\n\r\n  for (let yy = start; yy <= end; ++yy) {\r\n    let v = yy / verticalSubdivisions;\r\n    let y = height * v;\r\n    let ringRadius;\r\n    if (yy < 0) {\r\n      y = 0;\r\n      v = 1;\r\n      ringRadius = bottomRadius;\r\n    } else if (yy > verticalSubdivisions) {\r\n      y = height;\r\n      v = 1;\r\n      ringRadius = topRadius;\r\n    } else {\r\n      ringRadius = bottomRadius +\r\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\r\n    }\r\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\r\n      ringRadius = 0;\r\n      v = 0;\r\n    }\r\n    y -= height / 2;\r\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\r\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\r\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\r\n      positions.push(sin * ringRadius, y, cos * ringRadius);\r\n      normals.push(\r\n          (yy < 0 || yy > verticalSubdivisions) ? 0 : (sin * cosSlant),\r\n          (yy < 0) ? -1 : (yy > verticalSubdivisions ? 1 : sinSlant),\r\n          (yy < 0 || yy > verticalSubdivisions) ? 0 : (cos * cosSlant));\r\n      texcoords.push((ii / radialSubdivisions), 1 - v);\r\n    }\r\n  }\r\n\r\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\r\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\r\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\r\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\r\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\r\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\r\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\r\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\r\n    }\r\n  }\r\n\r\n  return {\r\n    position: positions,\r\n    normal: normals,\r\n    texcoord: texcoords,\r\n    indices: indices,\r\n  };\r\n}\r\n\r\n/**\r\n * Expands RLE data\r\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\r\n * @param {number[]} [padding] value to add each entry with.\r\n * @return {number[]} the expanded rleData\r\n * @private\r\n */\r\nfunction expandRLEData(rleData, padding) {\r\n  padding = padding || [];\r\n  const data = [];\r\n  for (let ii = 0; ii < rleData.length; ii += 4) {\r\n    const runLength = rleData[ii];\r\n    const element = rleData.slice(ii + 1, ii + 4);\r\n    element.push.apply(element, padding);\r\n    for (let jj = 0; jj < runLength; ++jj) {\r\n      data.push.apply(data, element);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Creates 3D 'F' BufferInfo.\r\n * An 'F' is useful because you can easily tell which way it is oriented.\r\n * The created 'F' has position, normal, texcoord, and color buffers.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function create3DFBufferInfo\r\n */\r\n\r\n/**\r\n * Creates 3D 'F' buffers.\r\n * An 'F' is useful because you can easily tell which way it is oriented.\r\n * The created 'F' has position, normal, texcoord, and color buffers.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function create3DFBuffers\r\n */\r\n\r\n/**\r\n * Creates 3D 'F' vertices.\r\n * An 'F' is useful because you can easily tell which way it is oriented.\r\n * The created 'F' has position, normal, texcoord, and color arrays.\r\n *\r\n * @return {Object.<string, TypedArray>} The created vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction create3DFVertices() {\r\n\r\n  const positions = [\r\n    // left column front\r\n    0,   0,  0,\r\n    0, 150,  0,\r\n    30,   0,  0,\r\n    0, 150,  0,\r\n    30, 150,  0,\r\n    30,   0,  0,\r\n\r\n    // top rung front\r\n    30,   0,  0,\r\n    30,  30,  0,\r\n    100,   0,  0,\r\n    30,  30,  0,\r\n    100,  30,  0,\r\n    100,   0,  0,\r\n\r\n    // middle rung front\r\n    30,  60,  0,\r\n    30,  90,  0,\r\n    67,  60,  0,\r\n    30,  90,  0,\r\n    67,  90,  0,\r\n    67,  60,  0,\r\n\r\n    // left column back\r\n      0,   0,  30,\r\n     30,   0,  30,\r\n      0, 150,  30,\r\n      0, 150,  30,\r\n     30,   0,  30,\r\n     30, 150,  30,\r\n\r\n    // top rung back\r\n     30,   0,  30,\r\n    100,   0,  30,\r\n     30,  30,  30,\r\n     30,  30,  30,\r\n    100,   0,  30,\r\n    100,  30,  30,\r\n\r\n    // middle rung back\r\n     30,  60,  30,\r\n     67,  60,  30,\r\n     30,  90,  30,\r\n     30,  90,  30,\r\n     67,  60,  30,\r\n     67,  90,  30,\r\n\r\n    // top\r\n      0,   0,   0,\r\n    100,   0,   0,\r\n    100,   0,  30,\r\n      0,   0,   0,\r\n    100,   0,  30,\r\n      0,   0,  30,\r\n\r\n    // top rung front\r\n    100,   0,   0,\r\n    100,  30,   0,\r\n    100,  30,  30,\r\n    100,   0,   0,\r\n    100,  30,  30,\r\n    100,   0,  30,\r\n\r\n    // under top rung\r\n    30,   30,   0,\r\n    30,   30,  30,\r\n    100,  30,  30,\r\n    30,   30,   0,\r\n    100,  30,  30,\r\n    100,  30,   0,\r\n\r\n    // between top rung and middle\r\n    30,   30,   0,\r\n    30,   60,  30,\r\n    30,   30,  30,\r\n    30,   30,   0,\r\n    30,   60,   0,\r\n    30,   60,  30,\r\n\r\n    // top of middle rung\r\n    30,   60,   0,\r\n    67,   60,  30,\r\n    30,   60,  30,\r\n    30,   60,   0,\r\n    67,   60,   0,\r\n    67,   60,  30,\r\n\r\n    // front of middle rung\r\n    67,   60,   0,\r\n    67,   90,  30,\r\n    67,   60,  30,\r\n    67,   60,   0,\r\n    67,   90,   0,\r\n    67,   90,  30,\r\n\r\n    // bottom of middle rung.\r\n    30,   90,   0,\r\n    30,   90,  30,\r\n    67,   90,  30,\r\n    30,   90,   0,\r\n    67,   90,  30,\r\n    67,   90,   0,\r\n\r\n    // front of bottom\r\n    30,   90,   0,\r\n    30,  150,  30,\r\n    30,   90,  30,\r\n    30,   90,   0,\r\n    30,  150,   0,\r\n    30,  150,  30,\r\n\r\n    // bottom\r\n    0,   150,   0,\r\n    0,   150,  30,\r\n    30,  150,  30,\r\n    0,   150,   0,\r\n    30,  150,  30,\r\n    30,  150,   0,\r\n\r\n    // left side\r\n    0,   0,   0,\r\n    0,   0,  30,\r\n    0, 150,  30,\r\n    0,   0,   0,\r\n    0, 150,  30,\r\n    0, 150,   0,\r\n  ];\r\n\r\n  const texcoords = [\r\n    // left column front\r\n    0.22, 0.19,\r\n    0.22, 0.79,\r\n    0.34, 0.19,\r\n    0.22, 0.79,\r\n    0.34, 0.79,\r\n    0.34, 0.19,\r\n\r\n    // top rung front\r\n    0.34, 0.19,\r\n    0.34, 0.31,\r\n    0.62, 0.19,\r\n    0.34, 0.31,\r\n    0.62, 0.31,\r\n    0.62, 0.19,\r\n\r\n    // middle rung front\r\n    0.34, 0.43,\r\n    0.34, 0.55,\r\n    0.49, 0.43,\r\n    0.34, 0.55,\r\n    0.49, 0.55,\r\n    0.49, 0.43,\r\n\r\n    // left column back\r\n    0, 0,\r\n    1, 0,\r\n    0, 1,\r\n    0, 1,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // top rung back\r\n    0, 0,\r\n    1, 0,\r\n    0, 1,\r\n    0, 1,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // middle rung back\r\n    0, 0,\r\n    1, 0,\r\n    0, 1,\r\n    0, 1,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // top\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n\r\n    // top rung front\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n\r\n    // under top rung\r\n    0, 0,\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    1, 0,\r\n\r\n    // between top rung and middle\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // top of middle rung\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // front of middle rung\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // bottom of middle rung.\r\n    0, 0,\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    1, 0,\r\n\r\n    // front of bottom\r\n    0, 0,\r\n    1, 1,\r\n    0, 1,\r\n    0, 0,\r\n    1, 0,\r\n    1, 1,\r\n\r\n    // bottom\r\n    0, 0,\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    1, 0,\r\n\r\n    // left side\r\n    0, 0,\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 1,\r\n    1, 0,\r\n  ];\r\n\r\n  const normals = expandRLEData([\r\n    // left column front\r\n    // top rung front\r\n    // middle rung front\r\n    18, 0, 0, 1,\r\n\r\n    // left column back\r\n    // top rung back\r\n    // middle rung back\r\n    18, 0, 0, -1,\r\n\r\n    // top\r\n    6, 0, 1, 0,\r\n\r\n    // top rung front\r\n    6, 1, 0, 0,\r\n\r\n    // under top rung\r\n    6, 0, -1, 0,\r\n\r\n    // between top rung and middle\r\n    6, 1, 0, 0,\r\n\r\n    // top of middle rung\r\n    6, 0, 1, 0,\r\n\r\n    // front of middle rung\r\n    6, 1, 0, 0,\r\n\r\n    // bottom of middle rung.\r\n    6, 0, -1, 0,\r\n\r\n    // front of bottom\r\n    6, 1, 0, 0,\r\n\r\n    // bottom\r\n    6, 0, -1, 0,\r\n\r\n    // left side\r\n    6, -1, 0, 0,\r\n  ]);\r\n\r\n  const colors = expandRLEData([\r\n        // left column front\r\n        // top rung front\r\n        // middle rung front\r\n      18, 200,  70, 120,\r\n\r\n        // left column back\r\n        // top rung back\r\n        // middle rung back\r\n      18, 80, 70, 200,\r\n\r\n        // top\r\n      6, 70, 200, 210,\r\n\r\n        // top rung front\r\n      6, 200, 200, 70,\r\n\r\n        // under top rung\r\n      6, 210, 100, 70,\r\n\r\n        // between top rung and middle\r\n      6, 210, 160, 70,\r\n\r\n        // top of middle rung\r\n      6, 70, 180, 210,\r\n\r\n        // front of middle rung\r\n      6, 100, 70, 210,\r\n\r\n        // bottom of middle rung.\r\n      6, 76, 210, 100,\r\n\r\n        // front of bottom\r\n      6, 140, 210, 80,\r\n\r\n        // bottom\r\n      6, 90, 130, 110,\r\n\r\n        // left side\r\n      6, 160, 160, 220,\r\n  ], [255]);\r\n\r\n  const numVerts = positions.length / 3;\r\n\r\n  const arrays = {\r\n    position: createAugmentedTypedArray(3, numVerts),\r\n    texcoord: createAugmentedTypedArray(2,  numVerts),\r\n    normal: createAugmentedTypedArray(3, numVerts),\r\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\r\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\r\n  };\r\n\r\n  arrays.position.push(positions);\r\n  arrays.texcoord.push(texcoords);\r\n  arrays.normal.push(normals);\r\n  arrays.color.push(colors);\r\n\r\n  for (let ii = 0; ii < numVerts; ++ii) {\r\n    arrays.indices.push(ii);\r\n  }\r\n\r\n  return arrays;\r\n}\r\n\r\n/**\r\n * Creates cresent BufferInfo.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} verticalRadius The vertical radius of the cresent.\r\n * @param {number} outerRadius The outer radius of the cresent.\r\n * @param {number} innerRadius The inner radius of the cresent.\r\n * @param {number} thickness The thickness of the cresent.\r\n * @param {number} subdivisionsDown number of steps around the cresent.\r\n * @param {number} [startOffset] Where to start arc. Default 0.\r\n * @param {number} [endOffset] Where to end arg. Default 1.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createCresentBufferInfo\r\n */\r\n\r\n/**\r\n * Creates cresent buffers.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} verticalRadius The vertical radius of the cresent.\r\n * @param {number} outerRadius The outer radius of the cresent.\r\n * @param {number} innerRadius The inner radius of the cresent.\r\n * @param {number} thickness The thickness of the cresent.\r\n * @param {number} subdivisionsDown number of steps around the cresent.\r\n * @param {number} [startOffset] Where to start arc. Default 0.\r\n * @param {number} [endOffset] Where to end arg. Default 1.\r\n * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createCresentBuffers\r\n */\r\n\r\n/**\r\n * Creates cresent vertices.\r\n *\r\n * @param {number} verticalRadius The vertical radius of the cresent.\r\n * @param {number} outerRadius The outer radius of the cresent.\r\n * @param {number} innerRadius The inner radius of the cresent.\r\n * @param {number} thickness The thickness of the cresent.\r\n * @param {number} subdivisionsDown number of steps around the cresent.\r\n * @param {number} [startOffset] Where to start arc. Default 0.\r\n * @param {number} [endOffset] Where to end arg. Default 1.\r\n * @return {Object.<string, TypedArray>} The created vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\n function createCresentVertices(\r\n    verticalRadius,\r\n    outerRadius,\r\n    innerRadius,\r\n    thickness,\r\n    subdivisionsDown,\r\n    startOffset,\r\n    endOffset) {\r\n  if (subdivisionsDown <= 0) {\r\n    throw Error('subdivisionDown must be > 0');\r\n  }\r\n\r\n  startOffset = startOffset || 0;\r\n  endOffset   = endOffset || 1;\r\n\r\n  const subdivisionsThick = 2;\r\n\r\n  const offsetRange = endOffset - startOffset;\r\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\r\n  const positions   = createAugmentedTypedArray(3, numVertices);\r\n  const normals     = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\r\n\r\n  function lerp(a, b, s) {\r\n    return a + (b - a) * s;\r\n  }\r\n\r\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\r\n    for (let z = 0; z <= subdivisionsDown; z++) {\r\n      const uBack = x / (subdivisionsThick - 1);\r\n      const v = z / subdivisionsDown;\r\n      const xBack = (uBack - 0.5) * 2;\r\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\r\n      const s = Math.sin(angle);\r\n      const c = Math.cos(angle);\r\n      const radius = lerp(verticalRadius, arcRadius, s);\r\n      const px = xBack * thickness;\r\n      const py = c * verticalRadius;\r\n      const pz = s * radius;\r\n      positions.push(px, py, pz);\r\n      const n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\r\n      normals.push(n);\r\n      texcoords.push(uBack * uMult + uAdd, v);\r\n    }\r\n  }\r\n\r\n  // Generate the individual vertices in our vertex buffer.\r\n  for (let x = 0; x < subdivisionsThick; x++) {\r\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\r\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\r\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\r\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\r\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\r\n  }\r\n\r\n  // Do outer surface.\r\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\r\n\r\n  function createSurface(leftArcOffset, rightArcOffset) {\r\n    for (let z = 0; z < subdivisionsDown; ++z) {\r\n      // Make triangle 1 of quad.\r\n      indices.push(\r\n          leftArcOffset + z + 0,\r\n          leftArcOffset + z + 1,\r\n          rightArcOffset + z + 0);\r\n\r\n      // Make triangle 2 of quad.\r\n      indices.push(\r\n          leftArcOffset + z + 1,\r\n          rightArcOffset + z + 1,\r\n          rightArcOffset + z + 0);\r\n    }\r\n  }\r\n\r\n  const numVerticesDown = subdivisionsDown + 1;\r\n  // front\r\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\r\n  // right\r\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\r\n  // back\r\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\r\n  // left\r\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\r\n\r\n  return {\r\n    position: positions,\r\n    normal:   normals,\r\n    texcoord: texcoords,\r\n    indices:  indices,\r\n  };\r\n}\r\n\r\n/**\r\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\r\n * along the y-axis.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius Radius of cylinder.\r\n * @param {number} height Height of cylinder.\r\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\r\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\r\n * @param {boolean} [topCap] Create top cap. Default = true.\r\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createCylinderBufferInfo\r\n */\r\n\r\n /**\r\n  * Creates cylinder buffers. The cylinder will be created around the origin\r\n  * along the y-axis.\r\n  *\r\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n  * @param {number} radius Radius of cylinder.\r\n  * @param {number} height Height of cylinder.\r\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\r\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\r\n  * @param {boolean} [topCap] Create top cap. Default = true.\r\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\r\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n  * @memberOf module:twgl/primitives\r\n  * @function createCylinderBuffers\r\n  */\r\n\r\n /**\r\n  * Creates cylinder vertices. The cylinder will be created around the origin\r\n  * along the y-axis.\r\n  *\r\n  * @param {number} radius Radius of cylinder.\r\n  * @param {number} height Height of cylinder.\r\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\r\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\r\n  * @param {boolean} [topCap] Create top cap. Default = true.\r\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\r\n  * @return {Object.<string, TypedArray>} The created vertices.\r\n  * @memberOf module:twgl/primitives\r\n  */\r\nfunction createCylinderVertices(\r\n    radius,\r\n    height,\r\n    radialSubdivisions,\r\n    verticalSubdivisions,\r\n    topCap,\r\n    bottomCap) {\r\n  return createTruncatedConeVertices(\r\n      radius,\r\n      radius,\r\n      height,\r\n      radialSubdivisions,\r\n      verticalSubdivisions,\r\n      topCap,\r\n      bottomCap);\r\n}\r\n\r\n/**\r\n * Creates BufferInfo for a torus\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius radius of center of torus circle.\r\n * @param {number} thickness radius of torus ring.\r\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\r\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\r\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\r\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createTorusBufferInfo\r\n */\r\n\r\n/**\r\n * Creates buffers for a torus\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius radius of center of torus circle.\r\n * @param {number} thickness radius of torus ring.\r\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\r\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\r\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\r\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\r\n * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createTorusBuffers\r\n */\r\n\r\n/**\r\n * Creates vertices for a torus\r\n *\r\n * @param {number} radius radius of center of torus circle.\r\n * @param {number} thickness radius of torus ring.\r\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\r\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\r\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\r\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\r\n * @return {Object.<string, TypedArray>} The created vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createTorusVertices(\r\n    radius,\r\n    thickness,\r\n    radialSubdivisions,\r\n    bodySubdivisions,\r\n    startAngle,\r\n    endAngle) {\r\n  if (radialSubdivisions < 3) {\r\n    throw Error('radialSubdivisions must be 3 or greater');\r\n  }\r\n\r\n  if (bodySubdivisions < 3) {\r\n    throw Error('verticalSubdivisions must be 3 or greater');\r\n  }\r\n\r\n  startAngle = startAngle || 0;\r\n  endAngle = endAngle || Math.PI * 2;\r\n  const range = endAngle - startAngle;\r\n\r\n  const radialParts = radialSubdivisions + 1;\r\n  const bodyParts   = bodySubdivisions + 1;\r\n  const numVertices = radialParts * bodyParts;\r\n  const positions   = createAugmentedTypedArray(3, numVertices);\r\n  const normals     = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\r\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\r\n\r\n  for (let slice = 0; slice < bodyParts; ++slice) {\r\n    const v = slice / bodySubdivisions;\r\n    const sliceAngle = v * Math.PI * 2;\r\n    const sliceSin = Math.sin(sliceAngle);\r\n    const ringRadius = radius + sliceSin * thickness;\r\n    const ny = Math.cos(sliceAngle);\r\n    const y = ny * thickness;\r\n    for (let ring = 0; ring < radialParts; ++ring) {\r\n      const u = ring / radialSubdivisions;\r\n      const ringAngle = startAngle + u * range;\r\n      const xSin = Math.sin(ringAngle);\r\n      const zCos = Math.cos(ringAngle);\r\n      const x = xSin * ringRadius;\r\n      const z = zCos * ringRadius;\r\n      const nx = xSin * sliceSin;\r\n      const nz = zCos * sliceSin;\r\n      positions.push(x, y, z);\r\n      normals.push(nx, ny, nz);\r\n      texcoords.push(u, 1 - v);\r\n    }\r\n  }\r\n\r\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\r\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\r\n      const nextRingIndex  = 1 + ring;\r\n      const nextSliceIndex = 1 + slice;\r\n      indices.push(radialParts * slice          + ring,\r\n                   radialParts * nextSliceIndex + ring,\r\n                   radialParts * slice          + nextRingIndex);\r\n      indices.push(radialParts * nextSliceIndex + ring,\r\n                   radialParts * nextSliceIndex + nextRingIndex,\r\n                   radialParts * slice          + nextRingIndex);\r\n    }\r\n  }\r\n\r\n  return {\r\n    position: positions,\r\n    normal:   normals,\r\n    texcoord: texcoords,\r\n    indices:  indices,\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\r\n * the origin. When creating, at least 3 divisions, or pie\r\n * pieces, need to be specified, otherwise the triangles making\r\n * up the disc will be degenerate. You can also specify the\r\n * number of radial pieces `stacks`. A value of 1 for\r\n * stacks will give you a simple disc of pie pieces.  If you\r\n * want to create an annulus you can set `innerRadius` to a\r\n * value > 0. Finally, `stackPower` allows you to have the widths\r\n * increase or decrease as you move away from the center. This\r\n * is particularly useful when using the disc as a ground plane\r\n * with a fixed camera such that you don't need the resolution\r\n * of small triangles near the perimeter. For example, a value\r\n * of 2 will produce stacks whose ouside radius increases with\r\n * the square of the stack index. A value of 1 will give uniform\r\n * stacks.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius Radius of the ground plane.\r\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\r\n * @param {number} [stacks] Number of radial divisions (default=1).\r\n * @param {number} [innerRadius] Default 0.\r\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\r\n * @return {module:twgl.BufferInfo} The created BufferInfo.\r\n * @memberOf module:twgl/primitives\r\n * @function createDiscBufferInfo\r\n */\r\n\r\n/**\r\n * Creates disc buffers. The disc will be in the xz plane, centered at\r\n * the origin. When creating, at least 3 divisions, or pie\r\n * pieces, need to be specified, otherwise the triangles making\r\n * up the disc will be degenerate. You can also specify the\r\n * number of radial pieces `stacks`. A value of 1 for\r\n * stacks will give you a simple disc of pie pieces.  If you\r\n * want to create an annulus you can set `innerRadius` to a\r\n * value > 0. Finally, `stackPower` allows you to have the widths\r\n * increase or decrease as you move away from the center. This\r\n * is particularly useful when using the disc as a ground plane\r\n * with a fixed camera such that you don't need the resolution\r\n * of small triangles near the perimeter. For example, a value\r\n * of 2 will produce stacks whose ouside radius increases with\r\n * the square of the stack index. A value of 1 will give uniform\r\n * stacks.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\r\n * @param {number} radius Radius of the ground plane.\r\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\r\n * @param {number} [stacks] Number of radial divisions (default=1).\r\n * @param {number} [innerRadius] Default 0.\r\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\r\n * @return {Object.<string, WebGLBuffer>} The created buffers.\r\n * @memberOf module:twgl/primitives\r\n * @function createDiscBuffers\r\n */\r\n\r\n/**\r\n * Creates disc vertices. The disc will be in the xz plane, centered at\r\n * the origin. When creating, at least 3 divisions, or pie\r\n * pieces, need to be specified, otherwise the triangles making\r\n * up the disc will be degenerate. You can also specify the\r\n * number of radial pieces `stacks`. A value of 1 for\r\n * stacks will give you a simple disc of pie pieces.  If you\r\n * want to create an annulus you can set `innerRadius` to a\r\n * value > 0. Finally, `stackPower` allows you to have the widths\r\n * increase or decrease as you move away from the center. This\r\n * is particularly useful when using the disc as a ground plane\r\n * with a fixed camera such that you don't need the resolution\r\n * of small triangles near the perimeter. For example, a value\r\n * of 2 will produce stacks whose ouside radius increases with\r\n * the square of the stack index. A value of 1 will give uniform\r\n * stacks.\r\n *\r\n * @param {number} radius Radius of the ground plane.\r\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\r\n * @param {number} [stacks] Number of radial divisions (default=1).\r\n * @param {number} [innerRadius] Default 0.\r\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\r\n * @return {Object.<string, TypedArray>} The created vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction createDiscVertices(\r\n    radius,\r\n    divisions,\r\n    stacks,\r\n    innerRadius,\r\n    stackPower) {\r\n  if (divisions < 3) {\r\n    throw Error('divisions must be at least 3');\r\n  }\r\n\r\n  stacks = stacks ? stacks : 1;\r\n  stackPower = stackPower ? stackPower : 1;\r\n  innerRadius = innerRadius ? innerRadius : 0;\r\n\r\n  // Note: We don't share the center vertex because that would\r\n  // mess up texture coordinates.\r\n  const numVertices = (divisions + 1) * (stacks + 1);\r\n\r\n  const positions = createAugmentedTypedArray(3, numVertices);\r\n  const normals   = createAugmentedTypedArray(3, numVertices);\r\n  const texcoords = createAugmentedTypedArray(2, numVertices);\r\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\r\n\r\n  let firstIndex = 0;\r\n  const radiusSpan = radius - innerRadius;\r\n  const pointsPerStack = divisions + 1;\r\n\r\n  // Build the disk one stack at a time.\r\n  for (let stack = 0; stack <= stacks; ++stack) {\r\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\r\n\r\n    for (let i = 0; i <= divisions; ++i) {\r\n      const theta = 2.0 * Math.PI * i / divisions;\r\n      const x = stackRadius * Math.cos(theta);\r\n      const z = stackRadius * Math.sin(theta);\r\n\r\n      positions.push(x, 0, z);\r\n      normals.push(0, 1, 0);\r\n      texcoords.push(1 - (i / divisions), stack / stacks);\r\n      if (stack > 0 && i !== divisions) {\r\n        // a, b, c and d are the indices of the vertices of a quad.  unless\r\n        // the current stack is the one closest to the center, in which case\r\n        // the vertices a and b connect to the center vertex.\r\n        const a = firstIndex + (i + 1);\r\n        const b = firstIndex + i;\r\n        const c = firstIndex + i - pointsPerStack;\r\n        const d = firstIndex + (i + 1) - pointsPerStack;\r\n\r\n        // Make a quad of the vertices a, b, c, d.\r\n        indices.push(a, b, c);\r\n        indices.push(a, c, d);\r\n      }\r\n    }\r\n\r\n    firstIndex += divisions + 1;\r\n  }\r\n\r\n  return {\r\n    position: positions,\r\n    normal: normals,\r\n    texcoord: texcoords,\r\n    indices: indices,\r\n  };\r\n}\r\n\r\n/**\r\n * creates a random integer between 0 and range - 1 inclusive.\r\n * @param {number} range\r\n * @return {number} random value between 0 and range - 1 inclusive.\r\n * @private\r\n */\r\nfunction randInt(range) {\r\n  return Math.random() * range | 0;\r\n}\r\n\r\n/**\r\n * Used to supply random colors\r\n * @callback RandomColorFunc\r\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\r\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\r\n * @return {number} a number from 0 to 255\r\n * @memberOf module:twgl/primitives\r\n */\r\n\r\n/**\r\n * @typedef {Object} RandomVerticesOptions\r\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\r\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\r\n * @memberOf module:twgl/primitives\r\n */\r\n\r\n/**\r\n * Creates an augmentedTypedArray of random vertex colors.\r\n * If the vertices are indexed (have an indices array) then will\r\n * just make random colors. Otherwise assumes they are triangles\r\n * and makes one random color for every 3 vertices.\r\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\r\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\r\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction makeRandomVertexColors(vertices, options) {\r\n  options = options || {};\r\n  const numElements = vertices.position.numElements;\r\n  const vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\r\n  const rand = options.rand || function(ndx, channel) {\r\n    return channel < 3 ? randInt(256) : 255;\r\n  };\r\n  vertices.color = vcolors;\r\n  if (vertices.indices) {\r\n    // just make random colors if index\r\n    for (let ii = 0; ii < numElements; ++ii) {\r\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\r\n    }\r\n  } else {\r\n    // make random colors per triangle\r\n    const numVertsPerColor = options.vertsPerColor || 3;\r\n    const numSets = numElements / numVertsPerColor;\r\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\r\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\r\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\r\n        vcolors.push(color);\r\n      }\r\n    }\r\n  }\r\n  return vertices;\r\n}\r\n\r\n/**\r\n * creates a function that calls fn to create vertices and then\r\n * creates a buffers for them\r\n * @private\r\n */\r\nfunction createBufferFunc(fn) {\r\n  return function(gl) {\r\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\r\n    return attributes.createBuffersFromArrays(gl, arrays);\r\n  };\r\n}\r\n\r\n/**\r\n * creates a function that calls fn to create vertices and then\r\n * creates a bufferInfo object for them\r\n * @private\r\n */\r\nfunction createBufferInfoFunc(fn) {\r\n  return function(gl) {\r\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\r\n    return attributes.createBufferInfoFromArrays(gl, arrays);\r\n  };\r\n}\r\n\r\nconst arraySpecPropertyNames = [\r\n  \"numComponents\",\r\n  \"size\",\r\n  \"type\",\r\n  \"normalize\",\r\n  \"stride\",\r\n  \"offset\",\r\n  \"attrib\",\r\n  \"name\",\r\n  \"attribName\",\r\n];\r\n\r\n/**\r\n * Copy elements from one array to another\r\n *\r\n * @param {Array|TypedArray} src source array\r\n * @param {Array|TypedArray} dst dest array\r\n * @param {number} dstNdx index in dest to copy src\r\n * @param {number} [offset] offset to add to copied values\r\n * @private\r\n */\r\nfunction copyElements(src, dst, dstNdx, offset) {\r\n  offset = offset || 0;\r\n  const length = src.length;\r\n  for (let ii = 0; ii < length; ++ii) {\r\n    dst[dstNdx + ii] = src[ii] + offset;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates an array of the same time\r\n *\r\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\r\n * @param {number} length size of new array\r\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\r\n * @private\r\n */\r\nfunction createArrayOfSameType(srcArray, length) {\r\n  const arraySrc = getArray(srcArray);\r\n  const newArray = new arraySrc.constructor(length);\r\n  let newArraySpec = newArray;\r\n  // If it appears to have been augmented make new one augemented\r\n  if (arraySrc.numComponents && arraySrc.numElements) {\r\n    augmentTypedArray(newArray, arraySrc.numComponents);\r\n  }\r\n  // If it was a fullspec make new one a fullspec\r\n  if (srcArray.data) {\r\n    newArraySpec = {\r\n      data: newArray,\r\n    };\r\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\r\n  }\r\n  return newArraySpec;\r\n}\r\n\r\n/**\r\n * Concatinates sets of vertices\r\n *\r\n * Assumes the vertices match in composition. For example\r\n * if one set of vertices has positions, normals, and indices\r\n * all sets of vertices must have positions, normals, and indices\r\n * and of the same type.\r\n *\r\n * Example:\r\n *\r\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\r\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\r\n *      // move the sphere 2 units up\r\n *      twgl.primitives.reorientVertices(\r\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\r\n *      // merge the sphere with the cube\r\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\r\n *          [cubeVertices, sphereVertices]);\r\n *      // turn them into WebGL buffers and attrib data\r\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\r\n *\r\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\r\n * @return {module:twgl.Arrays} The concatinated vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction concatVertices(arrayOfArrays) {\r\n  const names = {};\r\n  let baseName;\r\n  // get names of all arrays.\r\n  // and numElements for each set of vertices\r\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\r\n    const arrays = arrayOfArrays[ii];\r\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\r\n      if (!names[name]) {\r\n        names[name] = [];\r\n      }\r\n      if (!baseName && name !== 'indices') {\r\n        baseName = name;\r\n      }\r\n      const arrayInfo = arrays[name];\r\n      const numComponents = getNumComponents(arrayInfo, name);\r\n      const array = getArray(arrayInfo);\r\n      const numElements = array.length / numComponents;\r\n      names[name].push(numElements);\r\n    });\r\n  }\r\n\r\n  // compute length of combined array\r\n  // and return one for reference\r\n  function getLengthOfCombinedArrays(name) {\r\n    let length = 0;\r\n    let arraySpec;\r\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\r\n      const arrays = arrayOfArrays[ii];\r\n      const arrayInfo = arrays[name];\r\n      const array = getArray(arrayInfo);\r\n      length += array.length;\r\n      if (!arraySpec || arrayInfo.data) {\r\n        arraySpec = arrayInfo;\r\n      }\r\n    }\r\n    return {\r\n      length: length,\r\n      spec: arraySpec,\r\n    };\r\n  }\r\n\r\n  function copyArraysToNewArray(name, base, newArray) {\r\n    let baseIndex = 0;\r\n    let offset = 0;\r\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\r\n      const arrays = arrayOfArrays[ii];\r\n      const arrayInfo = arrays[name];\r\n      const array = getArray(arrayInfo);\r\n      if (name === 'indices') {\r\n        copyElements(array, newArray, offset, baseIndex);\r\n        baseIndex += base[ii];\r\n      } else {\r\n        copyElements(array, newArray, offset);\r\n      }\r\n      offset += array.length;\r\n    }\r\n  }\r\n\r\n  const base = names[baseName];\r\n\r\n  const newArrays = {};\r\n  Object.keys(names).forEach(function(name) {\r\n    const info = getLengthOfCombinedArrays(name);\r\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\r\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\r\n    newArrays[name] = newArraySpec;\r\n  });\r\n  return newArrays;\r\n}\r\n\r\n/**\r\n * Creates a duplicate set of vertices\r\n *\r\n * This is useful for calling reorientVertices when you\r\n * also want to keep the original available\r\n *\r\n * @param {module:twgl.Arrays} arrays of vertices\r\n * @return {module:twgl.Arrays} The dupilicated vertices.\r\n * @memberOf module:twgl/primitives\r\n */\r\nfunction duplicateVertices(arrays) {\r\n  const newArrays = {};\r\n  Object.keys(arrays).forEach(function(name) {\r\n    const arraySpec = arrays[name];\r\n    const srcArray = getArray(arraySpec);\r\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\r\n    copyElements(srcArray, getArray(newArraySpec), 0);\r\n    newArrays[name] = newArraySpec;\r\n  });\r\n  return newArrays;\r\n}\r\n\r\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\r\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\r\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\r\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\r\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\r\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\r\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\r\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\r\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\r\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\r\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\r\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\r\nconst createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\r\nconst createCresentBuffers = createBufferFunc(createCresentVertices);\r\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\r\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\r\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\r\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\r\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\r\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\r\n\r\nexport {\r\n  create3DFBufferInfo,\r\n  create3DFBuffers,\r\n  create3DFVertices,\r\n  createAugmentedTypedArray,\r\n  createCubeBufferInfo,\r\n  createCubeBuffers,\r\n  createCubeVertices,\r\n  createPlaneBufferInfo,\r\n  createPlaneBuffers,\r\n  createPlaneVertices,\r\n  createSphereBufferInfo,\r\n  createSphereBuffers,\r\n  createSphereVertices,\r\n  createTruncatedConeBufferInfo,\r\n  createTruncatedConeBuffers,\r\n  createTruncatedConeVertices,\r\n  createXYQuadBufferInfo,\r\n  createXYQuadBuffers,\r\n  createXYQuadVertices,\r\n  createCresentBufferInfo,\r\n  createCresentBuffers,\r\n  createCresentVertices,\r\n  createCylinderBufferInfo,\r\n  createCylinderBuffers,\r\n  createCylinderVertices,\r\n  createTorusBufferInfo,\r\n  createTorusBuffers,\r\n  createTorusVertices,\r\n  createDiscBufferInfo,\r\n  createDiscBuffers,\r\n  createDiscVertices,\r\n  deindexVertices,\r\n  flattenNormals,\r\n  makeRandomVertexColors,\r\n  reorientDirections,\r\n  reorientNormals,\r\n  reorientPositions,\r\n  reorientVertices,\r\n  concatVertices,\r\n  duplicateVertices,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as utils from './utils.js';\r\nimport * as helper from './helper.js';\r\n\r\n/**\r\n * Low level shader program related functions\r\n *\r\n * You should generally not need to use these functions. They are provided\r\n * for those cases where you're doing something out of the ordinary\r\n * and you need lower level access.\r\n *\r\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/programs\r\n */\r\n\r\nconst error = helper.error;\r\nconst warn = helper.warn;\r\nconst getElementById = (typeof document !== 'undefined' && document.getElementById)\r\n  ? document.getElementById.bind(document)\r\n  : function() {\r\n    return null;\r\n};\r\n\r\nconst FLOAT                         = 0x1406;\r\nconst FLOAT_VEC2                    = 0x8B50;\r\nconst FLOAT_VEC3                    = 0x8B51;\r\nconst FLOAT_VEC4                    = 0x8B52;\r\nconst INT                           = 0x1404;\r\nconst INT_VEC2                      = 0x8B53;\r\nconst INT_VEC3                      = 0x8B54;\r\nconst INT_VEC4                      = 0x8B55;\r\nconst BOOL                          = 0x8B56;\r\nconst BOOL_VEC2                     = 0x8B57;\r\nconst BOOL_VEC3                     = 0x8B58;\r\nconst BOOL_VEC4                     = 0x8B59;\r\nconst FLOAT_MAT2                    = 0x8B5A;\r\nconst FLOAT_MAT3                    = 0x8B5B;\r\nconst FLOAT_MAT4                    = 0x8B5C;\r\nconst SAMPLER_2D                    = 0x8B5E;\r\nconst SAMPLER_CUBE                  = 0x8B60;\r\nconst SAMPLER_3D                    = 0x8B5F;\r\nconst SAMPLER_2D_SHADOW             = 0x8B62;\r\nconst FLOAT_MAT2x3                  = 0x8B65;\r\nconst FLOAT_MAT2x4                  = 0x8B66;\r\nconst FLOAT_MAT3x2                  = 0x8B67;\r\nconst FLOAT_MAT3x4                  = 0x8B68;\r\nconst FLOAT_MAT4x2                  = 0x8B69;\r\nconst FLOAT_MAT4x3                  = 0x8B6A;\r\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\r\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\r\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\r\nconst UNSIGNED_INT                  = 0x1405;\r\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\r\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\r\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\r\nconst INT_SAMPLER_2D                = 0x8DCA;\r\nconst INT_SAMPLER_3D                = 0x8DCB;\r\nconst INT_SAMPLER_CUBE              = 0x8DCC;\r\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\r\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\r\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\r\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\r\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\r\n\r\nconst TEXTURE_2D                    = 0x0DE1;\r\nconst TEXTURE_CUBE_MAP              = 0x8513;\r\nconst TEXTURE_3D                    = 0x806F;\r\nconst TEXTURE_2D_ARRAY              = 0x8C1A;\r\n\r\nconst typeMap = {};\r\n\r\n/**\r\n * Returns the corresponding bind point for a given sampler type\r\n */\r\nfunction getBindPointForSamplerType(gl, type) {\r\n  return typeMap[type].bindPoint;\r\n}\r\n\r\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\r\n// this code could be a lot smaller but that is sadly really slow (T_T)\r\n\r\nfunction floatSetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1f(location, v);\r\n  };\r\n}\r\n\r\nfunction floatArraySetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1fv(location, v);\r\n  };\r\n}\r\n\r\nfunction floatVec2Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform2fv(location, v);\r\n  };\r\n}\r\n\r\nfunction floatVec3Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform3fv(location, v);\r\n  };\r\n}\r\n\r\nfunction floatVec4Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform4fv(location, v);\r\n  };\r\n}\r\n\r\nfunction intSetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1i(location, v);\r\n  };\r\n}\r\n\r\nfunction intArraySetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1iv(location, v);\r\n  };\r\n}\r\n\r\nfunction intVec2Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform2iv(location, v);\r\n  };\r\n}\r\n\r\nfunction intVec3Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform3iv(location, v);\r\n  };\r\n}\r\n\r\nfunction intVec4Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform4iv(location, v);\r\n  };\r\n}\r\n\r\nfunction uintSetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1ui(location, v);\r\n  };\r\n}\r\n\r\nfunction uintArraySetter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform1uiv(location, v);\r\n  };\r\n}\r\n\r\nfunction uintVec2Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform2uiv(location, v);\r\n  };\r\n}\r\n\r\nfunction uintVec3Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform3uiv(location, v);\r\n  };\r\n}\r\n\r\nfunction uintVec4Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniform4uiv(location, v);\r\n  };\r\n}\r\n\r\nfunction floatMat2Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix2fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat3Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix3fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat4Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix4fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat23Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix2x3fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat32Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix3x2fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat24Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix2x4fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat42Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix4x2fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat34Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix3x4fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction floatMat43Setter(gl, location) {\r\n  return function(v) {\r\n    gl.uniformMatrix4x3fv(location, false, v);\r\n  };\r\n}\r\n\r\nfunction samplerSetter(gl, type, unit, location) {\r\n  const bindPoint = getBindPointForSamplerType(gl, type);\r\n  return utils.isWebGL2(gl) ? function(textureOrPair) {\r\n    let texture;\r\n    let sampler;\r\n    if (helper.isTexture(gl, textureOrPair)) {\r\n      texture = textureOrPair;\r\n      sampler = null;\r\n    } else {\r\n      texture = textureOrPair.texture;\r\n      sampler = textureOrPair.sampler;\r\n    }\r\n    gl.uniform1i(location, unit);\r\n    gl.activeTexture(gl.TEXTURE0 + unit);\r\n    gl.bindTexture(bindPoint, texture);\r\n    gl.bindSampler(unit, sampler);\r\n  } : function(texture) {\r\n    gl.uniform1i(location, unit);\r\n    gl.activeTexture(gl.TEXTURE0 + unit);\r\n    gl.bindTexture(bindPoint, texture);\r\n  };\r\n}\r\n\r\nfunction samplerArraySetter(gl, type, unit, location, size) {\r\n  const bindPoint = getBindPointForSamplerType(gl, type);\r\n  const units = new Int32Array(size);\r\n  for (let ii = 0; ii < size; ++ii) {\r\n    units[ii] = unit + ii;\r\n  }\r\n\r\n  return utils.isWebGL2(gl) ? function(textures) {\r\n    gl.uniform1iv(location, units);\r\n    textures.forEach(function(textureOrPair, index) {\r\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\r\n      let texture;\r\n      let sampler;\r\n      if (helper.isTexture(gl, textureOrPair)) {\r\n        texture = textureOrPair;\r\n        sampler = null;\r\n      } else {\r\n        texture = textureOrPair.texture;\r\n        sampler = textureOrPair.sampler;\r\n      }\r\n      gl.bindSampler(unit, sampler);\r\n      gl.bindTexture(bindPoint, texture);\r\n    });\r\n  } : function(textures) {\r\n    gl.uniform1iv(location, units);\r\n    textures.forEach(function(texture, index) {\r\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\r\n      gl.bindTexture(bindPoint, texture);\r\n    });\r\n  };\r\n}\r\n\r\ntypeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\r\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  };\r\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  };\r\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  };\r\ntypeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\r\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    };\r\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    };\r\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    };\r\ntypeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\r\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   };\r\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   };\r\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   };\r\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\r\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    };\r\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    };\r\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    };\r\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 16, setter: floatMat2Setter,  };\r\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 36, setter: floatMat3Setter,  };\r\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  };\r\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 24, setter: floatMat23Setter, };\r\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, };\r\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 24, setter: floatMat32Setter, };\r\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, };\r\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 32, setter: floatMat42Setter, };\r\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 48, setter: floatMat43Setter, };\r\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\r\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\r\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\r\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\r\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\r\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\r\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\r\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\r\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\r\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\r\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\r\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\r\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\r\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\r\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\r\n\r\nfunction floatAttribSetter(gl, index) {\r\n  return function(b) {\r\n    if (b.value) {\r\n      gl.disableVertexAttribArray(index);\r\n      gl.vertexAttrib4fv(index, b.value);\r\n    } else {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\r\n      gl.enableVertexAttribArray(index);\r\n      gl.vertexAttribPointer(\r\n          index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\r\n      if (b.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(index, b.divisor);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction intAttribSetter(gl, index) {\r\n  return function(b) {\r\n    if (b.value) {\r\n      gl.disableVertexAttribArray(index);\r\n      gl.vertexAttrib4iv(index, b.value);\r\n    } else {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\r\n      gl.enableVertexAttribArray(index);\r\n      gl.vertexAttribIPointer(\r\n          index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\r\n      if (b.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(index, b.divisor);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction uintAttribSetter(gl, index) {\r\n  return function(b) {\r\n    if (b.value) {\r\n      gl.disableVertexAttribArray(index);\r\n      gl.vertexAttrib4uiv(index, b.value);\r\n    } else {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\r\n      gl.enableVertexAttribArray(index);\r\n      gl.vertexAttribIPointer(\r\n          index, b.numComponents || b.size, b.type || gl.UNSIGNED_INT, b.stride || 0, b.offset || 0);\r\n      if (b.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(index, b.divisor);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction matAttribSetter(gl, index, typeInfo) {\r\n  const defaultSize = typeInfo.size;\r\n  const count = typeInfo.count;\r\n\r\n  return function(b) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\r\n    const numComponents = b.size || b.numComponents || defaultSize;\r\n    const size = numComponents / count;\r\n    const type = b.type || gl.FLOAT;\r\n    const typeInfo = typeMap[type];\r\n    const stride = typeInfo.size * numComponents;\r\n    const normalize = b.normalize || false;\r\n    const offset = b.offset || 0;\r\n    const rowOffset = stride / count;\r\n    for (let i = 0; i < count; ++i) {\r\n      gl.enableVertexAttribArray(index + i);\r\n      gl.vertexAttribPointer(\r\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\r\n      if (b.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(index + i, b.divisor);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\nconst attrTypeMap = {};\r\nattrTypeMap[FLOAT]             = { size:  4, setter: floatAttribSetter, };\r\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\r\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\r\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\r\nattrTypeMap[INT]               = { size:  4, setter: intAttribSetter,   };\r\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\r\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\r\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\r\nattrTypeMap[UNSIGNED_INT]      = { size:  4, setter: uintAttribSetter,  };\r\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\r\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\r\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\r\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\r\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\r\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\r\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\r\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\r\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\r\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\n\r\n/**\r\n * Error Callback\r\n * @callback ErrorCallback\r\n * @param {string} msg error message.\r\n * @param {number} [lineOffset] amount to add to line number\r\n * @memberOf module:twgl\r\n */\r\n\r\nfunction addLineNumbers(src, lineOffset) {\r\n  lineOffset = lineOffset || 0;\r\n  ++lineOffset;\r\n\r\n  return src.split(\"\\n\").map(function(line, ndx) {\r\n    return (ndx + lineOffset) + \": \" + line;\r\n  }).join(\"\\n\");\r\n}\r\n\r\nconst spaceRE = /^[ \\t]*\\n/;\r\n\r\n/**\r\n * Loads a shader.\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {string} shaderSource The shader source.\r\n * @param {number} shaderType The type of shader.\r\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\r\n * @return {WebGLShader} The created shader.\r\n * @private\r\n */\r\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\r\n  const errFn = opt_errorCallback || error;\r\n  // Create the shader object\r\n  const shader = gl.createShader(shaderType);\r\n\r\n  // Remove the first end of line because WebGL 2.0 requires\r\n  // #version 300 es\r\n  // as the first line. No whitespace allowed before that line\r\n  // so\r\n  //\r\n  // <script>\r\n  // #version 300 es\r\n  // </script>\r\n  //\r\n  // Has one line before it which is invalid according to GLSL ES 3.00\r\n  //\r\n  let lineOffset = 0;\r\n  if (spaceRE.test(shaderSource)) {\r\n    lineOffset = 1;\r\n    shaderSource = shaderSource.replace(spaceRE, '');\r\n  }\r\n\r\n  // Load the shader source\r\n  gl.shaderSource(shader, shaderSource);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the compile status\r\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    // Something went wrong during compilation; get the error\r\n    const lastError = gl.getShaderInfoLog(shader);\r\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n/**\r\n * @typedef {Object} ProgramOptions\r\n * @property {function(string)} [errorCallback] callback for errors\r\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\r\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\r\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\r\n *   you can pass an array of names.\r\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Gets the program options based on all these optional arguments\r\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\r\n * @private\r\n */\r\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\r\n  let transformFeedbackVaryings;\r\n  let transformFeedbackMode;\r\n  if (typeof opt_locations === 'function') {\r\n    opt_errorCallback = opt_locations;\r\n    opt_locations = undefined;\r\n  }\r\n  if (typeof opt_attribs === 'function') {\r\n    opt_errorCallback = opt_attribs;\r\n    opt_attribs = undefined;\r\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\r\n    // If we have an errorCallback we can just return this object\r\n    // Otherwise we need to construct one with default errorCallback\r\n    if (opt_attribs.errorCallback) {\r\n      return opt_attribs;\r\n    }\r\n    const opt = opt_attribs;\r\n    opt_errorCallback = opt.errorCallback;\r\n    opt_attribs = opt.attribLocations;\r\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\r\n    transformFeedbackMode = opt.transformFeedbackMode;\r\n  }\r\n\r\n  const options = {\r\n    errorCallback: opt_errorCallback || error,\r\n    transformFeedbackVaryings: transformFeedbackVaryings,\r\n    transformFeedbackMode: transformFeedbackMode,\r\n  };\r\n\r\n  if (opt_attribs) {\r\n    let attribLocations = {};\r\n    if (Array.isArray(opt_attribs)) {\r\n      opt_attribs.forEach(function(attrib,  ndx) {\r\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\r\n      });\r\n    } else {\r\n      attribLocations = opt_attribs;\r\n    }\r\n    options.attribLocations = attribLocations;\r\n  }\r\n\r\n  return options;\r\n}\r\n\r\nconst defaultShaderType = [\r\n  \"VERTEX_SHADER\",\r\n  \"FRAGMENT_SHADER\",\r\n];\r\n\r\nfunction getShaderTypeFromScriptType(gl, scriptType) {\r\n  if (scriptType.indexOf(\"frag\") >= 0) {\r\n    return gl.FRAGMENT_SHADER;\r\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\r\n    return gl.VERTEX_SHADER;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction deleteShaders(gl, shaders) {\r\n  shaders.forEach(function(shader) {\r\n    gl.deleteShader(shader);\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\r\n * program and calls useProgram.\r\n *\r\n * NOTE: There are 4 signatures for this function\r\n *\r\n *     twgl.createProgram(gl, [vs, fs], options);\r\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\r\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\r\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\r\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {WebGLProgram?} the created program or null if error.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createProgram(\r\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\r\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\r\n  const realShaders = [];\r\n  const newShaders = [];\r\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\r\n    let shader = shaders[ndx];\r\n    if (typeof (shader) === 'string') {\r\n      const elem = getElementById(shader);\r\n      const src = elem ? elem.text : shader;\r\n      let type = gl[defaultShaderType[ndx]];\r\n      if (elem && elem.type) {\r\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\r\n      }\r\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\r\n      newShaders.push(shader);\r\n    }\r\n    if (helper.isShader(gl, shader)) {\r\n      realShaders.push(shader);\r\n    }\r\n  }\r\n\r\n  if (realShaders.length !== shaders.length) {\r\n    progOptions.errorCallback(\"not enough shaders for program\");\r\n    deleteShaders(gl, newShaders);\r\n    return null;\r\n  }\r\n\r\n  const program = gl.createProgram();\r\n  realShaders.forEach(function(shader) {\r\n    gl.attachShader(program, shader);\r\n  });\r\n  if (progOptions.attribLocations) {\r\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\r\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\r\n    });\r\n  }\r\n  let varyings = progOptions.transformFeedbackVaryings;\r\n  if (varyings) {\r\n    if (varyings.attribs) {\r\n      varyings = varyings.attribs;\r\n    }\r\n    if (!Array.isArray(varyings)) {\r\n      varyings = Object.keys(varyings);\r\n    }\r\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\r\n  }\r\n  gl.linkProgram(program);\r\n\r\n  // Check the link status\r\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    // something went wrong with the link\r\n    const lastError = gl.getProgramInfoLog(program);\r\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\r\n\r\n    gl.deleteProgram(program);\r\n    deleteShaders(gl, newShaders);\r\n    return null;\r\n  }\r\n  return program;\r\n}\r\n\r\n/**\r\n * Loads a shader from a script tag.\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {string} scriptId The id of the script tag.\r\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\r\n *     be derived from the type of the script tag.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\r\n * @return {WebGLShader?} The created shader or null if error.\r\n * @private\r\n */\r\nfunction createShaderFromScript(\r\n    gl, scriptId, opt_shaderType, opt_errorCallback) {\r\n  let shaderSource = \"\";\r\n  const shaderScript = getElementById(scriptId);\r\n  if (!shaderScript) {\r\n    throw \"*** Error: unknown script element\" + scriptId;\r\n  }\r\n  shaderSource = shaderScript.text;\r\n\r\n  const shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\r\n  if (!shaderType) {\r\n    throw \"*** Error: unknown shader type\";\r\n  }\r\n\r\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\r\n}\r\n\r\n/**\r\n * Creates a program from 2 script tags.\r\n *\r\n * NOTE: There are 4 signatures for this function\r\n *\r\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\r\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\r\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\r\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {string[]} shaderScriptIds Array of ids of the script\r\n *        tags for the shaders. The first is assumed to be the\r\n *        vertex shader, the second the fragment shader.\r\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {WebGLProgram?} the created program or null if error.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createProgramFromScripts(\r\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\r\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\r\n  const shaders = [];\r\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\r\n    const shader = createShaderFromScript(\r\n        gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\r\n    if (!shader) {\r\n      return null;\r\n    }\r\n    shaders.push(shader);\r\n  }\r\n  return createProgram(gl, shaders, progOptions);\r\n}\r\n\r\n/**\r\n * Creates a program from 2 sources.\r\n *\r\n * NOTE: There are 4 signatures for this function\r\n *\r\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\r\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\r\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\r\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {string[]} shaderSources Array of sources for the\r\n *        shaders. The first is assumed to be the vertex shader,\r\n *        the second the fragment shader.\r\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {WebGLProgram?} the created program or null if error.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createProgramFromSources(\r\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\r\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\r\n  const shaders = [];\r\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\r\n    const shader = loadShader(\r\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\r\n    if (!shader) {\r\n      return null;\r\n    }\r\n    shaders.push(shader);\r\n  }\r\n  return createProgram(gl, shaders, progOptions);\r\n}\r\n\r\n/**\r\n * Returns true if attribute/uniform is a reserved/built in\r\n *\r\n * It makes no sense to me why GL returns these because it's\r\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\r\n * with names that start with `gl_` (and `webgl_` in WebGL)\r\n *\r\n * I can only assume they are there because they might count\r\n * when computing the number of uniforms/attributes used when you want to\r\n * know if you are near the limit. That doesn't really make sense\r\n * to me but the fact that these get returned are in the spec.\r\n *\r\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\r\n *    `gl.getActiveAttrib`.\r\n * @return {bool} true if it's reserved\r\n * @private\r\n */\r\nfunction isBuiltIn(info) {\r\n  const name = info.name;\r\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\r\n}\r\n\r\n/**\r\n * Creates setter functions for all uniforms of a shader\r\n * program.\r\n *\r\n * @see {@link module:twgl.setUniforms}\r\n *\r\n * @param {WebGLProgram} program the program to create setters for.\r\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createUniformSetters(gl, program) {\r\n  let textureUnit = 0;\r\n\r\n  /**\r\n   * Creates a setter for a uniform of the given program with it's\r\n   * location embedded in the setter.\r\n   * @param {WebGLProgram} program\r\n   * @param {WebGLUniformInfo} uniformInfo\r\n   * @returns {function} the created setter.\r\n   */\r\n  function createUniformSetter(program, uniformInfo) {\r\n    const location = gl.getUniformLocation(program, uniformInfo.name);\r\n    const isArray = (uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\");\r\n    const type = uniformInfo.type;\r\n    const typeInfo = typeMap[type];\r\n    if (!typeInfo) {\r\n      throw (\"unknown type: 0x\" + type.toString(16)); // we should never get here.\r\n    }\r\n    let setter;\r\n    if (typeInfo.bindPoint) {\r\n      // it's a sampler\r\n      const unit = textureUnit;\r\n      textureUnit += uniformInfo.size;\r\n      if (isArray) {\r\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\r\n      } else {\r\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\r\n      }\r\n    } else {\r\n      if (typeInfo.arraySetter && isArray) {\r\n        setter = typeInfo.arraySetter(gl, location);\r\n      } else {\r\n        setter = typeInfo.setter(gl, location);\r\n      }\r\n    }\r\n    setter.location = location;\r\n    return setter;\r\n  }\r\n\r\n  const uniformSetters = { };\r\n  const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n  for (let ii = 0; ii < numUniforms; ++ii) {\r\n    const uniformInfo = gl.getActiveUniform(program, ii);\r\n    if (isBuiltIn(uniformInfo)) {\r\n        continue;\r\n    }\r\n    let name = uniformInfo.name;\r\n    // remove the array suffix.\r\n    if (name.substr(-3) === \"[0]\") {\r\n      name = name.substr(0, name.length - 3);\r\n    }\r\n    const setter = createUniformSetter(program, uniformInfo);\r\n    uniformSetters[name] = setter;\r\n  }\r\n  return uniformSetters;\r\n}\r\n\r\n/**\r\n * @typedef {Object} TransformFeedbackInfo\r\n * @property {number} index index of transform feedback\r\n * @property {number} type GL type\r\n * @property {number} size 1 - 4\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {WebGLProgram} program an existing WebGLProgram.\r\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\r\n * @memberOf module:twgl\r\n */\r\nfunction createTransformFeedbackInfo(gl, program) {\r\n  const info = {};\r\n  const numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\r\n  for (let ii = 0; ii < numVaryings; ++ii) {\r\n    const varying = gl.getTransformFeedbackVarying(program, ii);\r\n    info[varying.name] = {\r\n      index: ii,\r\n      type: varying.type,\r\n      size: varying.size,\r\n    };\r\n  }\r\n  return info;\r\n}\r\n\r\n/**\r\n * Binds buffers for transform feedback.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\r\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\r\n * @memberOf module:twgl\r\n */\r\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\r\n  if (transformFeedbackInfo.transformFeedbackInfo) {\r\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\r\n  }\r\n  if (bufferInfo.attribs) {\r\n    bufferInfo = bufferInfo.attribs;\r\n  }\r\n  for (const name in bufferInfo) {\r\n    const varying = transformFeedbackInfo[name];\r\n    if (varying) {\r\n      const buf = bufferInfo[name];\r\n      if (buf.offset) {\r\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\r\n      } else {\r\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Unbinds buffers after transform feedback.\r\n *\r\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\r\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\r\n *\r\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\r\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\r\n * @private\r\n */\r\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\r\n  if (transformFeedbackInfo.transformFeedbackInfo) {\r\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\r\n  }\r\n  if (bufferInfo.attribs) {\r\n    bufferInfo = bufferInfo.attribs;\r\n  }\r\n  for (const name in bufferInfo) {\r\n    const varying = transformFeedbackInfo[name];\r\n    if (varying) {\r\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a transform feedback and sets the buffers\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\r\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\r\n * @return {WebGLTransformFeedback} the created transform feedback\r\n * @memberOf module:twgl\r\n */\r\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\r\n  const tf = gl.createTransformFeedback();\r\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\r\n  gl.useProgram(programInfo.program);\r\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\r\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\r\n  // This is only needed because of a bug in Chrome 56. Will remove\r\n  // when chrome fixes it.\r\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\r\n  return tf;\r\n}\r\n\r\n/**\r\n * @typedef {Object} UniformData\r\n * @property {number} type The WebGL type enum for this uniform\r\n * @property {number} size The number of elements for this uniform\r\n * @property {number} blockNdx The block index this uniform appears in\r\n * @property {number} offset The byte offset in the block for this uniform's value\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * The specification for one UniformBlockObject\r\n *\r\n * @typedef {Object} BlockSpec\r\n * @property {number} index The index of the block.\r\n * @property {number} size The size in bytes needed for the block\r\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\r\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\r\n * @property {bool} usedByVertexShader Self explanitory\r\n * @property {bool} usedByFragmentShader Self explanitory\r\n * @property {bool} used Self explanitory\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * A `UniformBlockSpec` represents the data needed to create and bind\r\n * UniformBlockObjects for a given program\r\n *\r\n * @typedef {Object} UniformBlockSpec\r\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\r\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a UniformBlockSpec for the given program.\r\n *\r\n * A UniformBlockSpec represents the data needed to create and bind\r\n * UniformBlockObjects\r\n *\r\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\r\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\r\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createUniformBlockSpecFromProgram(gl, program) {\r\n  const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n  const uniformData = [];\r\n  const uniformIndices = [];\r\n\r\n  for (let ii = 0; ii < numUniforms; ++ii) {\r\n    uniformIndices.push(ii);\r\n    uniformData.push({});\r\n    const uniformInfo = gl.getActiveUniform(program, ii);\r\n    if (isBuiltIn(uniformInfo)) {\r\n      break;\r\n    }\r\n    // REMOVE [0]?\r\n    uniformData[ii].name = uniformInfo.name;\r\n  }\r\n\r\n  [\r\n    [ \"UNIFORM_TYPE\", \"type\" ],\r\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\r\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\r\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\r\n  ].forEach(function(pair) {\r\n    const pname = pair[0];\r\n    const key = pair[1];\r\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\r\n      uniformData[ndx][key] = value;\r\n    });\r\n  });\r\n\r\n  const blockSpecs = {};\r\n\r\n  const numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\r\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\r\n    const name = gl.getActiveUniformBlockName(program, ii);\r\n    const blockSpec = {\r\n      index: ii,\r\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\r\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\r\n      size: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_DATA_SIZE),\r\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\r\n    };\r\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\r\n    blockSpecs[name] = blockSpec;\r\n  }\r\n\r\n  return {\r\n    blockSpecs: blockSpecs,\r\n    uniformData: uniformData,\r\n  };\r\n}\r\n\r\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\r\n\r\n/**\r\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\r\n * and a corresponding WebGLBuffer to hold those values on the GPU\r\n *\r\n * @typedef {Object} UniformBlockInfo\r\n * @property {string} name The name of the block\r\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\r\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\r\n *    inspecting the contents of the buffer in the debugger.\r\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\r\n * @property {number} [offset] offset into buffer\r\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\r\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\r\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\r\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\r\n *   `Int32Array` view, etc.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a `UniformBlockInfo` for the specified block\r\n *\r\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\r\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\r\n * it is common to comment out large portions of a shader or for example set\r\n * the final output to a constant. When that happens blocks get optimized out.\r\n * If this function did not create dummy blocks your code would crash when debugging.\r\n *\r\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\r\n * @param {WebGLProgram} program A WebGLProgram\r\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\r\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\r\n * @param {string} blockName The name of the block.\r\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\r\n  const blockSpecs = uniformBlockSpec.blockSpecs;\r\n  const uniformData = uniformBlockSpec.uniformData;\r\n  const blockSpec = blockSpecs[blockName];\r\n  if (!blockSpec) {\r\n    warn(\"no uniform block object named:\", blockName);\r\n    return {\r\n      name: blockName,\r\n      uniforms: {},\r\n    };\r\n  }\r\n  const array = new ArrayBuffer(blockSpec.size);\r\n  const buffer = gl.createBuffer();\r\n  const uniformBufferIndex = blockSpec.index;\r\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\r\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\r\n\r\n  let prefix = blockName + \".\";\r\n  if (arraySuffixRE.test(prefix)) {\r\n    prefix = prefix.replace(arraySuffixRE, \".\");\r\n  }\r\n  const uniforms = {};\r\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\r\n    const data = uniformData[uniformNdx];\r\n    const typeInfo = typeMap[data.type];\r\n    const Type = typeInfo.Type;\r\n    const length = data.size * typeInfo.size;\r\n    let name = data.name;\r\n    if (name.substr(0, prefix.length) === prefix) {\r\n      name = name.substr(prefix.length);\r\n    }\r\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\r\n  });\r\n  return {\r\n    name: blockName,\r\n    array: array,\r\n    asFloat: new Float32Array(array),  // for debugging\r\n    buffer: buffer,\r\n    uniforms: uniforms,\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a `UniformBlockInfo` for the specified block\r\n *\r\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\r\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\r\n * it is common to comment out large portions of a shader or for example set\r\n * the final output to a constant. When that happens blocks get optimized out.\r\n * If this function did not create dummy blocks your code would crash when debugging.\r\n *\r\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\r\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\r\n *     as returned from {@link module:twgl.createProgramInfo}\r\n * @param {string} blockName The name of the block.\r\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\r\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\r\n}\r\n\r\n/**\r\n * Binds a unform block to the matching uniform block point.\r\n * Matches by blocks by name so blocks must have the same name not just the same\r\n * structure.\r\n *\r\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\r\n * call {@link module:twgl.setUniformBlock} instead.\r\n *\r\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\r\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\r\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\r\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\r\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\r\n *     {@link module:twgl.createUniformBlockInfo}.\r\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\r\n *     no buffer is bound.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\r\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\r\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\r\n  if (blockSpec) {\r\n    const bufferBindIndex = blockSpec.index;\r\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Uploads the current uniform values to the corresponding WebGLBuffer\r\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\r\n *\r\n * If you haven't changed any values and you only need to bind the uniform block object\r\n * call {@link module:twgl.bindUniformBlock} instead.\r\n *\r\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\r\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\r\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\r\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\r\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\r\n *     {@link module:twgl.createUniformBlockInfo}.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\r\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\r\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\r\n  }\r\n}\r\n\r\n/**\r\n * Sets values of a uniform block object\r\n *\r\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\r\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\r\n *    type of uniform. So for example given a block like\r\n *\r\n *       uniform SomeBlock {\r\n *         float someFloat;\r\n *         vec2 someVec2;\r\n *         vec3 someVec3Array[2];\r\n *         int someInt;\r\n *       }\r\n *\r\n *  You can set the values of the uniform block with\r\n *\r\n *       twgl.setBlockUniforms(someBlockInfo, {\r\n *          someFloat: 12.3,\r\n *          someVec2: [1, 2],\r\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\r\n *          someInt: 5,\r\n *       }\r\n *\r\n *  Arrays can be JavaScript arrays or typed arrays\r\n *\r\n *  Any name that doesn't match will be ignored\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction setBlockUniforms(uniformBlockInfo, values) {\r\n  const uniforms = uniformBlockInfo.uniforms;\r\n  for (const name in values) {\r\n    const array = uniforms[name];\r\n    if (array) {\r\n      const value = values[name];\r\n      if (value.length) {\r\n        array.set(value);\r\n      } else {\r\n        array[0] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Set uniforms and binds related textures.\r\n *\r\n * example:\r\n *\r\n *     const programInfo = createProgramInfo(\r\n *         gl, [\"some-vs\", \"some-fs\"]);\r\n *\r\n *     const tex1 = gl.createTexture();\r\n *     const tex2 = gl.createTexture();\r\n *\r\n *     ... assume we setup the textures with data ...\r\n *\r\n *     const uniforms = {\r\n *       u_someSampler: tex1,\r\n *       u_someOtherSampler: tex2,\r\n *       u_someColor: [1,0,0,1],\r\n *       u_somePosition: [0,1,1],\r\n *       u_someMatrix: [\r\n *         1,0,0,0,\r\n *         0,1,0,0,\r\n *         0,0,1,0,\r\n *         0,0,0,0,\r\n *       ],\r\n *     };\r\n *\r\n *     gl.useProgram(program);\r\n *\r\n * This will automatically bind the textures AND set the\r\n * uniforms.\r\n *\r\n *     twgl.setUniforms(programInfo, uniforms);\r\n *\r\n * For the example above it is equivalent to\r\n *\r\n *     var texUnit = 0;\r\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\r\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\r\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\r\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\r\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\r\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\r\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\r\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\r\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\r\n *         1,0,0,0,\r\n *         0,1,0,0,\r\n *         0,0,1,0,\r\n *         0,0,0,0,\r\n *       ]);\r\n *\r\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\r\n *\r\n *     const uniforms = {\r\n *       u_someSampler: tex1,\r\n *       u_someOtherSampler: tex2,\r\n *     };\r\n *\r\n *     const moreUniforms {\r\n *       u_someColor: [1,0,0,1],\r\n *       u_somePosition: [0,1,1],\r\n *       u_someMatrix: [\r\n *         1,0,0,0,\r\n *         0,1,0,0,\r\n *         0,0,1,0,\r\n *         0,0,0,0,\r\n *       ],\r\n *     };\r\n *\r\n *     twgl.setUniforms(programInfo, uniforms);\r\n *     twgl.setUniforms(programInfo, moreUniforms);\r\n *\r\n * You can also add WebGLSamplers to uniform samplers as in\r\n *\r\n *     const uniforms = {\r\n *       u_someSampler: {\r\n *         texture: someWebGLTexture,\r\n *         sampler: someWebGLSampler,\r\n *       },\r\n *     };\r\n *\r\n * In which case both the sampler and texture will be bound to the\r\n * same unit.\r\n *\r\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\r\n *        `createUniformSetters`.\r\n * @param {Object.<string, ?>} values an object with values for the\r\n *        uniforms.\r\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\r\n *\r\n *     const sharedUniforms = {\r\n *       u_fogNear: 10,\r\n *       u_projection: ...\r\n *       ...\r\n *     };\r\n *\r\n *     const localUniforms = {\r\n *       u_world: ...\r\n *       u_diffuseColor: ...\r\n *     };\r\n *\r\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\r\n *\r\n *     // is the same as\r\n *\r\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\r\n *\r\n *     // is the same as\r\n *\r\n *     twgl.setUniforms(programInfo, sharedUniforms);\r\n *     twgl.setUniforms(programInfo, localUniforms};\r\n *\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction setUniforms(setters, values) {  // eslint-disable-line\r\n  const actualSetters = setters.uniformSetters || setters;\r\n  const numArgs = arguments.length;\r\n  for (let andx = 1; andx < numArgs; ++andx) {\r\n    const vals = arguments[andx];\r\n    if (Array.isArray(vals)) {\r\n      const numValues = vals.length;\r\n      for (let ii = 0; ii < numValues; ++ii) {\r\n        setUniforms(actualSetters, vals[ii]);\r\n      }\r\n    } else {\r\n      for (const name in vals) {\r\n        const setter = actualSetters[name];\r\n        if (setter) {\r\n          setter(vals[name]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates setter functions for all attributes of a shader\r\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\r\n *\r\n * @see {@link module:twgl.setAttributes} for example\r\n * @param {WebGLProgram} program the program to create setters for.\r\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createAttributeSetters(gl, program) {\r\n  const attribSetters = {\r\n  };\r\n\r\n  const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n  for (let ii = 0; ii < numAttribs; ++ii) {\r\n    const attribInfo = gl.getActiveAttrib(program, ii);\r\n    if (isBuiltIn(attribInfo)) {\r\n        continue;\r\n    }\r\n    const index = gl.getAttribLocation(program, attribInfo.name);\r\n    const typeInfo = attrTypeMap[attribInfo.type];\r\n    const setter = typeInfo.setter(gl, index, typeInfo);\r\n    setter.location = index;\r\n    attribSetters[attribInfo.name] = setter;\r\n  }\r\n\r\n  return attribSetters;\r\n}\r\n\r\n/**\r\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\r\n *\r\n * Example:\r\n *\r\n *     const program = createProgramFromScripts(\r\n *         gl, [\"some-vs\", \"some-fs\");\r\n *\r\n *     const attribSetters = createAttributeSetters(program);\r\n *\r\n *     const positionBuffer = gl.createBuffer();\r\n *     const texcoordBuffer = gl.createBuffer();\r\n *\r\n *     const attribs = {\r\n *       a_position: {buffer: positionBuffer, numComponents: 3},\r\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\r\n *     };\r\n *\r\n *     gl.useProgram(program);\r\n *\r\n * This will automatically bind the buffers AND set the\r\n * attributes.\r\n *\r\n *     setAttributes(attribSetters, attribs);\r\n *\r\n * Properties of attribs. For each attrib you can add\r\n * properties:\r\n *\r\n * *   type: the type of data in the buffer. Default = gl.FLOAT\r\n * *   normalize: whether or not to normalize the data. Default = false\r\n * *   stride: the stride. Default = 0\r\n * *   offset: offset into the buffer. Default = 0\r\n * *   divisor: the divisor for instances. Default = undefined\r\n *\r\n * For example if you had 3 value float positions, 2 value\r\n * float texcoord and 4 value uint8 colors you'd setup your\r\n * attribs like this\r\n *\r\n *     const attribs = {\r\n *       a_position: {buffer: positionBuffer, numComponents: 3},\r\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\r\n *       a_color: {\r\n *         buffer: colorBuffer,\r\n *         numComponents: 4,\r\n *         type: gl.UNSIGNED_BYTE,\r\n *         normalize: true,\r\n *       },\r\n *     };\r\n *\r\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\r\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\r\n * @memberOf module:twgl/programs\r\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\r\n */\r\nfunction setAttributes(setters, buffers) {\r\n  for (const name in buffers) {\r\n    const setter = setters[name];\r\n    if (setter) {\r\n      setter(buffers[name]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\r\n *\r\n * Example:\r\n *\r\n *     const programInfo = createProgramInfo(\r\n *         gl, [\"some-vs\", \"some-fs\");\r\n *\r\n *     const arrays = {\r\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\r\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\r\n *     };\r\n *\r\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\r\n *\r\n *     gl.useProgram(programInfo.program);\r\n *\r\n * This will automatically bind the buffers AND set the\r\n * attributes.\r\n *\r\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\r\n *\r\n * For the example above it is equivilent to\r\n *\r\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n *     gl.enableVertexAttribArray(a_positionLocation);\r\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\r\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\r\n *     gl.enableVertexAttribArray(a_texcoordLocation);\r\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\r\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\r\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\r\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\r\n  if (buffers.vertexArrayObject) {\r\n    gl.bindVertexArray(buffers.vertexArrayObject);\r\n  } else {\r\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\r\n    if (buffers.indices) {\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} ProgramInfo\r\n * @property {WebGLProgram} program A shader program\r\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\r\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\r\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\r\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a ProgramInfo from an existing program.\r\n *\r\n * A ProgramInfo contains\r\n *\r\n *     programInfo = {\r\n *        program: WebGLProgram,\r\n *        uniformSetters: object of setters as returned from createUniformSetters,\r\n *        attribSetters: object of setters as returned from createAttribSetters,\r\n *     }\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {WebGLProgram} program an existing WebGLProgram.\r\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createProgramInfoFromProgram(gl, program) {\r\n  const uniformSetters = createUniformSetters(gl, program);\r\n  const attribSetters = createAttributeSetters(gl, program);\r\n  const programInfo = {\r\n    program: program,\r\n    uniformSetters: uniformSetters,\r\n    attribSetters: attribSetters,\r\n  };\r\n\r\n  if (utils.isWebGL2(gl)) {\r\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\r\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\r\n  }\r\n\r\n  return programInfo;\r\n}\r\n\r\n/**\r\n * Creates a ProgramInfo from 2 sources.\r\n *\r\n * A ProgramInfo contains\r\n *\r\n *     programInfo = {\r\n *        program: WebGLProgram,\r\n *        uniformSetters: object of setters as returned from createUniformSetters,\r\n *        attribSetters: object of setters as returned from createAttribSetters,\r\n *     }\r\n *\r\n * NOTE: There are 4 signatures for this function\r\n *\r\n *     twgl.createProgramInfo(gl, [vs, fs], options);\r\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\r\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\r\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {string[]} shaderSources Array of sources for the\r\n *        shaders or ids. The first is assumed to be the vertex shader,\r\n *        the second the fragment shader.\r\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\r\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\r\n * @memberOf module:twgl/programs\r\n */\r\nfunction createProgramInfo(\r\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\r\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\r\n  let good = true;\r\n  shaderSources = shaderSources.map(function(source) {\r\n    // Lets assume if there is no \\n it's an id\r\n    if (source.indexOf(\"\\n\") < 0) {\r\n      const script = getElementById(source);\r\n      if (!script) {\r\n        progOptions.errorCallback(\"no element with id: \" + source);\r\n        good = false;\r\n      } else {\r\n        source = script.text;\r\n      }\r\n    }\r\n    return source;\r\n  });\r\n  if (!good) {\r\n    return null;\r\n  }\r\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\r\n  if (!program) {\r\n    return null;\r\n  }\r\n  return createProgramInfoFromProgram(gl, program);\r\n}\r\n\r\nexport {\r\n  createAttributeSetters,\r\n\r\n  createProgram,\r\n  createProgramFromScripts,\r\n  createProgramFromSources,\r\n  createProgramInfo,\r\n  createProgramInfoFromProgram,\r\n  createUniformSetters,\r\n  createUniformBlockSpecFromProgram,\r\n  createUniformBlockInfoFromProgram,\r\n  createUniformBlockInfo,\r\n\r\n  createTransformFeedback,\r\n  createTransformFeedbackInfo,\r\n  bindTransformFeedbackInfo,\r\n\r\n  setAttributes,\r\n  setBuffersAndAttributes,\r\n  setUniforms,\r\n  setUniformBlock,\r\n  setBlockUniforms,\r\n  bindUniformBlock,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as utils from './utils.js';\r\nimport * as typedArrays from './typedarrays.js';\r\nimport * as helper from './helper.js';\r\n\r\n/**\r\n * Low level texture related functions\r\n *\r\n * You should generally not need to use these functions. They are provided\r\n * for those cases where you're doing something out of the ordinary\r\n * and you need lower level access.\r\n *\r\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/textures\r\n */\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\nconst defaults = {\r\n  textureColor: new Uint8Array([128, 192, 255, 255]),\r\n  textureOptions: {},\r\n  crossOrigin: undefined,\r\n};\r\nconst isArrayBuffer = typedArrays.isArrayBuffer;\r\n\r\n// Should we make this on demand?\r\nconst ctx = (typeof document !== 'undefined' && document.createElement)\r\n    ? document.createElement(\"canvas\").getContext(\"2d\")\r\n    : null;\r\n\r\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\r\n//       not only does Firefox NOT support it but Firefox freezes immediately\r\n//       if you try to create one instead of just returning null and continuing.\r\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\r\n\r\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\r\n// we can use the various unpack settings. Otherwise we could try using\r\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\r\n// is async and the current TWGL code expects a non-Async result though that\r\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\r\n// as of 2018-01-02\r\n\r\n/* PixelFormat */\r\nconst ALPHA                          = 0x1906;\r\nconst RGB                            = 0x1907;\r\nconst RGBA                           = 0x1908;\r\nconst LUMINANCE                      = 0x1909;\r\nconst LUMINANCE_ALPHA                = 0x190A;\r\nconst DEPTH_COMPONENT                = 0x1902;\r\nconst DEPTH_STENCIL                  = 0x84F9;\r\n\r\n/* TextureWrapMode */\r\nconst REPEAT                         = 0x2901;  // eslint-disable-line\r\nconst MIRRORED_REPEAT                = 0x8370;  // eslint-disable-line\r\n\r\n/* TextureMagFilter */\r\nconst NEAREST                        = 0x2600;  // eslint-disable-line\r\n\r\n/* TextureMinFilter */\r\nconst NEAREST_MIPMAP_NEAREST         = 0x2700;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_NEAREST          = 0x2701;  // eslint-disable-line\r\nconst NEAREST_MIPMAP_LINEAR          = 0x2702;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_LINEAR           = 0x2703;  // eslint-disable-line\r\n\r\nconst R8                           = 0x8229;\r\nconst R8_SNORM                     = 0x8F94;\r\nconst R16F                         = 0x822D;\r\nconst R32F                         = 0x822E;\r\nconst R8UI                         = 0x8232;\r\nconst R8I                          = 0x8231;\r\nconst RG16UI                       = 0x823A;\r\nconst RG16I                        = 0x8239;\r\nconst RG32UI                       = 0x823C;\r\nconst RG32I                        = 0x823B;\r\nconst RG8                          = 0x822B;\r\nconst RG8_SNORM                    = 0x8F95;\r\nconst RG16F                        = 0x822F;\r\nconst RG32F                        = 0x8230;\r\nconst RG8UI                        = 0x8238;\r\nconst RG8I                         = 0x8237;\r\nconst R16UI                        = 0x8234;\r\nconst R16I                         = 0x8233;\r\nconst R32UI                        = 0x8236;\r\nconst R32I                         = 0x8235;\r\nconst RGB8                         = 0x8051;\r\nconst SRGB8                        = 0x8C41;\r\nconst RGB565                       = 0x8D62;\r\nconst RGB8_SNORM                   = 0x8F96;\r\nconst R11F_G11F_B10F               = 0x8C3A;\r\nconst RGB9_E5                      = 0x8C3D;\r\nconst RGB16F                       = 0x881B;\r\nconst RGB32F                       = 0x8815;\r\nconst RGB8UI                       = 0x8D7D;\r\nconst RGB8I                        = 0x8D8F;\r\nconst RGB16UI                      = 0x8D77;\r\nconst RGB16I                       = 0x8D89;\r\nconst RGB32UI                      = 0x8D71;\r\nconst RGB32I                       = 0x8D83;\r\nconst RGBA8                        = 0x8058;\r\nconst SRGB8_ALPHA8                 = 0x8C43;\r\nconst RGBA8_SNORM                  = 0x8F97;\r\nconst RGB5_A1                      = 0x8057;\r\nconst RGBA4                        = 0x8056;\r\nconst RGB10_A2                     = 0x8059;\r\nconst RGBA16F                      = 0x881A;\r\nconst RGBA32F                      = 0x8814;\r\nconst RGBA8UI                      = 0x8D7C;\r\nconst RGBA8I                       = 0x8D8E;\r\nconst RGB10_A2UI                   = 0x906F;\r\nconst RGBA16UI                     = 0x8D76;\r\nconst RGBA16I                      = 0x8D88;\r\nconst RGBA32I                      = 0x8D82;\r\nconst RGBA32UI                     = 0x8D70;\r\n\r\nconst DEPTH_COMPONENT16            = 0x81A5;\r\nconst DEPTH_COMPONENT24            = 0x81A6;\r\nconst DEPTH_COMPONENT32F           = 0x8CAC;\r\nconst DEPTH32F_STENCIL8            = 0x8CAD;\r\nconst DEPTH24_STENCIL8             = 0x88F0;\r\n\r\n/* DataType */\r\nconst BYTE                         = 0x1400;\r\nconst UNSIGNED_BYTE                = 0x1401;\r\nconst SHORT                        = 0x1402;\r\nconst UNSIGNED_SHORT               = 0x1403;\r\nconst INT                          = 0x1404;\r\nconst UNSIGNED_INT                 = 0x1405;\r\nconst FLOAT                        = 0x1406;\r\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\r\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\r\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\r\nconst HALF_FLOAT                   = 0x140B;\r\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\r\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\r\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\r\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\r\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\r\nconst UNSIGNED_INT_24_8            = 0x84FA;\r\n\r\nconst RG                           = 0x8227;\r\nconst RG_INTEGER                   = 0x8228;\r\nconst RED                          = 0x1903;\r\nconst RED_INTEGER                  = 0x8D94;\r\nconst RGB_INTEGER                  = 0x8D98;\r\nconst RGBA_INTEGER                 = 0x8D99;\r\n\r\nconst formatInfo = {};\r\n{\r\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\r\n  // the name.\r\n  const f = formatInfo;\r\n  f[ALPHA]           = { numColorComponents: 1, };\r\n  f[LUMINANCE]       = { numColorComponents: 1, };\r\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\r\n  f[RGB]             = { numColorComponents: 3, };\r\n  f[RGBA]            = { numColorComponents: 4, };\r\n  f[RED]             = { numColorComponents: 1, };\r\n  f[RED_INTEGER]     = { numColorComponents: 1, };\r\n  f[RG]              = { numColorComponents: 2, };\r\n  f[RG_INTEGER]      = { numColorComponents: 2, };\r\n  f[RGB]             = { numColorComponents: 3, };\r\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\r\n  f[RGBA]            = { numColorComponents: 4, };\r\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\r\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\r\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\r\n}\r\n\r\n/**\r\n * @typedef {Object} TextureFormatDetails\r\n * @property {number} textureFormat format to pass texImage2D and similar functions.\r\n * @property {boolean} colorRenderable true if you can render to this format of texture.\r\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\r\n * @property {number[]} type Array of possible types you can pass to teximage2D and similar function\r\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\r\n * @private\r\n */\r\n\r\nconst textureInternalFormatInfo = {};\r\n{\r\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\r\n  const t = textureInternalFormatInfo;\r\n  // unsized formats\r\n  t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\r\n  t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\r\n  t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\r\n  t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5], };\r\n  t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\r\n\r\n  // sized formats\r\n  t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\r\n  t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE], };\r\n  t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT, HALF_FLOAT], };\r\n  t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\r\n  t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\r\n  t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE], };\r\n  t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT], };\r\n  t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT], };\r\n  t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\r\n  t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT], };\r\n  t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\r\n  t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE], };\r\n  t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT, HALF_FLOAT], };\r\n  t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT], };\r\n  t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\r\n  t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE], };\r\n  t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT], };\r\n  t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT], };\r\n  t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT], };\r\n  t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT], };\r\n  t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\r\n  t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\r\n  t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5], };\r\n  t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE], };\r\n  t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV], };\r\n  t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV], };\r\n  t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT, HALF_FLOAT], };\r\n  t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT], };\r\n  t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\r\n  t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE], };\r\n  t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT], };\r\n  t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT], };\r\n  t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT], };\r\n  t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT], };\r\n  t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\r\n  t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\r\n  t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE], };\r\n  t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV], };\r\n  t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4], };\r\n  t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\r\n  t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT, HALF_FLOAT], };\r\n  t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT], };\r\n  t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\r\n  t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE], };\r\n  t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\r\n  t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT], };\r\n  t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT], };\r\n  t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT], };\r\n  t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT], };\r\n  // Sized Internal\r\n  t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT, UNSIGNED_INT], };\r\n  t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\r\n  t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\r\n  t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8], };\r\n  t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV], };\r\n\r\n  Object.keys(t).forEach(function(internalFormat) {\r\n    const info = t[internalFormat];\r\n    info.bytesPerElementMap = {};\r\n    info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\r\n      const type = info.type[ndx];\r\n      info.bytesPerElementMap[type] = bytesPerElement;\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the number of bytes per element for a given internalFormat / type\r\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\r\n * @param {number} type The type parameter for texImage2D etc..\r\n * @return {number} the number of bytes per element for the given internalFormat, type combo\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\r\n  const info = textureInternalFormatInfo[internalFormat];\r\n  if (!info) {\r\n    throw \"unknown internal format\";\r\n  }\r\n  const bytesPerElement = info.bytesPerElementMap[type];\r\n  if (bytesPerElement === undefined) {\r\n    throw \"unknown internal format\";\r\n  }\r\n  return bytesPerElement;\r\n}\r\n\r\n/**\r\n * Info related to a specific texture internalFormat as returned\r\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\r\n *\r\n * @typedef {Object} TextureFormatInfo\r\n * @property {number} format Format to pass to texImage2D and related functions\r\n * @property {number} type Type to pass to texImage2D and related functions\r\n * @memberOf module:twgl/textures\r\n */\r\n\r\n/**\r\n * Gets the format and type for a given internalFormat\r\n *\r\n * @param {number} internalFormat The internal format\r\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\r\n  const info = textureInternalFormatInfo[internalFormat];\r\n  if (!info) {\r\n    throw \"unknown internal format\";\r\n  }\r\n  return {\r\n    format: info.textureFormat,\r\n    type: info.type[0],\r\n  };\r\n}\r\n\r\n/**\r\n * Returns true if value is power of 2\r\n * @param {number} value number to check.\r\n * @return true if value is power of 2\r\n * @private\r\n */\r\nfunction isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\n/**\r\n * Gets whether or not we can generate mips for the given\r\n * internal format.\r\n *\r\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\r\n * @param {number} type The type parameter for texImage2D etc..\r\n * @return {boolean} true if we can generate mips\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction canGenerateMipmap(gl, width, height, internalFormat /*, type */) {\r\n  if (!utils.isWebGL2(gl)) {\r\n    return isPowerOf2(width) && isPowerOf2(height);\r\n  }\r\n  const info = textureInternalFormatInfo[internalFormat];\r\n  if (!info) {\r\n    throw \"unknown internal format\";\r\n  }\r\n  return info.colorRenderable && info.textureFilterable;\r\n}\r\n\r\n/**\r\n * Gets whether or not we can generate mips for the given format\r\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\r\n * @param {number} type The type parameter for texImage2D etc..\r\n * @return {boolean} true if we can generate mips\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction canFilter(internalFormat /*, type */) {\r\n  const info = textureInternalFormatInfo[internalFormat];\r\n  if (!info) {\r\n    throw \"unknown internal format\";\r\n  }\r\n  return info.textureFilterable;\r\n}\r\n\r\n/**\r\n * Gets the number of compontents for a given image format.\r\n * @param {number} format the format.\r\n * @return {number} the number of components for the format.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction getNumComponentsForFormat(format) {\r\n  const info = formatInfo[format];\r\n  if (!info) {\r\n    throw \"unknown format: \" + format;\r\n  }\r\n  return info.numColorComponents;\r\n}\r\n\r\n/**\r\n * Gets the texture type for a given array type.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @return {number} the gl texture type\r\n * @private\r\n */\r\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\r\n  if (isArrayBuffer(src)) {\r\n    return typedArrays.getGLTypeForTypedArray(src);\r\n  }\r\n  return defaultType || gl.UNSIGNED_BYTE;\r\n}\r\n\r\nfunction guessDimensions(gl, target, width, height, numElements) {\r\n  if (numElements % 1 !== 0) {\r\n    throw \"can't guess dimensions\";\r\n  }\r\n  if (!width && !height) {\r\n    const size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\r\n    if (size % 1 === 0) {\r\n      width = size;\r\n      height = size;\r\n    } else {\r\n      width = numElements;\r\n      height = 1;\r\n    }\r\n  } else if (!height) {\r\n    height = numElements / width;\r\n    if (height % 1) {\r\n      throw \"can't guess dimensions\";\r\n    }\r\n  } else if (!width) {\r\n    width = numElements / height;\r\n    if (width % 1) {\r\n      throw \"can't guess dimensions\";\r\n    }\r\n  }\r\n  return {\r\n    width: width,\r\n    height: height,\r\n  };\r\n}\r\n\r\n/**\r\n * Sets the default texture color.\r\n *\r\n * The default texture color is used when loading textures from\r\n * urls. Because the URL will be loaded async we'd like to be\r\n * able to use the texture immediately. By putting a 1x1 pixel\r\n * color in the texture we can start using the texture before\r\n * the URL has loaded.\r\n *\r\n * @param {number[]} color Array of 4 values in the range 0 to 1\r\n * @deprecated see {@link module:twgl.setDefaults}\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setDefaultTextureColor(color) {\r\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\r\n}\r\n\r\nfunction setDefaults(newDefaults) {\r\n  helper.copyExistingProperties(newDefaults, defaults);\r\n  if (newDefaults.textureColor) {\r\n    setDefaultTextureColor(newDefaults.textureColor);\r\n  }\r\n}\r\n\r\n/**\r\n * A function to generate the source for a texture.\r\n * @callback TextureFunc\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {module:twgl.TextureOptions} options the texture options\r\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Texture options passed to most texture functions. Each function will use whatever options\r\n * are appropriate for its needs. This lets you pass the same options to all functions.\r\n *\r\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\r\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\r\n *\r\n * @typedef {Object} TextureOptions\r\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\r\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\r\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\r\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\r\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\r\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\r\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\r\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\r\n * @property {number} [minMag] both the min and mag filter settings.\r\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\r\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\r\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\r\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\r\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\r\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\r\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\r\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\r\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\r\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\r\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\r\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\r\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\r\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\r\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\r\n *     the current setting for specific textures.\r\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\r\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\r\n *     the current setting for specific textures.\r\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\r\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\r\n *     the current setting for specific textures.\r\n * @property {(number[]|ArrayBufferView)} [color] color used as temporary 1x1 pixel color for textures loaded async when src is a string.\r\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\r\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\r\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\r\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\r\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\r\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\r\n *\r\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\r\n *\r\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\r\n *\r\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\r\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\r\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\r\n *    The pieces will be uploaded in `cubeFaceOrder`\r\n *\r\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\r\n *\r\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\r\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\r\n *\r\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\r\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\r\n *\r\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\r\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\r\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\r\n *    by 6. Then\r\n *\r\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\r\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\r\n *\r\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\r\n *\r\n * If `number[]` will be converted to `type`.\r\n *\r\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\r\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\r\n * an array etc...\r\n *\r\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\r\n *\r\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\r\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\r\n *\r\n * @memberOf module:twgl\r\n */\r\n\r\n// NOTE: While querying GL is considered slow it's not remotely as slow\r\n// as uploading a texture. On top of that you're unlikely to call this in\r\n// a perf critical loop. Even if upload a texture every frame that's unlikely\r\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\r\n// making the API easy to use outweigh any supposed perf benefits\r\n//\r\n// Also note I get that having one global of these is bad practice.\r\n// As long as it's used correctly it means no garbage which probably\r\n// doesn't matter when dealing with textures but old habits die hard.\r\nconst lastPackState = {};\r\n\r\n/**\r\n * Saves any packing state that will be set based on the options.\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @private\r\n */\r\nfunction savePackState(gl, options) {\r\n  if (options.colorspaceConversion !== undefined) {\r\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\r\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\r\n  }\r\n  if (options.premultiplyAlpha !== undefined) {\r\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\r\n  }\r\n  if (options.flipY !== undefined) {\r\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\r\n  }\r\n}\r\n\r\n/**\r\n * Restores any packing state that was set based on the options.\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @private\r\n */\r\nfunction restorePackState(gl, options) {\r\n  if (options.colorspaceConversion !== undefined) {\r\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\r\n  }\r\n  if (options.premultiplyAlpha !== undefined) {\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\r\n  }\r\n  if (options.flipY !== undefined) {\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\r\n  }\r\n}\r\n\r\n/**\r\n * Saves state related to data size\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @private\r\n */\r\nfunction saveSkipState(gl) {\r\n  lastPackState.unpackAlignment   = gl.getParameter(gl.UNPACK_ALIGNMENT);\r\n  if (utils.isWebGL2(gl)) {\r\n    lastPackState.unpackRowLength   = gl.getParameter(gl.UNPACK_ROW_LENGTH);\r\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\r\n    lastPackState.unpackSkipPixels  = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\r\n    lastPackState.unpackSkipRows    = gl.getParameter(gl.UNPACK_SKIP_ROWS);\r\n    lastPackState.unpackSkipImages  = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\r\n  }\r\n}\r\n\r\n/**\r\n * Restores state related to data size\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @private\r\n */\r\nfunction restoreSkipState(gl) {\r\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT,    lastPackState.unpackAlignment);\r\n  if (utils.isWebGL2(gl)) {\r\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH,   lastPackState.unpackRowLength);\r\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\r\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS,  lastPackState.unpackSkipPixels);\r\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS,    lastPackState.unpackSkipRows);\r\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES,  lastPackState.unpackSkipImages);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Sets the parameters of a texture or sampler\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {number|WebGLSampler} target texture target or sampler\r\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @private\r\n */\r\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\r\n  if (options.minMag) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\r\n  }\r\n  if (options.min) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\r\n  }\r\n  if (options.mag) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\r\n  }\r\n  if (options.wrap) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\r\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\r\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\r\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\r\n    }\r\n  }\r\n  if (options.wrapR) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\r\n  }\r\n  if (options.wrapS) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\r\n  }\r\n  if (options.wrapT) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\r\n  }\r\n  if (options.minLod) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\r\n  }\r\n  if (options.maxLod) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\r\n  }\r\n  if (options.baseLevel) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\r\n  }\r\n  if (options.maxLevel) {\r\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\r\n  }\r\n}\r\n\r\n/**\r\n * Sets the texture parameters of a texture.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setTextureParameters(gl, tex, options) {\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  gl.bindTexture(target, tex);\r\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\r\n}\r\n\r\n/**\r\n * Sets the sampler parameters of a sampler.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setSamplerParameters(gl, sampler, options) {\r\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\r\n}\r\n\r\n/**\r\n * Creates a new sampler object and sets parameters.\r\n *\r\n * Example:\r\n *\r\n *      const sampler = twgl.createSampler(gl, {\r\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\r\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\r\n *      });\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\r\n * @return {Object.<string,WebGLSampler>} the created samplers by name\r\n * @private\r\n */\r\nfunction createSampler(gl, options) {\r\n  const sampler = gl.createSampler();\r\n  setSamplerParameters(gl, sampler, options);\r\n  return sampler;\r\n}\r\n\r\n/**\r\n * Creates a multiple sampler objects and sets parameters on each.\r\n *\r\n * Example:\r\n *\r\n *      const samplers = twgl.createSamplers(gl, {\r\n *        nearest: {\r\n *          minMag: gl.NEAREST,\r\n *        },\r\n *        nearestClampS: {\r\n *          minMag: gl.NEAREST,\r\n *          wrapS: gl.CLAMP_TO_NEAREST,\r\n *        },\r\n *        linear: {\r\n *          minMag: gl.LINEAR,\r\n *        },\r\n *        nearestClamp: {\r\n *          minMag: gl.NEAREST,\r\n *          wrap: gl.CLAMP_TO_EDGE,\r\n *        },\r\n *        linearClamp: {\r\n *          minMag: gl.LINEAR,\r\n *          wrap: gl.CLAMP_TO_EDGE,\r\n *        },\r\n *        linearClampT: {\r\n *          minMag: gl.LINEAR,\r\n *          wrapT: gl.CLAMP_TO_EDGE,\r\n *        },\r\n *      });\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\r\n * @private\r\n */\r\nfunction createSamplers(gl, samplerOptions) {\r\n  const samplers = {};\r\n  Object.keys(samplerOptions).forEach(function(name) {\r\n    samplers[name] = createSampler(gl, samplerOptions[name]);\r\n  });\r\n  return samplers;\r\n}\r\n\r\n/**\r\n * Makes a 1x1 pixel\r\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\r\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\r\n * @return {Uint8Array} Unit8Array with color.\r\n * @private\r\n */\r\nfunction make1Pixel(color) {\r\n  color = color || defaults.textureColor;\r\n  if (isArrayBuffer(color)) {\r\n    return color;\r\n  }\r\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\r\n}\r\n\r\n/**\r\n * Sets filtering or generates mips for texture based on width or height\r\n * If width or height is not passed in uses `options.width` and//or `options.height`\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @param {number} [width] width of texture\r\n * @param {number} [height] height of texture\r\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\r\n * @param {number} [type] The type parameter for texImage2D etc..\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\r\n  options = options || defaults.textureOptions;\r\n  internalFormat = internalFormat || gl.RGBA;\r\n  type = type || gl.UNSIGNED_BYTE;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  width = width || options.width;\r\n  height = height || options.height;\r\n  gl.bindTexture(target, tex);\r\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\r\n    gl.generateMipmap(target);\r\n  } else {\r\n    const filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\r\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\r\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n}\r\n\r\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\r\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\r\n}\r\n\r\n/**\r\n * Gets an array of cubemap face enums\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @return {number[]} cubemap face enums\r\n * @private\r\n */\r\nfunction getCubeFaceOrder(gl, options) {\r\n  options = options || {};\r\n  return options.cubeFaceOrder || [\r\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n    ];\r\n}\r\n\r\n/**\r\n * @typedef {Object} FaceInfo\r\n * @property {number} face gl enum for texImage2D\r\n * @property {number} ndx face index (0 - 5) into source data\r\n * @ignore\r\n */\r\n\r\n/**\r\n * Gets an array of FaceInfos\r\n * There's a bug in some NVidia drivers that will crash the driver if\r\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\r\n * the user's desired order from his faces to WebGL and make sure we\r\n * do the faces in WebGL order\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\r\n *    it's needed internally to sort the array of `ndx` properties by `face`.\r\n * @private\r\n */\r\nfunction getCubeFacesWithNdx(gl, options) {\r\n  const faces = getCubeFaceOrder(gl, options);\r\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\r\n  const facesWithNdx = faces.map(function(face, ndx) {\r\n    return { face: face, ndx: ndx };\r\n  });\r\n  facesWithNdx.sort(function(a, b) {\r\n    return a.face - b.face;\r\n  });\r\n  return facesWithNdx;\r\n}\r\n\r\n/**\r\n * Set a texture from the contents of an element. Will also set\r\n * texture filtering or generate mips based on the dimensions of the element\r\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\r\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {HTMLElement} element a canvas, img, or video element.\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @memberOf module:twgl/textures\r\n * @kind function\r\n */\r\nfunction setTextureFromElement(gl, tex, element, options) {\r\n  options = options || defaults.textureOptions;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  const level = options.level || 0;\r\n  let width = element.width;\r\n  let height = element.height;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  const type = options.type || formatType.type;\r\n  savePackState(gl, options);\r\n  gl.bindTexture(target, tex);\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    // guess the parts\r\n    const imgWidth  = element.width;\r\n    const imgHeight = element.height;\r\n    let size;\r\n    let slices;\r\n    if (imgWidth / 6 === imgHeight) {\r\n      // It's 6x1\r\n      size = imgHeight;\r\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\r\n    } else if (imgHeight / 6 === imgWidth) {\r\n      // It's 1x6\r\n      size = imgWidth;\r\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\r\n    } else if (imgWidth / 3 === imgHeight / 2) {\r\n      // It's 3x2\r\n      size = imgWidth / 3;\r\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\r\n    } else if (imgWidth / 2 === imgHeight / 3) {\r\n      // It's 2x3\r\n      size = imgWidth / 2;\r\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\r\n    } else {\r\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\r\n    }\r\n    if (ctx) {\r\n      ctx.canvas.width = size;\r\n      ctx.canvas.height = size;\r\n      width = size;\r\n      height = size;\r\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\r\n        const xOffset = slices[f.ndx * 2 + 0] * size;\r\n        const yOffset = slices[f.ndx * 2 + 1] * size;\r\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\r\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\r\n      });\r\n      // Free up the canvas memory\r\n      ctx.canvas.width = 1;\r\n      ctx.canvas.height = 1;\r\n    } else if (typeof createImageBitmap !== 'undefined') {\r\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\r\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\r\n      width = size;\r\n      height = size;\r\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\r\n        const xOffset = slices[f.ndx * 2 + 0] * size;\r\n        const yOffset = slices[f.ndx * 2 + 1] * size;\r\n        // We can't easily use a default texture color here as it would have to match\r\n        // the type across all faces where as with a 2D one there's only one face\r\n        // so we're replacing everything all at once. It also has to be the correct size.\r\n        // On the other hand we need all faces to be the same size so as one face loads\r\n        // the rest match else the texture will be unrenderable.\r\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\r\n        createImageBitmap(element, xOffset, yOffset, size, size, {\r\n          premultiplyAlpha: 'none',\r\n          colorSpaceConversion: 'none',\r\n        })\r\n        .then(function(imageBitmap) {\r\n          savePackState(gl, options);\r\n          gl.bindTexture(target, tex);\r\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\r\n          restorePackState(gl, options);\r\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\r\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\r\n    const smallest = Math.min(element.width, element.height);\r\n    const largest = Math.max(element.width, element.height);\r\n    const depth = largest / smallest;\r\n    if (depth % 1 !== 0) {\r\n      throw \"can not compute 3D dimensions of element\";\r\n    }\r\n    const xMult = element.width  === largest ? 1 : 0;\r\n    const yMult = element.height === largest ? 1 : 0;\r\n    saveSkipState(gl);\r\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\r\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\r\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\r\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\r\n    for (let d = 0; d < depth; ++d) {\r\n      const srcX = d * smallest * xMult;\r\n      const srcY = d * smallest * yMult;\r\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\r\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\r\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\r\n    }\r\n    restoreSkipState(gl);\r\n  } else {\r\n    gl.texImage2D(target, level, internalFormat, format, type, element);\r\n  }\r\n  restorePackState(gl, options);\r\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\r\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\r\n  }\r\n  setTextureParameters(gl, tex, options);\r\n}\r\n\r\nfunction noop() {\r\n}\r\n\r\n/**\r\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\r\n * @param {string} url url to image\r\n * @returns {boolean} true if the window's origin is the same as image's url\r\n * @private\r\n */\r\nfunction urlIsSameOrigin(url) {\r\n  if (typeof document !== 'undefined') {\r\n    // for IE really\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    return a.hostname === location.hostname &&\r\n           a.port     === location.port &&\r\n           a.protocol === location.protocol;\r\n  } else {\r\n    const localOrigin = (new URL(location.href)).origin;\r\n    const urlOrigin = (new URL(url, location.href)).origin;\r\n    return urlOrigin === localOrigin;\r\n  }\r\n}\r\n\r\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\r\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\r\n     ? 'anonymous'\r\n     : crossOrigin;\r\n}\r\n\r\n/**\r\n * Loads an image\r\n * @param {string} url url to image\r\n * @param {string} crossOrigin\r\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\r\n *     if there was an error\r\n * @return {HTMLImageElement} the image being loaded.\r\n * @private\r\n */\r\nfunction loadImage(url, crossOrigin, callback) {\r\n  callback = callback || noop;\r\n  let img;\r\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\r\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\r\n  if (typeof Image !== 'undefined') {\r\n    img = new Image();\r\n    if (crossOrigin !== undefined) {\r\n      img.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    const clearEventHandlers = function clearEventHandlers() {\r\n      img.removeEventListener('error', onError);  // eslint-disable-line\r\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\r\n      img = null;\r\n    };\r\n\r\n    const onError = function onError() {\r\n      const msg = \"couldn't load image: \" + url;\r\n      helper.error(msg);\r\n      callback(msg, img);\r\n      clearEventHandlers();\r\n    };\r\n\r\n    const onLoad = function onLoad() {\r\n      callback(null, img);\r\n      clearEventHandlers();\r\n    };\r\n\r\n    img.addEventListener('error', onError);\r\n    img.addEventListener('load', onLoad);\r\n    img.src = url;\r\n    return img;\r\n  } else if (typeof ImageBitmap !== 'undefined') {\r\n    let err;\r\n    let bm;\r\n    const cb = function cb() {\r\n      callback(err, bm);\r\n    };\r\n\r\n    const options = {};\r\n    if (crossOrigin) {\r\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\r\n    }\r\n    fetch(url, options).then(function(response) {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.blob();\r\n    }).then(function(blob) {\r\n      return createImageBitmap(blob, {\r\n        premultiplyAlpha: 'none',\r\n        colorSpaceConversion: 'none',\r\n      });\r\n    }).then(function(bitmap) {\r\n      // not sure if this works. We don't want\r\n      // to catch the user's error. So, call\r\n      // the callback in a timeout so we're\r\n      // not in this scope inside the promise.\r\n      bm = bitmap;\r\n      setTimeout(cb);\r\n    }).catch(function(e) {\r\n      err = e;\r\n      setTimeout(cb);\r\n    });\r\n    img = null;\r\n  }\r\n  return img;\r\n}\r\n\r\n/**\r\n * check if object is a TexImageSource\r\n *\r\n * @param {Object} obj Object to test\r\n * @return {boolean} true if object is a TexImageSource\r\n * @private\r\n */\r\nfunction isTexImageSource(obj) {\r\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\r\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\r\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\r\n}\r\n\r\n/**\r\n * if obj is an TexImageSource then just\r\n * uses it otherwise if obj is a string\r\n * then load it first.\r\n *\r\n * @param {string|TexImageSource} obj\r\n * @param {string} crossOrigin\r\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\r\n *     if there was an error\r\n * @private\r\n */\r\nfunction loadAndUseImage(obj, crossOrigin, callback) {\r\n  if (isTexImageSource(obj)) {\r\n    setTimeout(function() {\r\n      callback(null, obj);\r\n    });\r\n    return obj;\r\n  }\r\n\r\n  return loadImage(obj, crossOrigin, callback);\r\n}\r\n\r\n/**\r\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\r\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setTextureTo1PixelColor(gl, tex, options) {\r\n  options = options || defaults.textureOptions;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  gl.bindTexture(target, tex);\r\n  if (options.color === false) {\r\n    return;\r\n  }\r\n  // Assume it's a URL\r\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\r\n  const color = make1Pixel(options.color);\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    for (let ii = 0; ii < 6; ++ii) {\r\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\r\n    }\r\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\r\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\r\n  } else {\r\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\r\n  }\r\n}\r\n\r\n/**\r\n * The src image(s) used to create a texture.\r\n *\r\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\r\n * you can pass in urls for images to load into the textures. If it's a single url\r\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\r\n * this will be a corresponding array of images for the cubemap.\r\n *\r\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * A callback for when an image finished downloading and been uploaded into a texture\r\n * @callback TextureReadyCallback\r\n * @param {*} err If truthy there was an error.\r\n * @param {WebGLTexture} texture the texture.\r\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * A callback for when all images have finished downloading and been uploaded into their respective textures\r\n * @callback TexturesReadyCallback\r\n * @param {*} err If truthy there was an error.\r\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\r\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * A callback for when an image finished downloading and been uploaded into a texture\r\n * @callback CubemapReadyCallback\r\n * @param {*} err If truthy there was an error.\r\n * @param {WebGLTexture} tex the texture.\r\n * @param {HTMLImageElement[]} imgs the images for each face.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * A callback for when an image finished downloading and been uploaded into a texture\r\n * @callback ThreeDReadyCallback\r\n * @param {*} err If truthy there was an error.\r\n * @param {WebGLTexture} tex the texture.\r\n * @param {HTMLImageElement[]} imgs the images for each slice.\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Loads a texture from an image from a Url as specified in `options.src`\r\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\r\n * immediately useable. It will be updated with the contents of the image once the image has finished\r\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\r\n *    be non null if there was an error.\r\n * @return {HTMLImageElement} the image being downloaded.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction loadTextureFromUrl(gl, tex, options, callback) {\r\n  callback = callback || noop;\r\n  options = options || defaults.textureOptions;\r\n  setTextureTo1PixelColor(gl, tex, options);\r\n  // Because it's async we need to copy the options.\r\n  options = Object.assign({}, options);\r\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\r\n    if (err) {\r\n      callback(err, tex, img);\r\n    } else {\r\n      setTextureFromElement(gl, tex, img, options);\r\n      callback(null, tex, img);\r\n    }\r\n  });\r\n  return img;\r\n}\r\n\r\n/**\r\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\r\n * so that it is usable immediately unless `option.color === false`.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\r\n *    be non null if there was an error.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\r\n  callback = callback || noop;\r\n  const urls = options.src;\r\n  if (urls.length !== 6) {\r\n    throw \"there must be 6 urls for a cubemap\";\r\n  }\r\n  const level = options.level || 0;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  const type = options.type || gl.UNSIGNED_BYTE;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  if (target !== gl.TEXTURE_CUBE_MAP) {\r\n    throw \"target must be TEXTURE_CUBE_MAP\";\r\n  }\r\n  setTextureTo1PixelColor(gl, tex, options);\r\n  // Because it's async we need to copy the options.\r\n  options = Object.assign({}, options);\r\n  let numToLoad = 6;\r\n  const errors = [];\r\n  const faces = getCubeFaceOrder(gl, options);\r\n  let imgs;  // eslint-disable-line\r\n\r\n  function uploadImg(faceTarget) {\r\n    return function(err, img) {\r\n      --numToLoad;\r\n      if (err) {\r\n        errors.push(err);\r\n      } else {\r\n        if (img.width !== img.height) {\r\n          errors.push(\"cubemap face img is not a square: \" + img.src);\r\n        } else {\r\n          savePackState(gl, options);\r\n          gl.bindTexture(target, tex);\r\n\r\n          // So assuming this is the first image we now have one face that's img sized\r\n          // and 5 faces that are 1x1 pixel so size the other faces\r\n          if (numToLoad === 5) {\r\n            // use the default order\r\n            getCubeFaceOrder(gl).forEach(function(otherTarget) {\r\n              // Should we re-use the same face or a color?\r\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\r\n            });\r\n          } else {\r\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\r\n          }\r\n\r\n          restorePackState(gl, options);\r\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\r\n            gl.generateMipmap(target);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (numToLoad === 0) {\r\n        callback(errors.length ? errors : undefined, tex, imgs);\r\n      }\r\n    };\r\n  }\r\n\r\n  imgs = urls.map(function(url, ndx) {\r\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\r\n  });\r\n}\r\n\r\n/**\r\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\r\n * Will set the texture to a 1x1 pixel color\r\n * so that it is usable immediately unless `option.color === false`.\r\n *\r\n * If the width and height is not specified the width and height of the first\r\n * image loaded will be used. Note that since images are loaded async\r\n * which image downloads first is unknown.\r\n *\r\n * If an image is not the same size as the width and height it will be scaled\r\n * to that width and height.\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\r\n *    be non null if there was an error.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\r\n  callback = callback || noop;\r\n  const urls = options.src;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  const type = options.type || gl.UNSIGNED_BYTE;\r\n  const target = options.target || gl.TEXTURE_2D_ARRAY;\r\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\r\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\r\n  }\r\n  setTextureTo1PixelColor(gl, tex, options);\r\n  // Because it's async we need to copy the options.\r\n  options = Object.assign({}, options);\r\n  let numToLoad = urls.length;\r\n  const errors = [];\r\n  let imgs;  // eslint-disable-line\r\n  const level = options.level || 0;\r\n  let width = options.width;\r\n  let height = options.height;\r\n  const depth = urls.length;\r\n  let firstImage = true;\r\n\r\n  function uploadImg(slice) {\r\n    return function(err, img) {\r\n      --numToLoad;\r\n      if (err) {\r\n        errors.push(err);\r\n      } else {\r\n        savePackState(gl, options);\r\n        gl.bindTexture(target, tex);\r\n\r\n        if (firstImage) {\r\n          firstImage = false;\r\n          width = options.width || img.width;\r\n          height = options.height || img.height;\r\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\r\n\r\n          // put it in every slice otherwise some slices will be 0,0,0,0\r\n          for (let s = 0; s < depth; ++s) {\r\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\r\n          }\r\n        } else {\r\n          let src = img;\r\n          if (img.width !== width || img.height !== height) {\r\n            // Size the image to fix\r\n            src = ctx.canvas;\r\n            ctx.canvas.width = width;\r\n            ctx.canvas.height = height;\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n          }\r\n\r\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\r\n\r\n          // free the canvas memory\r\n          if (src === ctx.canvas) {\r\n            ctx.canvas.width = 0;\r\n            ctx.canvas.height = 0;\r\n          }\r\n        }\r\n\r\n        restorePackState(gl, options);\r\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\r\n          gl.generateMipmap(target);\r\n        }\r\n      }\r\n\r\n      if (numToLoad === 0) {\r\n        callback(errors.length ? errors : undefined, tex, imgs);\r\n      }\r\n    };\r\n  }\r\n\r\n  imgs = urls.map(function(url, ndx) {\r\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\r\n  });\r\n}\r\n\r\n/**\r\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\r\n * guess the size. See {@link module:twgl.TextureOptions}.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n *   This is often the same options you passed in when you created the texture.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setTextureFromArray(gl, tex, src, options) {\r\n  options = options || defaults.textureOptions;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  gl.bindTexture(target, tex);\r\n  let width = options.width;\r\n  let height = options.height;\r\n  let depth = options.depth;\r\n  const level = options.level || 0;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\r\n  if (!isArrayBuffer(src)) {\r\n    const Type = typedArrays.getTypedArrayTypeForGLType(type);\r\n    src = new Type(src);\r\n  } else if (src instanceof Uint8ClampedArray) {\r\n    src = new Uint8Array(src.buffer);\r\n  }\r\n\r\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\r\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\r\n  if (numElements % 1) {\r\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\r\n  }\r\n  let dimensions;\r\n  if (target === gl.TEXTURE_3D) {\r\n    if (!width && !height && !depth) {\r\n      const size = Math.cbrt(numElements);\r\n      if (size % 1 !== 0) {\r\n        throw \"can't guess cube size of array of numElements: \" + numElements;\r\n      }\r\n      width = size;\r\n      height = size;\r\n      depth = size;\r\n    } else if (width && (!height || !depth)) {\r\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\r\n      height = dimensions.width;\r\n      depth = dimensions.height;\r\n    } else if (height && (!width || !depth)) {\r\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\r\n      width = dimensions.width;\r\n      depth = dimensions.height;\r\n    } else {\r\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\r\n      width = dimensions.width;\r\n      height = dimensions.height;\r\n    }\r\n  } else {\r\n    dimensions = guessDimensions(gl, target, width, height, numElements);\r\n    width = dimensions.width;\r\n    height = dimensions.height;\r\n  }\r\n  saveSkipState(gl);\r\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\r\n  savePackState(gl, options);\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\r\n    const faceSize = numElements / 6 * elementsPerElement;\r\n\r\n    getCubeFacesWithNdx(gl, options).forEach(f => {\r\n      const offset = faceSize * f.ndx;\r\n      const data = src.subarray(offset, offset + faceSize);\r\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\r\n    });\r\n  } else if (target === gl.TEXTURE_3D) {\r\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\r\n  } else {\r\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\r\n  }\r\n  restorePackState(gl, options);\r\n  restoreSkipState(gl);\r\n  return {\r\n    width: width,\r\n    height: height,\r\n    depth: depth,\r\n    type: type,\r\n  };\r\n}\r\n\r\n/**\r\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\r\n * You must set `options.width` and `options.height`.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction setEmptyTexture(gl, tex, options) {\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  gl.bindTexture(target, tex);\r\n  const level = options.level || 0;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  const type = options.type || formatType.type;\r\n  savePackState(gl, options);\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    for (let ii = 0; ii < 6; ++ii) {\r\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\r\n    }\r\n  } else if (target === gl.TEXTURE_3D) {\r\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\r\n  } else {\r\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\r\n  }\r\n  restorePackState(gl, options);\r\n}\r\n\r\n/**\r\n * Creates a texture based on the options passed in.\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\r\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\r\n * @return {WebGLTexture} the created texture.\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction createTexture(gl, options, callback) {\r\n  callback = callback || noop;\r\n  options = options || defaults.textureOptions;\r\n  const tex = gl.createTexture();\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  let width  = options.width  || 1;\r\n  let height = options.height || 1;\r\n  const internalFormat = options.internalFormat || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  let type = options.type || formatType.type;\r\n  gl.bindTexture(target, tex);\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    // this should have been the default for CUBEMAPS :(\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n  let src = options.src;\r\n  if (src) {\r\n    if (typeof src === \"function\") {\r\n      src = src(gl, options);\r\n    }\r\n    if (typeof (src) === \"string\") {\r\n      loadTextureFromUrl(gl, tex, options, callback);\r\n    } else if (isArrayBuffer(src) ||\r\n               (Array.isArray(src) && (\r\n                    typeof src[0] === 'number' ||\r\n                    Array.isArray(src[0]) ||\r\n                    isArrayBuffer(src[0]))\r\n               )\r\n              ) {\r\n      const dimensions = setTextureFromArray(gl, tex, src, options);\r\n      width  = dimensions.width;\r\n      height = dimensions.height;\r\n      type   = dimensions.type;\r\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\r\n      if (target === gl.TEXTURE_CUBE_MAP) {\r\n        loadCubemapFromUrls(gl, tex, options, callback);\r\n      } else {\r\n        loadSlicesFromUrls(gl, tex, options, callback);\r\n      }\r\n    } else if (isTexImageSource(src)) {\r\n      setTextureFromElement(gl, tex, src, options);\r\n      width  = src.width;\r\n      height = src.height;\r\n    } else {\r\n      throw \"unsupported src type\";\r\n    }\r\n  } else {\r\n    setEmptyTexture(gl, tex, options);\r\n  }\r\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\r\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\r\n  }\r\n  setTextureParameters(gl, tex, options);\r\n  return tex;\r\n}\r\n\r\n/**\r\n * Resizes a texture based on the options passed in.\r\n *\r\n * Note: This is not a generic resize anything function.\r\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\r\n * It will use `options.src` if it exists to try to determine a `type`\r\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\r\n * for the texture. Texture parameters will be set accordingly\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {WebGLTexture} tex the texture to resize\r\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\r\n * @param {number} [width] the new width. If not passed in will use `options.width`\r\n * @param {number} [height] the new height. If not passed in will use `options.height`\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction resizeTexture(gl, tex, options, width, height) {\r\n  width = width || options.width;\r\n  height = height || options.height;\r\n  const target = options.target || gl.TEXTURE_2D;\r\n  gl.bindTexture(target, tex);\r\n  const level = options.level || 0;\r\n  const internalFormat = options.internalFormat || options.format || gl.RGBA;\r\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\r\n  const format = options.format || formatType.format;\r\n  let type;\r\n  const src = options.src;\r\n  if (!src) {\r\n    type = options.type || formatType.type;\r\n  } else if (isArrayBuffer(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\r\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\r\n  } else {\r\n    type = options.type || formatType.type;\r\n  }\r\n  if (target === gl.TEXTURE_CUBE_MAP) {\r\n    for (let ii = 0; ii < 6; ++ii) {\r\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\r\n    }\r\n  } else {\r\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a src is an async request.\r\n * if src is a string we're going to download an image\r\n * if src is an array of strings we're going to download cubemap images\r\n * @param {*} src The src from a TextureOptions\r\n * @returns {bool} true if src is async.\r\n * @private\r\n */\r\nfunction isAsyncSrc(src) {\r\n  return typeof src === 'string' ||\r\n         (Array.isArray(src) && typeof src[0] === 'string');\r\n}\r\n\r\n/**\r\n * Creates a bunch of textures based on the passed in options.\r\n *\r\n * Example:\r\n *\r\n *     const textures = twgl.createTextures(gl, {\r\n *       // a power of 2 image\r\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\r\n *       // a non-power of 2 image\r\n *       clover: { src: \"images/clover.jpg\" },\r\n *       // From a canvas\r\n *       fromCanvas: { src: ctx.canvas },\r\n *       // A cubemap from 6 images\r\n *       yokohama: {\r\n *         target: gl.TEXTURE_CUBE_MAP,\r\n *         src: [\r\n *           'images/yokohama/posx.jpg',\r\n *           'images/yokohama/negx.jpg',\r\n *           'images/yokohama/posy.jpg',\r\n *           'images/yokohama/negy.jpg',\r\n *           'images/yokohama/posz.jpg',\r\n *           'images/yokohama/negz.jpg',\r\n *         ],\r\n *       },\r\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\r\n *       goldengate: {\r\n *         target: gl.TEXTURE_CUBE_MAP,\r\n *         src: 'images/goldengate.jpg',\r\n *       },\r\n *       // A 2x2 pixel texture from a JavaScript array\r\n *       checker: {\r\n *         mag: gl.NEAREST,\r\n *         min: gl.LINEAR,\r\n *         src: [\r\n *           255,255,255,255,\r\n *           192,192,192,255,\r\n *           192,192,192,255,\r\n *           255,255,255,255,\r\n *         ],\r\n *       },\r\n *       // a 1x2 pixel texture from a typed array.\r\n *       stripe: {\r\n *         mag: gl.NEAREST,\r\n *         min: gl.LINEAR,\r\n *         format: gl.LUMINANCE,\r\n *         src: new Uint8Array([\r\n *           255,\r\n *           128,\r\n *           255,\r\n *           128,\r\n *           255,\r\n *           128,\r\n *           255,\r\n *           128,\r\n *         ]),\r\n *         width: 1,\r\n *       },\r\n *     });\r\n *\r\n * Now\r\n *\r\n * *   `textures.hftIcon` will be a 2d texture\r\n * *   `textures.clover` will be a 2d texture\r\n * *   `textures.fromCanvas` will be a 2d texture\r\n * *   `textures.yohohama` will be a cubemap texture\r\n * *   `textures.goldengate` will be a cubemap texture\r\n * *   `textures.checker` will be a 2d texture\r\n * *   `textures.stripe` will be a 2d texture\r\n *\r\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\r\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\r\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\r\n * @return {Object.<string,WebGLTexture>} the created textures by name\r\n * @memberOf module:twgl/textures\r\n */\r\nfunction createTextures(gl, textureOptions, callback) {\r\n  callback = callback || noop;\r\n  let numDownloading = 0;\r\n  const errors = [];\r\n  const textures = {};\r\n  const images = {};\r\n\r\n  function callCallbackIfReady() {\r\n    if (numDownloading === 0) {\r\n      setTimeout(function() {\r\n        callback(errors.length ? errors : undefined, textures, images);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  Object.keys(textureOptions).forEach(function(name) {\r\n    const options = textureOptions[name];\r\n    let onLoadFn;\r\n    if (isAsyncSrc(options.src)) {\r\n      onLoadFn = function(err, tex, img) {\r\n        images[name] = img;\r\n        --numDownloading;\r\n        if (err) {\r\n          errors.push(err);\r\n        }\r\n        callCallbackIfReady();\r\n      };\r\n      ++numDownloading;\r\n    }\r\n    textures[name] = createTexture(gl, options, onLoadFn);\r\n  });\r\n\r\n  // queue the callback if there are no images to download.\r\n  // We do this because if your code is structured to wait for\r\n  // images to download but then you comment out all the async\r\n  // images your code would break.\r\n  callCallbackIfReady();\r\n\r\n  return textures;\r\n}\r\n\r\n// Using quotes prevents Uglify from changing the names.\r\n// No speed diff AFAICT.\r\nexport {\r\n  setDefaults as setTextureDefaults_,\r\n\r\n  createSampler,\r\n  createSamplers,\r\n  setSamplerParameters,\r\n\r\n  createTexture,\r\n  setEmptyTexture,\r\n  setTextureFromArray,\r\n  loadTextureFromUrl,\r\n  setTextureFromElement,\r\n  setTextureFilteringForSize,\r\n  setTextureParameters,\r\n  setDefaultTextureColor,\r\n  createTextures,\r\n  resizeTexture,\r\n\r\n  canGenerateMipmap,\r\n  canFilter,\r\n  getNumComponentsForFormat,\r\n  getBytesPerElementForInternalFormat,\r\n  getFormatAndTypeForInternalFormat,\r\n};\r\n\r\n","import * as m4 from './m4.js';\r\nimport * as v3 from './v3.js';\r\nimport * as primitives from './primitives.js';\r\n\r\nexport * from './twgl.js';\r\nexport {\r\n  m4,\r\n  v3,\r\n  primitives,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as attributes from './attributes.js';\r\nimport * as textures from './textures.js';\r\nimport * as helper from './helper.js';\r\nimport * as utils from './utils.js';\r\n\r\n/**\r\n * The main TWGL module.\r\n *\r\n * For most use cases you shouldn't need anything outside this module.\r\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\r\n *\r\n * @module twgl\r\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\r\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\r\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\r\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\r\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\r\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\r\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\r\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\r\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\r\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\r\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\r\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\r\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\r\n * @borrows module:twgl/programs.setUniforms as setUniforms\r\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\r\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\r\n * @borrows module:twgl/textures.createTexture as createTexture\r\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\r\n * @borrows module:twgl/textures.createTextures as createTextures\r\n */\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\nconst defaults = {\r\n  addExtensionsToContext: true,\r\n};\r\n\r\n/**\r\n * Various default settings for twgl.\r\n *\r\n * Note: You can call this any number of times. Example:\r\n *\r\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\r\n *     twgl.setDefaults({ attribPrefix: 'a_' });\r\n *\r\n * is equivalent to\r\n *\r\n *     twgl.setDefaults({\r\n *       textureColor: [1, 0, 0, 1],\r\n *       attribPrefix: 'a_',\r\n *     });\r\n *\r\n * @typedef {Object} Defaults\r\n * @property {string} [attribPrefix] The prefix to stick on attributes\r\n *\r\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\r\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\r\n *\r\n *   In otherwords I'll create arrays of geometry like this\r\n *\r\n *       const arrays = {\r\n *         position: ...\r\n *         normal: ...\r\n *         texcoord: ...\r\n *       };\r\n *\r\n *   But need those mapped to attributes and my attributes start with `a_`.\r\n *\r\n *   Default: `\"\"`\r\n *\r\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\r\n *\r\n *   The default texture color is used when loading textures from\r\n *   urls. Because the URL will be loaded async we'd like to be\r\n *   able to use the texture immediately. By putting a 1x1 pixel\r\n *   color in the texture we can start using the texture before\r\n *   the URL has loaded.\r\n *\r\n *   Default: `[0.5, 0.75, 1, 1]`\r\n *\r\n * @property {string} [crossOrigin]\r\n *\r\n *   If not undefined sets the crossOrigin attribute on images\r\n *   that twgl creates when downloading images for textures.\r\n *\r\n *   Also see {@link module:twgl.TextureOptions}.\r\n *\r\n * @property {bool} [addExtensionsToContext]\r\n *\r\n *   If true, then, when twgl will try to add any supported WebGL extensions\r\n *   directly to the context under their normal GL names. For example\r\n *   if ANGLE_instances_arrays exists then twgl would enable it,\r\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\r\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\r\n *   to the `WebGLRenderingContext`.\r\n *\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Sets various defaults for twgl.\r\n *\r\n * In the interest of terseness which is kind of the point\r\n * of twgl I've integrated a few of the older functions here\r\n *\r\n * @param {module:twgl.Defaults} newDefaults The default settings.\r\n * @memberOf module:twgl\r\n */\r\nfunction setDefaults(newDefaults) {\r\n  helper.copyExistingProperties(newDefaults, defaults);\r\n  attributes.setAttributeDefaults_(newDefaults);  // eslint-disable-line\r\n  textures.setTextureDefaults_(newDefaults);  // eslint-disable-line\r\n}\r\n\r\nconst prefixRE = /^(.*?)_/;\r\nfunction addExtensionToContext(gl, extensionName) {\r\n  utils.glEnumToString(gl, 0);\r\n  const ext = gl.getExtension(extensionName);\r\n  if (ext) {\r\n    const enums = {};\r\n    const fnSuffix = prefixRE.exec(extensionName)[1];\r\n    const enumSuffix = '_' + fnSuffix;\r\n    for (const key in ext) {\r\n      const value = ext[key];\r\n      const isFunc = typeof (value) === 'function';\r\n      const suffix = isFunc ? fnSuffix : enumSuffix;\r\n      let name = key;\r\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\r\n      // and WEBGL_compressed_texture_pvrtc\r\n      if (key.endsWith(suffix)) {\r\n        name = key.substring(0, key.length - suffix.length);\r\n      }\r\n      if (gl[name] !== undefined) {\r\n        if (!isFunc && gl[name] !== value) {\r\n          helper.warn(name, gl[name], value, key);\r\n        }\r\n      } else {\r\n        if (isFunc) {\r\n          gl[name] = function(origFn) {\r\n            return function() {\r\n              return origFn.apply(ext, arguments);\r\n            };\r\n          }(value);\r\n        } else {\r\n          gl[name] = value;\r\n          enums[name] = value;\r\n        }\r\n      }\r\n    }\r\n    // pass the modified enums to glEnumToString\r\n    enums.constructor = {\r\n      name: ext.constructor.name,\r\n    };\r\n    utils.glEnumToString(enums, 0);\r\n  }\r\n  return ext;\r\n}\r\n\r\n/*\r\n * If you're wondering why the code doesn't just iterate\r\n * over all extensions using `gl.getExtensions` is that it's possible\r\n * some future extension is incompatible with this code. Rather than\r\n * have thing suddenly break it seems better to manually add to this\r\n * list.\r\n *\r\n */\r\nconst supportedExtensions = [\r\n  'ANGLE_instanced_arrays',\r\n  'EXT_blend_minmax',\r\n  'EXT_color_buffer_float',\r\n  'EXT_color_buffer_half_float',\r\n  'EXT_disjoint_timer_query',\r\n  'EXT_disjoint_timer_query_webgl2',\r\n  'EXT_frag_depth',\r\n  'EXT_sRGB',\r\n  'EXT_shader_texture_lod',\r\n  'EXT_texture_filter_anisotropic',\r\n  'OES_element_index_uint',\r\n  'OES_standard_derivatives',\r\n  'OES_texture_float',\r\n  'OES_texture_float_linear',\r\n  'OES_texture_half_float',\r\n  'OES_texture_half_float_linear',\r\n  'OES_vertex_array_object',\r\n  'WEBGL_color_buffer_float',\r\n  'WEBGL_compressed_texture_atc',\r\n  'WEBGL_compressed_texture_etc1',\r\n  'WEBGL_compressed_texture_pvrtc',\r\n  'WEBGL_compressed_texture_s3tc',\r\n  'WEBGL_compressed_texture_s3tc_srgb',\r\n  'WEBGL_depth_texture',\r\n  'WEBGL_draw_buffers',\r\n];\r\n\r\n/**\r\n * Attempts to enable all of the following extensions\r\n * and add their functions and constants to the\r\n * `WebGLRenderingContext` using their normal non-extension like names.\r\n *\r\n *      ANGLE_instanced_arrays\r\n *      EXT_blend_minmax\r\n *      EXT_color_buffer_float\r\n *      EXT_color_buffer_half_float\r\n *      EXT_disjoint_timer_query\r\n *      EXT_disjoint_timer_query_webgl2\r\n *      EXT_frag_depth\r\n *      EXT_sRGB\r\n *      EXT_shader_texture_lod\r\n *      EXT_texture_filter_anisotropic\r\n *      OES_element_index_uint\r\n *      OES_standard_derivatives\r\n *      OES_texture_float\r\n *      OES_texture_float_linear\r\n *      OES_texture_half_float\r\n *      OES_texture_half_float_linear\r\n *      OES_vertex_array_object\r\n *      WEBGL_color_buffer_float\r\n *      WEBGL_compressed_texture_atc\r\n *      WEBGL_compressed_texture_etc1\r\n *      WEBGL_compressed_texture_pvrtc\r\n *      WEBGL_compressed_texture_s3tc\r\n *      WEBGL_compressed_texture_s3tc_srgb\r\n *      WEBGL_depth_texture\r\n *      WEBGL_draw_buffers\r\n *\r\n * For example if `ANGLE_instanced_arrays` exists then the functions\r\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\r\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\r\n * `WebGLRenderingContext`.\r\n *\r\n * Note that if you want to know if the extension exists you should\r\n * probably call `gl.getExtension` for each extension. Alternatively\r\n * you can check for the existance of the functions or constants that\r\n * are expected to be added. For example\r\n *\r\n *    if (gl.drawBuffers) {\r\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\r\n *      ....\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @memberOf module:twgl\r\n */\r\nfunction addExtensionsToContext(gl) {\r\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\r\n    addExtensionToContext(gl, supportedExtensions[ii]);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {HTMLCanvasElement} canvas The canvas tag to get\r\n *     context from. If one is not passed in one will be\r\n *     created.\r\n * @return {WebGLRenderingContext} The created context.\r\n * @private\r\n */\r\nfunction create3DContext(canvas, opt_attribs) {\r\n  const names = [\"webgl\", \"experimental-webgl\"];\r\n  let context = null;\r\n  for (let ii = 0; ii < names.length; ++ii) {\r\n    context = canvas.getContext(names[ii], opt_attribs);\r\n    if (context) {\r\n      if (defaults.addExtensionsToContext) {\r\n        addExtensionsToContext(context);\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\n/**\r\n * Gets a WebGL1 context.\r\n *\r\n * Note: Will attempt to enable Vertex Array Objects\r\n * and add WebGL2 entry points. (unless you first set defaults with\r\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\r\n *\r\n * @param {HTMLCanvasElement} canvas a canvas element.\r\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\r\n * @return {WebGLRenderingContext} The created context.\r\n * @memberOf module:twgl\r\n */\r\nfunction getWebGLContext(canvas, opt_attribs) {\r\n  const gl = create3DContext(canvas, opt_attribs);\r\n  return gl;\r\n}\r\n\r\n/**\r\n * Creates a webgl context.\r\n *\r\n * Will return a WebGL2 context if possible.\r\n *\r\n * You can check if it's WebGL2 with\r\n *\r\n *     twgl.isWebGL2(gl);\r\n *\r\n * @param {HTMLCanvasElement} canvas The canvas tag to get\r\n *     context from. If one is not passed in one will be\r\n *     created.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nfunction createContext(canvas, opt_attribs) {\r\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\r\n  let context = null;\r\n  for (let ii = 0; ii < names.length; ++ii) {\r\n    context = canvas.getContext(names[ii], opt_attribs);\r\n    if (context) {\r\n      if (defaults.addExtensionsToContext) {\r\n        addExtensionsToContext(context);\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\n/**\r\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\r\n *\r\n * You can check if it's WebGL2 with\r\n *\r\n *    function isWebGL2(gl) {\r\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\r\n *    }\r\n *\r\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\r\n * and add WebGL2 entry points. (unless you first set defaults with\r\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\r\n *\r\n * @param {HTMLCanvasElement} canvas a canvas element.\r\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\r\n * @return {WebGLRenderingContext} The created context.\r\n * @memberOf module:twgl\r\n */\r\nfunction getContext(canvas, opt_attribs) {\r\n  const gl = createContext(canvas, opt_attribs);\r\n  return gl;\r\n}\r\n\r\n/**\r\n * Resize a canvas to match the size it's displayed.\r\n * @param {HTMLCanvasElement} canvas The canvas to resize.\r\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\r\n * @return {boolean} true if the canvas was resized.\r\n * @memberOf module:twgl\r\n */\r\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\r\n  multiplier = multiplier || 1;\r\n  multiplier = Math.max(0, multiplier);\r\n  const width  = canvas.clientWidth  * multiplier | 0;\r\n  const height = canvas.clientHeight * multiplier | 0;\r\n  if (canvas.width !== width || canvas.height !== height) {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport {\r\n  addExtensionsToContext,\r\n  getContext,\r\n  getWebGLContext,\r\n  resizeCanvasToDisplaySize,\r\n  setDefaults,\r\n};\r\n\r\n// function notPrivate(name) {\r\n//   return name[name.length - 1] !== '_';\r\n// }\r\n//\r\n// function copyPublicProperties(src, dst) {\r\n//   Object.keys(src).filter(notPrivate).forEach(function(key) {\r\n//     dst[key] = src[key];\r\n//   });\r\n//   return dst;\r\n// }\r\n\r\nexport * from './attributes.js';\r\nexport * from './draw.js';\r\nexport * from './framebuffers.js';\r\nexport * from './programs.js';\r\nexport * from './textures.js';\r\nexport * from './typedarrays.js';\r\nexport * from './utils.js';\r\nexport * from './vertex-arrays.js';\r\n\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Low level shader typed array related functions\r\n *\r\n * You should generally not need to use these functions. They are provided\r\n * for those cases where you're doing something out of the ordinary\r\n * and you need lower level access.\r\n *\r\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/typedArray\r\n */\r\n\r\n// make sure we don't see a global gl\r\nconst gl = undefined;  // eslint-disable-line\r\n\r\n/* DataType */\r\nconst BYTE                           = 0x1400;\r\nconst UNSIGNED_BYTE                  = 0x1401;\r\nconst SHORT                          = 0x1402;\r\nconst UNSIGNED_SHORT                 = 0x1403;\r\nconst INT                            = 0x1404;\r\nconst UNSIGNED_INT                   = 0x1405;\r\nconst FLOAT                          = 0x1406;\r\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\r\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\r\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\r\nconst HALF_FLOAT                   = 0x140B;\r\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\r\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\r\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\r\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\r\nconst UNSIGNED_INT_24_8            = 0x84FA;\r\n\r\nconst glTypeToTypedArray = {};\r\n{\r\n  const tt = glTypeToTypedArray;\r\n  tt[BYTE]                           = Int8Array;\r\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\r\n  tt[SHORT]                          = Int16Array;\r\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\r\n  tt[INT]                            = Int32Array;\r\n  tt[UNSIGNED_INT]                   = Uint32Array;\r\n  tt[FLOAT]                          = Float32Array;\r\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\r\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\r\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\r\n  tt[HALF_FLOAT]                     = Uint16Array;\r\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\r\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\r\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\r\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\r\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\r\n}\r\n\r\n/**\r\n * Get the GL type for a typedArray\r\n * @param {ArrayBufferView} typedArray a typedArray\r\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\r\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\r\n * @memberOf module:twgl/typedArray\r\n */\r\nfunction getGLTypeForTypedArray(typedArray) {\r\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\r\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\r\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\r\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\r\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\r\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\r\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\r\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\r\n  throw \"unsupported typed array type\";\r\n}\r\n\r\n/**\r\n * Get the GL type for a typedArray type\r\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\r\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\r\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\r\n * @memberOf module:twgl/typedArray\r\n */\r\nfunction getGLTypeForTypedArrayType(typedArrayType) {\r\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\r\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\r\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\r\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\r\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\r\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\r\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\r\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\r\n  throw \"unsupported typed array type\";\r\n}\r\n\r\n/**\r\n * Get the typed array constructor for a given GL type\r\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\r\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\r\n * @memberOf module:twgl/typedArray\r\n */\r\nfunction getTypedArrayTypeForGLType(type) {\r\n  const CTOR = glTypeToTypedArray[type];\r\n  if (!CTOR) {\r\n    throw \"unknown gl type\";\r\n  }\r\n  return CTOR;\r\n}\r\n\r\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\r\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\r\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\r\n  }\r\n  : function isArrayBuffer(a) {\r\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\r\n  };\r\n\r\nexport {\r\n  getGLTypeForTypedArray,\r\n  getGLTypeForTypedArrayType,\r\n  getTypedArrayTypeForGLType,\r\n  isArrayBuffer,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Gets the gl version as a number\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @return {number} version of gl\r\n * @private\r\n */\r\n//function getVersionAsNumber(gl) {\r\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\r\n//}\r\n\r\n/**\r\n * Check if context is WebGL 2.0\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @return {bool} true if it's WebGL 2.0\r\n * @memberOf module:twgl\r\n */\r\nfunction isWebGL2(gl) {\r\n  // This is the correct check but it's slow\r\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\r\n  // This might also be the correct check but I'm assuming it's slow-ish\r\n  // return gl instanceof WebGL2RenderingContext;\r\n  return !!gl.texStorage2D;\r\n}\r\n\r\n/**\r\n * Check if context is WebGL 1.0\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @return {bool} true if it's WebGL 1.0\r\n * @memberOf module:twgl\r\n */\r\nfunction isWebGL1(gl) {\r\n  // This is the correct check but it's slow\r\n  // const version = getVersionAsNumber(gl);\r\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\r\n  // This might also be the correct check but I'm assuming it's slow-ish\r\n  // return gl instanceof WebGLRenderingContext;\r\n  return !gl.texStorage2D;\r\n}\r\n\r\n/**\r\n * Gets a string for WebGL enum\r\n *\r\n * Note: Several enums are the same. Without more\r\n * context (which function) it's impossible to always\r\n * give the correct enum. As it is, for matching values\r\n * it gives all enums. Checking the WebGL2RenderingContext\r\n * that means\r\n *\r\n *      0     = ZERO | POINT | NONE | NO_ERROR\r\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\r\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\r\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\r\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\r\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\r\n *\r\n * It's also not useful for bits really unless you pass in individual bits.\r\n * In other words\r\n *\r\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\r\n *     twgl.glEnumToString(gl, bits);  // not going to work\r\n *\r\n * Note that some enums only exist on extensions. If you\r\n * want them to show up you need to pass the extension at least\r\n * once. For example\r\n *\r\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\r\n *     if (ext) {\r\n *        twgl.glEnumToString(ext, 0);  // just prime the function\r\n *\r\n *        ..later..\r\n *\r\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n *        console.log(twgl.glEnumToString(gl, internalFormat));\r\n *\r\n * Notice I didn't have to pass the extension the second time. This means\r\n * you can have place that generically gets an enum for texture formats for example.\r\n * and as long as you primed the function with the extensions\r\n *\r\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\r\n * then twgl will automatically get the extension's enums.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\r\n * @param {number} value the value of the enum you want to look up.\r\n * @return {string} enum string or hex value\r\n * @memberOf module:twgl\r\n * @function glEnumToString\r\n */\r\nconst glEnumToString = (function() {\r\n  const haveEnumsForType = {};\r\n  const enums = {};\r\n\r\n  function addEnums(gl) {\r\n    const type = gl.constructor.name;\r\n    if (!haveEnumsForType[type]) {\r\n      for (const key in gl) {\r\n        if (typeof gl[key] === 'number') {\r\n          const existing = enums[gl[key]];\r\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\r\n        }\r\n      }\r\n      haveEnumsForType[type] = true;\r\n    }\r\n  }\r\n\r\n  return function glEnumToString(gl, value) {\r\n    addEnums(gl);\r\n    return enums[value] || (\"0x\" + value.toString(16));\r\n  };\r\n}());\r\n\r\nexport {\r\n  glEnumToString,\r\n  isWebGL1,\r\n  isWebGL2,\r\n};\r\n\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n *\r\n * Vec3 math math functions.\r\n *\r\n * Almost all functions take an optional `dst` argument. If it is not passed in the\r\n * functions will create a new Vec3. In other words you can do this\r\n *\r\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\r\n *\r\n * or\r\n *\r\n *     var v3 = v3.create();\r\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\r\n *\r\n * The first style is often easier but depending on where it's used it generates garbage where\r\n * as there is almost never allocation with the second style.\r\n *\r\n * It is always save to pass any vector as the destination. So for example\r\n *\r\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\r\n *\r\n * @module twgl/v3\r\n */\r\n\r\nlet VecType = Float32Array;\r\n\r\n/**\r\n * A JavaScript array with 3 values or a Float32Array with 3 values.\r\n * When created by the library will create the default type which is `Float32Array`\r\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\r\n * @typedef {(number[]|Float32Array)} Vec3\r\n * @memberOf module:twgl/v3\r\n */\r\n\r\n/**\r\n * Sets the type this library creates for a Vec3\r\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\r\n * @return {constructor} previous constructor for Vec3\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction setDefaultType(ctor) {\r\n  const oldType = VecType;\r\n  VecType = ctor;\r\n  return oldType;\r\n}\r\n\r\n/**\r\n * Creates a vec3; may be called with x, y, z to set initial values.\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction create(x, y, z) {\r\n  const dst = new VecType(3);\r\n  if (x) {\r\n    dst[0] = x;\r\n  }\r\n  if (y) {\r\n    dst[1] = y;\r\n  }\r\n  if (z) {\r\n    dst[2] = z;\r\n  }\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Adds two vectors; assumes a and b have the same dimension.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction add(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] + b[0];\r\n  dst[1] = a[1] + b[1];\r\n  dst[2] = a[2] + b[2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Subtracts two vectors.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction subtract(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] - b[0];\r\n  dst[1] = a[1] - b[1];\r\n  dst[2] = a[2] - b[2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Performs linear interpolation on two vectors.\r\n * Given vectors a and b and interpolation coefficient t, returns\r\n * a + t * (b - a).\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {number} t Interpolation coefficient.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction lerp(a, b, t, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] + t * (b[0] - a[0]);\r\n  dst[1] = a[1] + t * (b[1] - a[1]);\r\n  dst[2] = a[2] + t * (b[2] - a[2]);\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Performs linear interpolation on two vectors.\r\n * Given vectors a and b and interpolation coefficient vector t, returns\r\n * a + t * (b - a).\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction lerpV(a, b, t, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\r\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\r\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Return max values of two vectors.\r\n * Given vectors a and b returns\r\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction max(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = Math.max(a[0], b[0]);\r\n  dst[1] = Math.max(a[1], b[1]);\r\n  dst[2] = Math.max(a[2], b[2]);\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Return min values of two vectors.\r\n * Given vectors a and b returns\r\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} the created vector\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction min(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = Math.min(a[0], b[0]);\r\n  dst[1] = Math.min(a[1], b[1]);\r\n  dst[2] = Math.min(a[2], b[2]);\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Mutiplies a vector by a scalar.\r\n * @param {module:twgl/v3.Vec3} v The vector.\r\n * @param {number} k The scalar.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} dst.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction mulScalar(v, k, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = v[0] * k;\r\n  dst[1] = v[1] * k;\r\n  dst[2] = v[2] * k;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Divides a vector by a scalar.\r\n * @param {module:twgl/v3.Vec3} v The vector.\r\n * @param {number} k The scalar.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} dst.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction divScalar(v, k, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = v[0] / k;\r\n  dst[1] = v[1] / k;\r\n  dst[2] = v[2] / k;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vectors; assumes both vectors have\r\n * three entries.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} The vector a cross b.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction cross(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  const t1 = a[2] * b[0] - a[0] * b[2];\r\n  const t2 = a[0] * b[1] - a[1] * b[0];\r\n  dst[0] = a[1] * b[2] - a[2] * b[1];\r\n  dst[1] = t1;\r\n  dst[2] = t2;\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Computes the dot product of two vectors; assumes both vectors have\r\n * three entries.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @return {number} dot product\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction dot(a, b) {\r\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n}\r\n\r\n/**\r\n * Computes the length of vector\r\n * @param {module:twgl/v3.Vec3} v vector.\r\n * @return {number} length of vector.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction length(v) {\r\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\r\n}\r\n\r\n/**\r\n * Computes the square of the length of vector\r\n * @param {module:twgl/v3.Vec3} v vector.\r\n * @return {number} square of the length of vector.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction lengthSq(v) {\r\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\r\n}\r\n\r\n/**\r\n * Computes the distance between 2 points\r\n * @param {module:twgl/v3.Vec3} a vector.\r\n * @param {module:twgl/v3.Vec3} b vector.\r\n * @return {number} distance between a and b\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction distance(a, b) {\r\n  const dx = a[0] - b[0];\r\n  const dy = a[1] - b[1];\r\n  const dz = a[2] - b[2];\r\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n}\r\n\r\n/**\r\n * Computes the square of the distance between 2 points\r\n * @param {module:twgl/v3.Vec3} a vector.\r\n * @param {module:twgl/v3.Vec3} b vector.\r\n * @return {number} square of the distance between a and b\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction distanceSq(a, b) {\r\n  const dx = a[0] - b[0];\r\n  const dy = a[1] - b[1];\r\n  const dz = a[2] - b[2];\r\n  return dx * dx + dy * dy + dz * dz;\r\n}\r\n\r\n/**\r\n * Divides a vector by its Euclidean length and returns the quotient.\r\n * @param {module:twgl/v3.Vec3} a The vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} The normalized vector.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction normalize(a, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n  const len = Math.sqrt(lenSq);\r\n  if (len > 0.00001) {\r\n    dst[0] = a[0] / len;\r\n    dst[1] = a[1] / len;\r\n    dst[2] = a[2] / len;\r\n  } else {\r\n    dst[0] = 0;\r\n    dst[1] = 0;\r\n    dst[2] = 0;\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Negates a vector.\r\n * @param {module:twgl/v3.Vec3} v The vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} -v.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction negate(v, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = -v[0];\r\n  dst[1] = -v[1];\r\n  dst[2] = -v[2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Copies a vector.\r\n * @param {module:twgl/v3.Vec3} v The vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} A copy of v.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction copy(v, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = v[0];\r\n  dst[1] = v[1];\r\n  dst[2] = v[2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Multiplies a vector by another vector (component-wise); assumes a and\r\n * b have the same length.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\r\n *     b.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction multiply(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] * b[0];\r\n  dst[1] = a[1] * b[1];\r\n  dst[2] = a[2] * b[2];\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Divides a vector by another vector (component-wise); assumes a and\r\n * b have the same length.\r\n * @param {module:twgl/v3.Vec3} a Operand vector.\r\n * @param {module:twgl/v3.Vec3} b Operand vector.\r\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\r\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\r\n *     b.\r\n * @memberOf module:twgl/v3\r\n */\r\nfunction divide(a, b, dst) {\r\n  dst = dst || new VecType(3);\r\n\r\n  dst[0] = a[0] / b[0];\r\n  dst[1] = a[1] / b[1];\r\n  dst[2] = a[2] / b[2];\r\n\r\n  return dst;\r\n}\r\n\r\nexport {\r\n  add,\r\n  copy,\r\n  create,\r\n  cross,\r\n  distance,\r\n  distanceSq,\r\n  divide,\r\n  divScalar,\r\n  dot,\r\n  lerp,\r\n  lerpV,\r\n  length,\r\n  lengthSq,\r\n  max,\r\n  min,\r\n  mulScalar,\r\n  multiply,\r\n  negate,\r\n  normalize,\r\n  setDefaultType,\r\n  subtract,\r\n};\r\n\r\n","/*\r\n * Copyright 2019 Gregg Tavares\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport * as programs from './programs.js';\r\n\r\n/**\r\n * vertex array object related functions\r\n *\r\n * You should generally not need to use these functions. They are provided\r\n * for those cases where you're doing something out of the ordinary\r\n * and you need lower level access.\r\n *\r\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\r\n * itself\r\n *\r\n * See {@link module:twgl} for core functions\r\n *\r\n * @module twgl/vertexArrays\r\n */\r\n\r\n/**\r\n * @typedef {Object} VertexArrayInfo\r\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\r\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\r\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\r\n * @memberOf module:twgl\r\n */\r\n\r\n/**\r\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\r\n *\r\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\r\n * {@link module:twgl:drawBufferInfo}.\r\n *\r\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\r\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\r\n *   who's attributes use the same attribute locations for the same purposes.\r\n *\r\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\r\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\r\n *\r\n * also\r\n *\r\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\r\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\r\n *   will affect the Vertex Array Object state.\r\n *\r\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\r\n *\r\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\r\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\r\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\r\n *\r\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\r\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\r\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\r\n *    now attribute D's location.\r\n *\r\n *    So, you can pass in both shader 1 and shader 2's programInfo\r\n *\r\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\r\n *\r\n * @memberOf module:twgl/vertexArrays\r\n */\r\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\r\n  const vao = gl.createVertexArray();\r\n  gl.bindVertexArray(vao);\r\n  if (!programInfos.length) {\r\n    programInfos = [programInfos];\r\n  }\r\n  programInfos.forEach(function(programInfo) {\r\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\r\n  });\r\n  gl.bindVertexArray(null);\r\n  return {\r\n    numElements: bufferInfo.numElements,\r\n    elementType: bufferInfo.elementType,\r\n    vertexArrayObject: vao,\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a vertex array object and then sets the attributes on it\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\r\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\r\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\r\n * @memberOf module:twgl/vertexArrays\r\n */\r\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\r\n  const vao = gl.createVertexArray();\r\n  gl.bindVertexArray(vao);\r\n  programs.setAttributes(setters, attribs);\r\n  if (indices) {\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\r\n  }\r\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\r\n  // like when creating buffers for other stuff will mess up this VAO's binding\r\n  gl.bindVertexArray(null);\r\n  return vao;\r\n}\r\n\r\n/**\r\n * Creates a vertex array object and then sets the attributes\r\n * on it\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\r\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\r\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\r\n * @memberOf module:twgl/vertexArrays\r\n */\r\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\r\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\r\n}\r\n\r\nexport {\r\n  createVertexArrayInfo,\r\n  createVAOAndSetAttributes,\r\n  createVAOFromBufferInfo,\r\n};\r\n\r\n"],"sourceRoot":""}